{"type": "lattice-land", "lattice-land": "start"}
{"type": "statistics", "statistics": {"configuration": "org-choco-choco_v4.10.18_hoist-benchmark_PU_3_2_1_64cores_64threads_timeout1200000ms", "problem": "hoist-benchmark", "model": "../data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "data_file": "../data/mzn-challenge/2024/hoist-benchmark/PU_3_2_1.dzn", "mzn_solver": "org.choco.choco", "version": "v4.10.18", "timeout_ms": "1200000", "datetime": "2025-03-12T12:06:43.864677", "status": "UNKNOWN", "cores": "64", "threads": "64"}}
cpu-bind=MASK - aion-0116, task  0  0 [2801865]: mask 0xffffffffffffffff set
{"type": "warning", "location": {"filename": "/mnt/aiongpfs/users/ptalbot/lattice-land/bench/benchmarks/data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "firstLine": 102, "firstColumn": 50, "lastLine": 102, "lastColumn": 53}, "message": "variable `k` shadows variable with the same name in line 102.66"}
{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 4173, "flatIntVars": 145, "flatBoolConstraints": 1998, "flatIntConstraints": 3689, "evaluatedHalfReifiedConstraints": 3507, "method": "minimize", "flatTime": 0.301577}}
{"type": "comment", "comment": "%% Choco 250127_16:13\n"}
{"type": "statistics", "statistics": {"initTime": 6.519, "solveTime": 4.555, "solutions": 1, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 2595, "nodes": 514, "failures": 22, "restarts": 2, "peakDepth": 272}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 986, 1153, 1270, 1322, 1502, 1614, 1756, 1868, 1923, 2006, 2088, 2155, 2307, 2474, 2591, 48, 228, 340, 482, 594, 649, 732, 871, 938, 1090, 1418, 1565, 1647]);\nobjective = 2595;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 986, 1153, 1270, 1322, 1502, 1614, 1756, 1868, 1923, 2006, 2088, 2155, 2307, 2474, 2591, 48, 228, 340, 482, 594, 649, 732, 871, 938, 1090, 1418, 1565, 1647]);\nobjective = 2595;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 986, 1153, 1270, 1322, 1502, 1614, 1756, 1868, 1923, 2006, 2088, 2155, 2307, 2474, 2591, 48, 228, 340, 482, 594, 649, 732, 871, 938, 1090, 1418, 1565, 1647],  "objective" : 2595,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],  "_objective" : 2595}}, "sections": ["default", "raw", "json"], "time": 11602}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 4.677, "solutions": 1, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1587, "nodes": 6738, "failures": 837, "restarts": 33, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 693, 775, 858, 89, 41, 158, 210, 404, 516, 658, 770, 825, 908, 1021, 1118, 42, 1238, 1355, 1407, 0, 112, 254, 366, 421, 504, 637, 727, 1186, 958, 1075, 1127]);\nobjective = 1587;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 693, 775, 858, 89, 41, 158, 210, 404, 516, 658, 770, 825, 908, 1021, 1118, 42, 1238, 1355, 1407, 0, 112, 254, 366, 421, 504, 637, 727, 1186, 958, 1075, 1127]);\nobjective = 1587;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 693, 775, 858, 89, 41, 158, 210, 404, 516, 658, 770, 825, 908, 1021, 1118, 42, 1238, 1355, 1407, 0, 112, 254, 366, 421, 504, 637, 727, 1186, 958, 1075, 1127],  "objective" : 1587,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1587}}, "sections": ["default", "raw", "json"], "time": 11688}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 4.716, "solutions": 1, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1476, "nodes": 6721, "failures": 831, "restarts": 33, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 693, 775, 858, 89, 41, 158, 210, 404, 516, 658, 770, 825, 963, 1076, 1173, 296, 1127, 1244, 1296, 0, 112, 254, 366, 421, 504, 637, 727, 1180, 917, 1034, 1086]);\nobjective = 1476;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 693, 775, 858, 89, 41, 158, 210, 404, 516, 658, 770, 825, 963, 1076, 1173, 296, 1127, 1244, 1296, 0, 112, 254, 366, 421, 504, 637, 727, 1180, 917, 1034, 1086]);\nobjective = 1476;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 693, 775, 858, 89, 41, 158, 210, 404, 516, 658, 770, 825, 963, 1076, 1173, 296, 1127, 1244, 1296, 0, 112, 254, 366, 421, 504, 637, 727, 1180, 917, 1034, 1086],  "objective" : 1476,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1476}}, "sections": ["default", "raw", "json"], "time": 11754}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 4.922, "solutions": 2, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1475, "nodes": 7745, "failures": 872, "restarts": 34, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 697, 779, 858, 89, 41, 158, 210, 404, 516, 658, 770, 825, 963, 1076, 1173, 223, 1127, 1244, 1296, 1, 118, 320, 467, 522, 663, 805, 892, 1180, 917, 1034, 1086]);\nobjective = 1475;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 697, 779, 858, 89, 41, 158, 210, 404, 516, 658, 770, 825, 963, 1076, 1173, 223, 1127, 1244, 1296, 1, 118, 320, 467, 522, 663, 805, 892, 1180, 917, 1034, 1086]);\nobjective = 1475;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 697, 779, 858, 89, 41, 158, 210, 404, 516, 658, 770, 825, 963, 1076, 1173, 223, 1127, 1244, 1296, 1, 118, 320, 467, 522, 663, 805, 892, 1180, 917, 1034, 1086],  "objective" : 1475,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1475}}, "sections": ["default", "raw", "json"], "time": 11961}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 5.046, "solutions": 2, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1458, "nodes": 8535, "failures": 889, "restarts": 36, "peakDepth": 245}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 478, 625, 690, 773, 855, 922, 89, 41, 158, 210, 404, 516, 658, 770, 825, 956, 1038, 1118, 42, 1238, 1355, 1407, 129, 241, 383, 495, 550, 633, 723, 807, 1186, 440, 587, 669]);\nobjective = 1458;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 478, 625, 690, 773, 855, 922, 89, 41, 158, 210, 404, 516, 658, 770, 825, 956, 1038, 1118, 42, 1238, 1355, 1407, 129, 241, 383, 495, 550, 633, 723, 807, 1186, 440, 587, 669]);\nobjective = 1458;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 478, 625, 690, 773, 855, 922, 89, 41, 158, 210, 404, 516, 658, 770, 825, 956, 1038, 1118, 42, 1238, 1355, 1407, 129, 241, 383, 495, 550, 633, 723, 807, 1186, 440, 587, 669],  "objective" : 1458,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1458}}, "sections": ["default", "raw", "json"], "time": 12057}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 5.144, "solutions": 3, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1374, "nodes": 9700, "failures": 901, "restarts": 37, "peakDepth": 264}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 478, 625, 690, 773, 855, 922, 89, 41, 158, 210, 404, 516, 658, 770, 825, 956, 1038, 1105, 42, 1154, 1271, 1323, 129, 241, 383, 495, 550, 633, 723, 807, 988, 440, 587, 669]);\nobjective = 1374;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 478, 625, 690, 773, 855, 922, 89, 41, 158, 210, 404, 516, 658, 770, 825, 956, 1038, 1105, 42, 1154, 1271, 1323, 129, 241, 383, 495, 550, 633, 723, 807, 988, 440, 587, 669]);\nobjective = 1374;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 478, 625, 690, 773, 855, 922, 89, 41, 158, 210, 404, 516, 658, 770, 825, 956, 1038, 1105, 42, 1154, 1271, 1323, 129, 241, 383, 495, 550, 633, 723, 807, 988, 440, 587, 669],  "objective" : 1374,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1374}}, "sections": ["default", "raw", "json"], "time": 12154}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 5.137, "solutions": 3, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1347, "nodes": 9130, "failures": 899, "restarts": 37, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 478, 625, 690, 773, 855, 926, 89, 41, 158, 210, 390, 516, 658, 770, 825, 960, 1076, 1173, 281, 1127, 1244, 1296, 129, 241, 419, 545, 600, 723, 805, 892, 1180, 856, 1003, 1055]);\nobjective = 1347;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 478, 625, 690, 773, 855, 926, 89, 41, 158, 210, 390, 516, 658, 770, 825, 960, 1076, 1173, 281, 1127, 1244, 1296, 129, 241, 419, 545, 600, 723, 805, 892, 1180, 856, 1003, 1055]);\nobjective = 1347;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 478, 625, 690, 773, 855, 926, 89, 41, 158, 210, 390, 516, 658, 770, 825, 960, 1076, 1173, 281, 1127, 1244, 1296, 129, 241, 419, 545, 600, 723, 805, 892, 1180, 856, 1003, 1055],  "objective" : 1347,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1347}}, "sections": ["default", "raw", "json"], "time": 12174}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 5.24, "solutions": 4, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1323, "nodes": 10777, "failures": 911, "restarts": 38, "peakDepth": 264}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 341, 543, 685, 740, 853, 989, 1056, 89, 41, 158, 224, 404, 516, 658, 770, 825, 917, 1018, 1105, 52, 1154, 1271, 1323, 180, 292, 476, 623, 688, 803, 885, 952, 974, 440, 587, 639]);\nobjective = 1323;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 341, 543, 685, 740, 853, 989, 1056, 89, 41, 158, 224, 404, 516, 658, 770, 825, 917, 1018, 1105, 52, 1154, 1271, 1323, 180, 292, 476, 623, 688, 803, 885, 952, 974, 440, 587, 639]);\nobjective = 1323;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 341, 543, 685, 740, 853, 989, 1056, 89, 41, 158, 224, 404, 516, 658, 770, 825, 917, 1018, 1105, 52, 1154, 1271, 1323, 180, 292, 476, 623, 688, 803, 885, 952, 974, 440, 587, 639],  "objective" : 1323,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1323}}, "sections": ["default", "raw", "json"], "time": 12250}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 5.244, "solutions": 4, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1296, "nodes": 10286, "failures": 921, "restarts": 39, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 478, 625, 690, 773, 855, 926, 89, 41, 158, 210, 390, 516, 658, 770, 825, 960, 1076, 1173, 332, 1127, 1244, 1296, 180, 292, 434, 546, 601, 723, 805, 892, 1180, 856, 1003, 1055]);\nobjective = 1296;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 478, 625, 690, 773, 855, 926, 89, 41, 158, 210, 390, 516, 658, 770, 825, 960, 1076, 1173, 332, 1127, 1244, 1296, 180, 292, 434, 546, 601, 723, 805, 892, 1180, 856, 1003, 1055]);\nobjective = 1296;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 478, 625, 690, 773, 855, 926, 89, 41, 158, 210, 390, 516, 658, 770, 825, 960, 1076, 1173, 332, 1127, 1244, 1296, 180, 292, 434, 546, 601, 723, 805, 892, 1180, 856, 1003, 1055],  "objective" : 1296,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1296}}, "sections": ["default", "raw", "json"], "time": 12281}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 5.356, "solutions": 5, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1201, "nodes": 11983, "failures": 927, "restarts": 39, "peakDepth": 279}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 341, 543, 685, 740, 853, 989, 1077, 89, 41, 158, 224, 404, 516, 658, 770, 825, 917, 1018, 1106, 57, 1026, 1149, 1201, 180, 292, 476, 623, 688, 803, 885, 952, 974, 440, 587, 639]);\nobjective = 1201;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 341, 543, 685, 740, 853, 989, 1077, 89, 41, 158, 224, 404, 516, 658, 770, 825, 917, 1018, 1106, 57, 1026, 1149, 1201, 180, 292, 476, 623, 688, 803, 885, 952, 974, 440, 587, 639]);\nobjective = 1201;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 341, 543, 685, 740, 853, 989, 1077, 89, 41, 158, 224, 404, 516, 658, 770, 825, 917, 1018, 1106, 57, 1026, 1149, 1201, 180, 292, 476, 623, 688, 803, 885, 952, 974, 440, 587, 639],  "objective" : 1201,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1201}}, "sections": ["default", "raw", "json"], "time": 12366}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 5.491, "solutions": 6, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1043, "nodes": 13663, "failures": 941, "restarts": 41, "peakDepth": 279}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 448, 571, 636, 779, 921, 1003, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 976, 1043, 223, 701, 848, 900, 44, 156, 298, 410, 465, 606, 696, 793, 815, 355, 502, 554]);\nobjective = 1043;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 448, 571, 636, 779, 921, 1003, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 976, 1043, 223, 701, 848, 900, 44, 156, 298, 410, 465, 606, 696, 793, 815, 355, 502, 554]);\nobjective = 1043;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 448, 571, 636, 779, 921, 1003, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 976, 1043, 223, 701, 848, 900, 44, 156, 298, 410, 465, 606, 696, 793, 815, 355, 502, 554],  "objective" : 1043,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1043}}, "sections": ["default", "raw", "json"], "time": 12501}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 7.611, "solutions": 7, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1011, "nodes": 20385, "failures": 1475, "restarts": 68, "peakDepth": 279}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 448, 571, 636, 779, 921, 1003, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 24, 109, 525, 701, 848, 900, 69, 181, 323, 435, 490, 606, 696, 793, 815, 119, 266, 348]);\nobjective = 1011;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 448, 571, 636, 779, 921, 1003, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 24, 109, 525, 701, 848, 900, 69, 181, 323, 435, 490, 606, 696, 793, 815, 119, 266, 348]);\nobjective = 1011;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 448, 571, 636, 779, 921, 1003, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 24, 109, 525, 701, 848, 900, 69, 181, 323, 435, 490, 606, 696, 793, 815, 119, 266, 348],  "objective" : 1011,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1011}}, "sections": ["default", "raw", "json"], "time": 14621}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 7.77, "solutions": 8, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1010, "nodes": 21798, "failures": 1557, "restarts": 73, "peakDepth": 279}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 448, 571, 636, 779, 921, 988, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 24, 110, 526, 701, 848, 900, 70, 182, 324, 436, 491, 606, 696, 793, 815, 104, 221, 273]);\nobjective = 1010;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 448, 571, 636, 779, 921, 988, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 24, 110, 526, 701, 848, 900, 70, 182, 324, 436, 491, 606, 696, 793, 815, 104, 221, 273]);\nobjective = 1010;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 448, 571, 636, 779, 921, 988, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 24, 110, 526, 701, 848, 900, 70, 182, 324, 436, 491, 606, 696, 793, 815, 104, 221, 273],  "objective" : 1010,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1010}}, "sections": ["default", "raw", "json"], "time": 14780}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 8.026999999999999, "solutions": 9, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 984, "nodes": 23291, "failures": 1640, "restarts": 80, "peakDepth": 279}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 850, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 48, 115, 476, 799, 932, 0, 180, 292, 434, 546, 601, 705, 847, 923, 631, 214, 331, 383]);\nobjective = 984;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 850, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 48, 115, 476, 799, 932, 0, 180, 292, 434, 546, 601, 705, 847, 923, 631, 214, 331, 383]);\nobjective = 984;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 850, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 48, 115, 476, 799, 932, 0, 180, 292, 434, 546, 601, 705, 847, 923, 631, 214, 331, 383],  "objective" : 984,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 984}}, "sections": ["default", "raw", "json"], "time": 15037}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 8.125, "solutions": 10, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 975, "nodes": 24434, "failures": 1654, "restarts": 81, "peakDepth": 279}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 850, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 57, 124, 485, 799, 932, 9, 189, 301, 443, 555, 610, 707, 847, 914, 640, 223, 340, 392]);\nobjective = 975;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 850, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 57, 124, 485, 799, 932, 9, 189, 301, 443, 555, 610, 707, 847, 914, 640, 223, 340, 392]);\nobjective = 975;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 850, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 57, 124, 485, 799, 932, 9, 189, 301, 443, 555, 610, 707, 847, 914, 640, 223, 340, 392],  "objective" : 975,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 975}}, "sections": ["default", "raw", "json"], "time": 15134}
{"type": "statistics", "statistics": {"initTime": 6.486, "solveTime": 8.468, "solutions": 11, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 969, "nodes": 26481, "failures": 1735, "restarts": 88, "peakDepth": 279}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 850, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 63, 130, 491, 799, 932, 15, 195, 307, 449, 561, 616, 713, 847, 914, 646, 229, 346, 398]);\nobjective = 969;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 850, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 63, 130, 491, 799, 932, 15, 195, 307, 449, 561, 616, 713, 847, 914, 646, 229, 346, 398]);\nobjective = 969;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 850, 328, 41, 158, 210, 390, 502, 644, 756, 811, 894, 63, 130, 491, 799, 932, 15, 195, 307, 449, 561, 616, 713, 847, 914, 646, 229, 346, 398],  "objective" : 969,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 969}}, "sections": ["default", "raw", "json"], "time": 15478}
{"type": "statistics", "statistics": {"initTime": 6.516, "solveTime": 9.343999999999999, "solutions": 1, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 931, "nodes": 20467, "failures": 7286, "restarts": 74, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 89, 41, 173, 225, 405, 544, 729, 876, 0, 83, 214, 296, 477, 141, 258, 337, 517, 643, 785, 897, 31, 114, 243, 325, 634, 586, 728, 810]);\nobjective = 931;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 89, 41, 173, 225, 405, 544, 729, 876, 0, 83, 214, 296, 477, 141, 258, 337, 517, 643, 785, 897, 31, 114, 243, 325, 634, 586, 728, 810]);\nobjective = 931;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 89, 41, 173, 225, 405, 544, 729, 876, 0, 83, 214, 296, 477, 141, 258, 337, 517, 643, 785, 897, 31, 114, 243, 325, 634, 586, 728, 810],  "objective" : 931,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 931}}, "sections": ["default", "raw", "json"], "time": 16384}
{"type": "statistics", "statistics": {"initTime": 6.516, "solveTime": 9.42, "solutions": 2, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 925, "nodes": 21542, "failures": 7612, "restarts": 75, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 89, 41, 173, 225, 405, 544, 729, 876, 6, 89, 214, 296, 477, 141, 258, 337, 517, 643, 785, 897, 37, 120, 243, 325, 634, 586, 728, 810]);\nobjective = 925;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 89, 41, 173, 225, 405, 544, 729, 876, 6, 89, 214, 296, 477, 141, 258, 337, 517, 643, 785, 897, 37, 120, 243, 325, 634, 586, 728, 810]);\nobjective = 925;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 89, 41, 173, 225, 405, 544, 729, 876, 6, 89, 214, 296, 477, 141, 258, 337, 517, 643, 785, 897, 37, 120, 243, 325, 634, 586, 728, 810],  "objective" : 925,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 925}}, "sections": ["default", "raw", "json"], "time": 16460}
{"type": "statistics", "statistics": {"initTime": 6.516, "solveTime": 10.847, "solutions": 3, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 910, "nodes": 24578, "failures": 8467, "restarts": 109, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 89, 41, 158, 225, 406, 548, 729, 862, 17, 100, 218, 300, 477, 145, 262, 341, 521, 643, 785, 897, 48, 191, 273, 340, 638, 590, 728, 810]);\nobjective = 910;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 89, 41, 158, 225, 406, 548, 729, 862, 17, 100, 218, 300, 477, 145, 262, 341, 521, 643, 785, 897, 48, 191, 273, 340, 638, 590, 728, 810]);\nobjective = 910;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 89, 41, 158, 225, 406, 548, 729, 862, 17, 100, 218, 300, 477, 145, 262, 341, 521, 643, 785, 897, 48, 191, 273, 340, 638, 590, 728, 810],  "objective" : 910,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 910}}, "sections": ["default", "raw", "json"], "time": 17887}
{"type": "statistics", "statistics": {"initTime": 6.516, "solveTime": 11.078, "solutions": 4, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 897, "nodes": 25755, "failures": 8511, "restarts": 112, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 862, 30, 161, 298, 391, 94, 115, 262, 341, 521, 643, 785, 897, 61, 191, 327, 420, 638, 590, 728, 810]);\nobjective = 897;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 862, 30, 161, 298, 391, 94, 115, 262, 341, 521, 643, 785, 897, 61, 191, 327, 420, 638, 590, 728, 810]);\nobjective = 897;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 862, 30, 161, 298, 391, 94, 115, 262, 341, 521, 643, 785, 897, 61, 191, 327, 420, 638, 590, 728, 810],  "objective" : 897,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 897}}, "sections": ["default", "raw", "json"], "time": 18118}
{"type": "statistics", "statistics": {"initTime": 6.516, "solveTime": 11.25, "solutions": 5, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 885, "nodes": 26963, "failures": 8554, "restarts": 116, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 862, 42, 162, 298, 391, 94, 121, 262, 341, 521, 643, 785, 12, 73, 191, 327, 420, 638, 590, 728, 810]);\nobjective = 885;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 862, 42, 162, 298, 391, 94, 121, 262, 341, 521, 643, 785, 12, 73, 191, 327, 420, 638, 590, 728, 810]);\nobjective = 885;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 862, 42, 162, 298, 391, 94, 121, 262, 341, 521, 643, 785, 12, 73, 191, 327, 420, 638, 590, 728, 810],  "objective" : 885,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 885}}, "sections": ["default", "raw", "json"], "time": 18290}
{"type": "statistics", "statistics": {"initTime": 6.516, "solveTime": 11.92, "solutions": 6, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 884, "nodes": 29256, "failures": 8783, "restarts": 132, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 876, 57, 177, 298, 391, 94, 136, 262, 341, 521, 643, 785, 27, 88, 206, 327, 420, 442, 489, 606, 658]);\nobjective = 884;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 876, 57, 177, 298, 391, 94, 136, 262, 341, 521, 643, 785, 27, 88, 206, 327, 420, 442, 489, 606, 658]);\nobjective = 884;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 876, 57, 177, 298, 391, 94, 136, 262, 341, 521, 643, 785, 27, 88, 206, 327, 420, 442, 489, 606, 658],  "objective" : 884,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 884}}, "sections": ["default", "raw", "json"], "time": 18960}
{"type": "statistics", "statistics": {"initTime": 6.516, "solveTime": 12.622, "solutions": 7, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 875, "nodes": 31612, "failures": 8953, "restarts": 144, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 1, 66, 186, 298, 391, 98, 145, 262, 341, 521, 643, 785, 36, 97, 215, 327, 420, 442, 489, 606, 658]);\nobjective = 875;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 1, 66, 186, 298, 391, 98, 145, 262, 341, 521, 643, 785, 36, 97, 215, 327, 420, 442, 489, 606, 658]);\nobjective = 875;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 1, 66, 186, 298, 391, 98, 145, 262, 341, 521, 643, 785, 36, 97, 215, 327, 420, 442, 489, 606, 658],  "objective" : 875,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 875}}, "sections": ["default", "raw", "json"], "time": 19662}
{"type": "statistics", "statistics": {"initTime": 6.516, "solveTime": 12.696, "solutions": 8, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 874, "nodes": 32695, "failures": 8970, "restarts": 145, "peakDepth": 224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 2, 67, 187, 299, 391, 99, 146, 263, 341, 521, 643, 785, 37, 98, 216, 328, 420, 442, 489, 606, 658]);\nobjective = 874;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 2, 67, 187, 299, 391, 99, 146, 263, 341, 521, 643, 785, 37, 98, 216, 328, 420, 442, 489, 606, 658]);\nobjective = 874;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 472, 41, 158, 225, 406, 548, 729, 2, 67, 187, 299, 391, 99, 146, 263, 341, 521, 643, 785, 37, 98, 216, 328, 420, 442, 489, 606, 658],  "objective" : 874,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 874}}, "sections": ["default", "raw", "json"], "time": 19736}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 25.374, "solutions": 5, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 859, "nodes": 39388, "failures": 21763, "restarts": 135, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 478, 625, 690, 773, 44, 123, 556, 818, 85, 164, 390, 516, 658, 770, 825, 109, 251, 348, 42, 271, 418, 489, 719, 2, 162, 309, 364, 448, 560, 654, 199, 407, 524, 598]);\nobjective = 859;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 478, 625, 690, 773, 44, 123, 556, 818, 85, 164, 390, 516, 658, 770, 825, 109, 251, 348, 42, 271, 418, 489, 719, 2, 162, 309, 364, 448, 560, 654, 199, 407, 524, 598]);\nobjective = 859;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 478, 625, 690, 773, 44, 123, 556, 818, 85, 164, 390, 516, 658, 770, 825, 109, 251, 348, 42, 271, 418, 489, 719, 2, 162, 309, 364, 448, 560, 654, 199, 407, 524, 598],  "objective" : 859,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 859}}, "sections": ["default", "raw", "json"], "time": 32411}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 25.506, "solutions": 6, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 853, "nodes": 40567, "failures": 22435, "restarts": 137, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 478, 625, 690, 773, 44, 123, 556, 818, 85, 164, 390, 516, 658, 770, 825, 115, 251, 348, 48, 271, 418, 489, 719, 8, 162, 309, 364, 448, 560, 654, 199, 407, 524, 598]);\nobjective = 853;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 478, 625, 690, 773, 44, 123, 556, 818, 85, 164, 390, 516, 658, 770, 825, 115, 251, 348, 48, 271, 418, 489, 719, 8, 162, 309, 364, 448, 560, 654, 199, 407, 524, 598]);\nobjective = 853;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 478, 625, 690, 773, 44, 123, 556, 818, 85, 164, 390, 516, 658, 770, 825, 115, 251, 348, 48, 271, 418, 489, 719, 8, 162, 309, 364, 448, 560, 654, 199, 407, 524, 598],  "objective" : 853,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 853}}, "sections": ["default", "raw", "json"], "time": 32542}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 28.273, "solutions": 7, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 843, "nodes": 45290, "failures": 24177, "restarts": 184, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 478, 625, 680, 763, 44, 123, 556, 808, 85, 164, 390, 516, 713, 0, 55, 138, 251, 348, 735, 271, 418, 489, 693, 814, 173, 309, 364, 448, 560, 654, 210, 407, 524, 598]);\nobjective = 843;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 478, 625, 680, 763, 44, 123, 556, 808, 85, 164, 390, 516, 713, 0, 55, 138, 251, 348, 735, 271, 418, 489, 693, 814, 173, 309, 364, 448, 560, 654, 210, 407, 524, 598]);\nobjective = 843;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 478, 625, 680, 763, 44, 123, 556, 808, 85, 164, 390, 516, 713, 0, 55, 138, 251, 348, 735, 271, 418, 489, 693, 814, 173, 309, 364, 448, 560, 654, 210, 407, 524, 598],  "objective" : 843,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 843}}, "sections": ["default", "raw", "json"], "time": 35309}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 32.066, "solutions": 8, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 834, "nodes": 52653, "failures": 26957, "restarts": 239, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 478, 615, 670, 753, 44, 123, 556, 798, 85, 164, 390, 516, 713, 0, 55, 138, 251, 348, 735, 271, 418, 489, 693, 805, 173, 309, 364, 448, 560, 654, 210, 407, 524, 598]);\nobjective = 834;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 478, 615, 670, 753, 44, 123, 556, 798, 85, 164, 390, 516, 713, 0, 55, 138, 251, 348, 735, 271, 418, 489, 693, 805, 173, 309, 364, 448, 560, 654, 210, 407, 524, 598]);\nobjective = 834;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 478, 615, 670, 753, 44, 123, 556, 798, 85, 164, 390, 516, 713, 0, 55, 138, 251, 348, 735, 271, 418, 489, 693, 805, 173, 309, 364, 448, 560, 654, 210, 407, 524, 598],  "objective" : 834,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 834}}, "sections": ["default", "raw", "json"], "time": 39103}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 32.356, "solutions": 9, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 833, "nodes": 54047, "failures": 27061, "restarts": 245, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 478, 615, 670, 753, 44, 123, 556, 798, 85, 164, 390, 516, 713, 1, 56, 139, 251, 348, 735, 271, 418, 489, 693, 805, 174, 309, 364, 448, 560, 654, 211, 407, 524, 598]);\nobjective = 833;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 478, 615, 670, 753, 44, 123, 556, 798, 85, 164, 390, 516, 713, 1, 56, 139, 251, 348, 735, 271, 418, 489, 693, 805, 174, 309, 364, 448, 560, 654, 211, 407, 524, 598]);\nobjective = 833;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 478, 615, 670, 753, 44, 123, 556, 798, 85, 164, 390, 516, 713, 1, 56, 139, 251, 348, 735, 271, 418, 489, 693, 805, 174, 309, 364, 448, 560, 654, 211, 407, 524, 598],  "objective" : 833,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 833}}, "sections": ["default", "raw", "json"], "time": 39393}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 35.554, "solutions": 10, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 825, "nodes": 59421, "failures": 29194, "restarts": 296, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 478, 605, 660, 743, 44, 123, 546, 788, 85, 164, 390, 505, 693, 9, 64, 147, 251, 348, 735, 271, 418, 489, 693, 805, 182, 309, 364, 448, 560, 654, 219, 407, 524, 598]);\nobjective = 825;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 478, 605, 660, 743, 44, 123, 546, 788, 85, 164, 390, 505, 693, 9, 64, 147, 251, 348, 735, 271, 418, 489, 693, 805, 182, 309, 364, 448, 560, 654, 219, 407, 524, 598]);\nobjective = 825;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 478, 605, 660, 743, 44, 123, 546, 788, 85, 164, 390, 505, 693, 9, 64, 147, 251, 348, 735, 271, 418, 489, 693, 805, 182, 309, 364, 448, 560, 654, 219, 407, 524, 598],  "objective" : 825,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 825}}, "sections": ["default", "raw", "json"], "time": 42590}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 36.114, "solutions": 11, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 823, "nodes": 61185, "failures": 29465, "restarts": 308, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 478, 605, 660, 743, 44, 123, 546, 788, 85, 164, 390, 505, 693, 822, 64, 147, 251, 348, 757, 271, 418, 489, 715, 34, 182, 309, 364, 448, 560, 654, 219, 407, 524, 598]);\nobjective = 823;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 478, 605, 660, 743, 44, 123, 546, 788, 85, 164, 390, 505, 693, 822, 64, 147, 251, 348, 757, 271, 418, 489, 715, 34, 182, 309, 364, 448, 560, 654, 219, 407, 524, 598]);\nobjective = 823;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 478, 605, 660, 743, 44, 123, 546, 788, 85, 164, 390, 505, 693, 822, 64, 147, 251, 348, 757, 271, 418, 489, 715, 34, 182, 309, 364, 448, 560, 654, 219, 407, 524, 598],  "objective" : 823,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 823}}, "sections": ["default", "raw", "json"], "time": 43150}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 41.558, "solutions": 12, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 819, "nodes": 69326, "failures": 32865, "restarts": 368, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 454, 601, 656, 739, 44, 123, 542, 784, 85, 164, 390, 502, 693, 818, 64, 147, 251, 348, 757, 271, 418, 489, 715, 34, 182, 309, 364, 448, 560, 654, 219, 407, 524, 598]);\nobjective = 819;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 454, 601, 656, 739, 44, 123, 542, 784, 85, 164, 390, 502, 693, 818, 64, 147, 251, 348, 757, 271, 418, 489, 715, 34, 182, 309, 364, 448, 560, 654, 219, 407, 524, 598]);\nobjective = 819;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 454, 601, 656, 739, 44, 123, 542, 784, 85, 164, 390, 502, 693, 818, 64, 147, 251, 348, 757, 271, 418, 489, 715, 34, 182, 309, 364, 448, 560, 654, 219, 407, 524, 598],  "objective" : 819,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 819}}, "sections": ["default", "raw", "json"], "time": 48594}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 43.153, "solutions": 13, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 818, "nodes": 73192, "failures": 33931, "restarts": 403, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 454, 601, 656, 758, 44, 123, 542, 784, 85, 164, 390, 502, 689, 4, 69, 166, 251, 348, 99, 271, 418, 489, 718, 39, 201, 321, 386, 529, 611, 705, 727, 429, 567, 649]);\nobjective = 818;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 454, 601, 656, 758, 44, 123, 542, 784, 85, 164, 390, 502, 689, 4, 69, 166, 251, 348, 99, 271, 418, 489, 718, 39, 201, 321, 386, 529, 611, 705, 727, 429, 567, 649]);\nobjective = 818;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 454, 601, 656, 758, 44, 123, 542, 784, 85, 164, 390, 502, 689, 4, 69, 166, 251, 348, 99, 271, 418, 489, 718, 39, 201, 321, 386, 529, 611, 705, 727, 429, 567, 649],  "objective" : 818,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 818}}, "sections": ["default", "raw", "json"], "time": 50190}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 43.242, "solutions": 14, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 804, "nodes": 74299, "failures": 33969, "restarts": 405, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 462, 601, 656, 758, 44, 123, 542, 762, 85, 164, 390, 502, 689, 4, 69, 166, 251, 348, 99, 282, 429, 511, 718, 39, 201, 321, 386, 470, 582, 676, 698, 429, 546, 620]);\nobjective = 804;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 462, 601, 656, 758, 44, 123, 542, 762, 85, 164, 390, 502, 689, 4, 69, 166, 251, 348, 99, 282, 429, 511, 718, 39, 201, 321, 386, 470, 582, 676, 698, 429, 546, 620]);\nobjective = 804;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 462, 601, 656, 758, 44, 123, 542, 762, 85, 164, 390, 502, 689, 4, 69, 166, 251, 348, 99, 282, 429, 511, 718, 39, 201, 321, 386, 470, 582, 676, 698, 429, 546, 620],  "objective" : 804,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 804}}, "sections": ["default", "raw", "json"], "time": 50278}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 44.222, "solutions": 15, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 801, "nodes": 76672, "failures": 34373, "restarts": 428, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 462, 598, 653, 755, 44, 123, 539, 762, 85, 164, 387, 499, 686, 4, 69, 166, 251, 348, 99, 282, 429, 511, 715, 39, 201, 321, 386, 470, 582, 676, 698, 429, 546, 620]);\nobjective = 801;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 462, 598, 653, 755, 44, 123, 539, 762, 85, 164, 387, 499, 686, 4, 69, 166, 251, 348, 99, 282, 429, 511, 715, 39, 201, 321, 386, 470, 582, 676, 698, 429, 546, 620]);\nobjective = 801;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 462, 598, 653, 755, 44, 123, 539, 762, 85, 164, 387, 499, 686, 4, 69, 166, 251, 348, 99, 282, 429, 511, 715, 39, 201, 321, 386, 470, 582, 676, 698, 429, 546, 620],  "objective" : 801,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 801}}, "sections": ["default", "raw", "json"], "time": 51259}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 49.756, "solutions": 16, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 794, "nodes": 84137, "failures": 38464, "restarts": 491, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 730, 762, 85, 164, 387, 516, 658, 6, 71, 185, 268, 348, 356, 114, 232, 284, 489, 631, 39, 152, 217, 324, 431, 524, 546, 478, 600, 659]);\nobjective = 794;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 730, 762, 85, 164, 387, 516, 658, 6, 71, 185, 268, 348, 356, 114, 232, 284, 489, 631, 39, 152, 217, 324, 431, 524, 546, 478, 600, 659]);\nobjective = 794;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 730, 762, 85, 164, 387, 516, 658, 6, 71, 185, 268, 348, 356, 114, 232, 284, 489, 631, 39, 152, 217, 324, 431, 524, 546, 478, 600, 659],  "objective" : 794,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 794}}, "sections": ["default", "raw", "json"], "time": 56792}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 49.91, "solutions": 17, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 788, "nodes": 85354, "failures": 38580, "restarts": 494, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 730, 726, 85, 164, 387, 516, 658, 6, 71, 185, 268, 348, 356, 114, 232, 284, 489, 631, 39, 152, 217, 324, 431, 524, 546, 478, 600, 659]);\nobjective = 788;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 730, 726, 85, 164, 387, 516, 658, 6, 71, 185, 268, 348, 356, 114, 232, 284, 489, 631, 39, 152, 217, 324, 431, 524, 546, 478, 600, 659]);\nobjective = 788;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 730, 726, 85, 164, 387, 516, 658, 6, 71, 185, 268, 348, 356, 114, 232, 284, 489, 631, 39, 152, 217, 324, 431, 524, 546, 478, 600, 659],  "objective" : 788,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 788}}, "sections": ["default", "raw", "json"], "time": 56946}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 50.047, "solutions": 18, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 783, "nodes": 86559, "failures": 38602, "restarts": 496, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 730, 726, 85, 164, 387, 516, 658, 6, 71, 185, 268, 348, 356, 114, 232, 284, 489, 631, 39, 152, 217, 324, 431, 524, 546, 478, 600, 659]);\nobjective = 783;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 730, 726, 85, 164, 387, 516, 658, 6, 71, 185, 268, 348, 356, 114, 232, 284, 489, 631, 39, 152, 217, 324, 431, 524, 546, 478, 600, 659]);\nobjective = 783;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 730, 726, 85, 164, 387, 516, 658, 6, 71, 185, 268, 348, 356, 114, 232, 284, 489, 631, 39, 152, 217, 324, 431, 524, 546, 478, 600, 659],  "objective" : 783,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 783}}, "sections": ["default", "raw", "json"], "time": 57084}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 65.81699999999999, "solutions": 19, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 774, "nodes": 106543, "failures": 53469, "restarts": 585, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 726, 85, 164, 387, 520, 662, 0, 65, 179, 268, 348, 551, 108, 232, 302, 493, 635, 33, 146, 211, 342, 431, 524, 241, 478, 610, 663]);\nobjective = 774;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 726, 85, 164, 387, 520, 662, 0, 65, 179, 268, 348, 551, 108, 232, 302, 493, 635, 33, 146, 211, 342, 431, 524, 241, 478, 610, 663]);\nobjective = 774;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 726, 85, 164, 387, 520, 662, 0, 65, 179, 268, 348, 551, 108, 232, 302, 493, 635, 33, 146, 211, 342, 431, 524, 241, 478, 610, 663],  "objective" : 774,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 774}}, "sections": ["default", "raw", "json"], "time": 72853}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 67.029, "solutions": 20, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 773, "nodes": 109124, "failures": 54321, "restarts": 610, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 726, 85, 164, 387, 520, 662, 1, 66, 180, 268, 348, 551, 109, 232, 303, 493, 635, 34, 147, 212, 343, 431, 524, 242, 478, 610, 663]);\nobjective = 773;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 726, 85, 164, 387, 520, 662, 1, 66, 180, 268, 348, 551, 109, 232, 303, 493, 635, 34, 147, 212, 343, 431, 524, 242, 478, 610, 663]);\nobjective = 773;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 726, 85, 164, 387, 520, 662, 1, 66, 180, 268, 348, 551, 109, 232, 303, 493, 635, 34, 147, 212, 343, 431, 524, 242, 478, 610, 663],  "objective" : 773,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 773}}, "sections": ["default", "raw", "json"], "time": 74066}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 67.846, "solutions": 21, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 768, "nodes": 110955, "failures": 54566, "restarts": 626, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 1, 66, 180, 268, 348, 573, 109, 232, 303, 531, 657, 34, 147, 212, 343, 434, 531, 242, 485, 632, 685]);\nobjective = 768;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 1, 66, 180, 268, 348, 573, 109, 232, 303, 531, 657, 34, 147, 212, 343, 434, 531, 242, 485, 632, 685]);\nobjective = 768;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 1, 66, 180, 268, 348, 573, 109, 232, 303, 531, 657, 34, 147, 212, 343, 434, 531, 242, 485, 632, 685],  "objective" : 768,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 768}}, "sections": ["default", "raw", "json"], "time": 74883}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 68.116, "solutions": 22, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 767, "nodes": 112177, "failures": 54617, "restarts": 631, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 2, 67, 181, 268, 348, 573, 110, 232, 304, 531, 657, 35, 148, 213, 344, 434, 531, 243, 485, 632, 685]);\nobjective = 767;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 2, 67, 181, 268, 348, 573, 110, 232, 304, 531, 657, 35, 148, 213, 344, 434, 531, 243, 485, 632, 685]);\nobjective = 767;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 2, 67, 181, 268, 348, 573, 110, 232, 304, 531, 657, 35, 148, 213, 344, 434, 531, 243, 485, 632, 685],  "objective" : 767,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 767}}, "sections": ["default", "raw", "json"], "time": 75153}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 68.62, "solutions": 23, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 766, "nodes": 113833, "failures": 54756, "restarts": 641, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 3, 68, 182, 268, 348, 573, 111, 232, 305, 531, 657, 36, 149, 214, 345, 434, 531, 244, 485, 632, 685]);\nobjective = 766;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 3, 68, 182, 268, 348, 573, 111, 232, 305, 531, 657, 36, 149, 214, 345, 434, 531, 244, 485, 632, 685]);\nobjective = 766;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 3, 68, 182, 268, 348, 573, 111, 232, 305, 531, 657, 36, 149, 214, 345, 434, 531, 244, 485, 632, 685],  "objective" : 766,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 766}}, "sections": ["default", "raw", "json"], "time": 75657}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 70.40300000000001, "solutions": 24, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 765, "nodes": 116291, "failures": 55281, "restarts": 668, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 4, 69, 183, 268, 348, 573, 112, 232, 306, 531, 657, 37, 150, 215, 346, 434, 531, 245, 485, 632, 685]);\nobjective = 765;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 4, 69, 183, 268, 348, 573, 112, 232, 306, 531, 657, 37, 150, 215, 346, 434, 531, 245, 485, 632, 685]);\nobjective = 765;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 4, 69, 183, 268, 348, 573, 112, 232, 306, 531, 657, 37, 150, 215, 346, 434, 531, 245, 485, 632, 685],  "objective" : 765,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 765}}, "sections": ["default", "raw", "json"], "time": 77439}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 71.42100000000001, "solutions": 25, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 764, "nodes": 117859, "failures": 55465, "restarts": 680, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 5, 70, 184, 268, 348, 573, 113, 232, 307, 531, 657, 38, 151, 216, 347, 434, 531, 246, 485, 632, 685]);\nobjective = 764;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 5, 70, 184, 268, 348, 573, 113, 232, 307, 531, 657, 38, 151, 216, 347, 434, 531, 246, 485, 632, 685]);\nobjective = 764;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 499, 653, 5, 70, 184, 268, 348, 573, 113, 232, 307, 531, 657, 38, 151, 216, 347, 434, 531, 246, 485, 632, 685],  "objective" : 764,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 764}}, "sections": ["default", "raw", "json"], "time": 78458}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 97.09, "solutions": 26, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 763, "nodes": 157903, "failures": 89783, "restarts": 786, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 516, 658, 7, 72, 186, 268, 348, 671, 115, 232, 307, 489, 631, 40, 153, 218, 347, 456, 550, 572, 273, 420, 494]);\nobjective = 763;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 516, 658, 7, 72, 186, 268, 348, 671, 115, 232, 307, 489, 631, 40, 153, 218, 347, 456, 550, 572, 273, 420, 494]);\nobjective = 763;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 731, 85, 164, 387, 516, 658, 7, 72, 186, 268, 348, 671, 115, 232, 307, 489, 631, 40, 153, 218, 347, 456, 550, 572, 273, 420, 494],  "objective" : 763,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 763}}, "sections": ["default", "raw", "json"], "time": 104126}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 97.346, "solutions": 27, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 762, "nodes": 159088, "failures": 90615, "restarts": 790, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 723, 85, 164, 387, 516, 658, 8, 73, 187, 269, 348, 671, 116, 233, 307, 489, 631, 41, 154, 219, 347, 456, 550, 572, 273, 420, 494]);\nobjective = 762;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 723, 85, 164, 387, 516, 658, 8, 73, 187, 269, 348, 671, 116, 233, 307, 489, 631, 41, 154, 219, 347, 456, 550, 572, 273, 420, 494]);\nobjective = 762;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 723, 85, 164, 387, 516, 658, 8, 73, 187, 269, 348, 671, 116, 233, 307, 489, 631, 41, 154, 219, 347, 456, 550, 572, 273, 420, 494],  "objective" : 762,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 762}}, "sections": ["default", "raw", "json"], "time": 104383}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 97.482, "solutions": 28, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 761, "nodes": 160238, "failures": 90648, "restarts": 793, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 723, 85, 164, 387, 516, 658, 9, 74, 188, 270, 348, 671, 117, 234, 307, 489, 631, 42, 155, 220, 347, 456, 550, 572, 273, 420, 494]);\nobjective = 761;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 723, 85, 164, 387, 516, 658, 9, 74, 188, 270, 348, 671, 117, 234, 307, 489, 631, 42, 155, 220, 347, 456, 550, 572, 273, 420, 494]);\nobjective = 761;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 723, 85, 164, 387, 516, 658, 9, 74, 188, 270, 348, 671, 117, 234, 307, 489, 631, 42, 155, 220, 347, 456, 550, 572, 273, 420, 494],  "objective" : 761,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 761}}, "sections": ["default", "raw", "json"], "time": 104518}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 97.66800000000001, "solutions": 29, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 760, "nodes": 161371, "failures": 90681, "restarts": 796, "peakDepth": 225}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 723, 85, 164, 387, 516, 658, 10, 75, 189, 271, 348, 671, 118, 235, 307, 489, 631, 43, 156, 221, 347, 456, 550, 572, 273, 420, 494]);\nobjective = 760;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 723, 85, 164, 387, 516, 658, 10, 75, 189, 271, 348, 671, 118, 235, 307, 489, 631, 43, 156, 221, 347, 456, 550, 572, 273, 420, 494]);\nobjective = 760;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 565, 620, 703, 44, 123, 375, 723, 85, 164, 387, 516, 658, 10, 75, 189, 271, 348, 671, 118, 235, 307, 489, 631, 43, 156, 221, 347, 456, 550, 572, 273, 420, 494],  "objective" : 760,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 760}}, "sections": ["default", "raw", "json"], "time": 104705}
{"type": "statistics", "statistics": {"initTime": 6.223, "solveTime": 1194.468, "solutions": 29, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 760, "nodes": 1224391, "failures": 1144646, "restarts": 972, "peakDepth": 225}}
{"type": "comment", "comment": "%% Unexpected resolution interruption!\n"}
{"type": "statistics", "statistics": {"nSolutions": 49}}
