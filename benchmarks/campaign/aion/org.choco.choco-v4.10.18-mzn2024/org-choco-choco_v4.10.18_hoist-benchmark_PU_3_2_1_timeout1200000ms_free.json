{"type": "lattice-land", "lattice-land": "start"}
{"type": "statistics", "statistics": {"configuration": "org-choco-choco_v4.10.18_hoist-benchmark_PU_3_2_1_timeout1200000ms_free", "problem": "hoist-benchmark", "model": "../data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "data_file": "../data/mzn-challenge/2024/hoist-benchmark/PU_3_2_1.dzn", "mzn_solver": "org.choco.choco", "version": "v4.10.18", "timeout_ms": "1200000", "datetime": "2025-03-12T11:46:47.083414", "status": "UNKNOWN", "cores": "1", "threads": "1"}}
cpu-bind=MASK - aion-0192, task  0  0 [2845920]: mask 0x400 set
{"type": "warning", "location": {"filename": "/mnt/aiongpfs/users/ptalbot/lattice-land/bench/benchmarks/data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "firstLine": 102, "firstColumn": 50, "lastLine": 102, "lastColumn": 53}, "message": "variable `k` shadows variable with the same name in line 102.66"}
{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 4173, "flatIntVars": 145, "flatBoolConstraints": 1998, "flatIntConstraints": 3689, "evaluatedHalfReifiedConstraints": 3507, "method": "minimize", "flatTime": 0.337061}}
{"type": "comment", "comment": "%% Choco 250127_16:13\n"}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 48.286, "solutions": 1, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 2595, "nodes": 8132, "failures": 6503, "restarts": 8, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 475, 587, 642, 725, 807, 874, 1026, 2387, 2534, 0, 210, 322, 470, 608, 673, 756, 838, 905, 2318, 2037, 2184, 2266, 2496, 43, 185, 297, 352, 435, 548, 645, 78, 102, 249, 331]);\nobjective = 2595;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 475, 587, 642, 725, 807, 874, 1026, 2387, 2534, 0, 210, 322, 470, 608, 673, 756, 838, 905, 2318, 2037, 2184, 2266, 2496, 43, 185, 297, 352, 435, 548, 645, 78, 102, 249, 331]);\nobjective = 2595;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 475, 587, 642, 725, 807, 874, 1026, 2387, 2534, 0, 210, 322, 470, 608, 673, 756, 838, 905, 2318, 2037, 2184, 2266, 2496, 43, 185, 297, 352, 435, 548, 645, 78, 102, 249, 331],  "objective" : 2595,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 2595}}, "sections": ["default", "raw", "json"], "time": 50056}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 48.391, "solutions": 2, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 2586, "nodes": 9085, "failures": 7000, "restarts": 9, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 475, 587, 642, 725, 807, 874, 1026, 2387, 2534, 0, 210, 322, 470, 608, 673, 756, 838, 905, 2318, 2037, 2184, 2266, 2496, 43, 185, 297, 352, 435, 548, 645, 78, 102, 249, 331]);\nobjective = 2586;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 475, 587, 642, 725, 807, 874, 1026, 2387, 2534, 0, 210, 322, 470, 608, 673, 756, 838, 905, 2318, 2037, 2184, 2266, 2496, 43, 185, 297, 352, 435, 548, 645, 78, 102, 249, 331]);\nobjective = 2586;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 475, 587, 642, 725, 807, 874, 1026, 2387, 2534, 0, 210, 322, 470, 608, 673, 756, 838, 905, 2318, 2037, 2184, 2266, 2496, 43, 185, 297, 352, 435, 548, 645, 78, 102, 249, 331],  "objective" : 2586,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 2586}}, "sections": ["default", "raw", "json"], "time": 50149}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 48.503, "solutions": 3, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1343, "nodes": 10002, "failures": 7500, "restarts": 10, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 807, 874, 1195, 1147, 1264, 0, 210, 322, 470, 608, 673, 756, 877, 974, 996, 928, 1045, 1097, 1297, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1343;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 807, 874, 1195, 1147, 1264, 0, 210, 322, 470, 608, 673, 756, 877, 974, 996, 928, 1045, 1097, 1297, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1343;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 725, 807, 874, 1195, 1147, 1264, 0, 210, 322, 470, 608, 673, 756, 877, 974, 996, 928, 1045, 1097, 1297, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354],  "objective" : 1343,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1343}}, "sections": ["default", "raw", "json"], "time": 50254}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 48.641, "solutions": 4, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1316, "nodes": 10914, "failures": 8001, "restarts": 11, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 785, 927, 1024, 788, 1120, 1237, 0, 210, 322, 470, 608, 673, 756, 884, 974, 1173, 841, 988, 1070, 1270, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1316;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 785, 927, 1024, 788, 1120, 1237, 0, 210, 322, 470, 608, 673, 756, 884, 974, 1173, 841, 988, 1070, 1270, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1316;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 785, 927, 1024, 788, 1120, 1237, 0, 210, 322, 470, 608, 673, 756, 884, 974, 1173, 841, 988, 1070, 1270, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354],  "objective" : 1316,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1316}}, "sections": ["default", "raw", "json"], "time": 50398}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 48.701, "solutions": 5, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1315, "nodes": 11818, "failures": 8501, "restarts": 12, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 785, 927, 1023, 788, 1119, 1236, 0, 210, 322, 470, 608, 673, 756, 884, 974, 1173, 841, 988, 1069, 1269, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1315;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 785, 927, 1023, 788, 1119, 1236, 0, 210, 322, 470, 608, 673, 756, 884, 974, 1173, 841, 988, 1069, 1269, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1315;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 785, 927, 1023, 788, 1119, 1236, 0, 210, 322, 470, 608, 673, 756, 884, 974, 1173, 841, 988, 1069, 1269, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354],  "objective" : 1315,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1315}}, "sections": ["default", "raw", "json"], "time": 50459}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 49.289, "solutions": 6, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1314, "nodes": 13604, "failures": 9549, "restarts": 14, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 785, 927, 994, 788, 1090, 1232, 0, 210, 322, 470, 608, 673, 756, 884, 954, 1173, 841, 988, 1040, 1265, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1314;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 785, 927, 994, 788, 1090, 1232, 0, 210, 322, 470, 608, 673, 756, 884, 954, 1173, 841, 988, 1040, 1265, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1314;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 785, 927, 994, 788, 1090, 1232, 0, 210, 322, 470, 608, 673, 756, 884, 954, 1173, 841, 988, 1040, 1265, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354],  "objective" : 1314,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1314}}, "sections": ["default", "raw", "json"], "time": 51047}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 49.341, "solutions": 7, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1311, "nodes": 14471, "failures": 10000, "restarts": 15, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 785, 927, 994, 788, 1090, 1232, 0, 210, 322, 470, 608, 673, 756, 884, 954, 1173, 841, 988, 1040, 1265, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1311;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 785, 927, 994, 788, 1090, 1232, 0, 210, 322, 470, 608, 673, 756, 884, 954, 1173, 841, 988, 1040, 1265, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1311;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 785, 927, 994, 788, 1090, 1232, 0, 210, 322, 470, 608, 673, 756, 884, 954, 1173, 841, 988, 1040, 1265, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354],  "objective" : 1311,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1311}}, "sections": ["default", "raw", "json"], "time": 51102}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 49.397, "solutions": 8, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1310, "nodes": 15370, "failures": 10501, "restarts": 16, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 755, 897, 994, 542, 1111, 1258, 0, 210, 322, 470, 608, 673, 756, 884, 954, 794, 841, 988, 1040, 1220, 43, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1310;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 755, 897, 994, 542, 1111, 1258, 0, 210, 322, 470, 608, 673, 756, 884, 954, 794, 841, 988, 1040, 1220, 43, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1310;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 755, 897, 994, 542, 1111, 1258, 0, 210, 322, 470, 608, 673, 756, 884, 954, 794, 841, 988, 1040, 1220, 43, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354],  "objective" : 1310,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1310}}, "sections": ["default", "raw", "json"], "time": 51155}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 49.491, "solutions": 9, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1286, "nodes": 16318, "failures": 11034, "restarts": 17, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 755, 897, 994, 542, 1090, 1207, 0, 210, 322, 470, 608, 673, 756, 884, 954, 794, 841, 988, 1040, 1240, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1286;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 755, 897, 994, 542, 1090, 1207, 0, 210, 322, 470, 608, 673, 756, 884, 954, 794, 841, 988, 1040, 1240, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1286;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 755, 897, 994, 542, 1090, 1207, 0, 210, 322, 470, 608, 673, 756, 884, 954, 794, 841, 988, 1040, 1240, 66, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354],  "objective" : 1286,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1286}}, "sections": ["default", "raw", "json"], "time": 51254}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 49.646, "solutions": 10, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1259, "nodes": 17287, "failures": 11587, "restarts": 18, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 823, 890, 542, 1090, 1207, 0, 210, 322, 470, 608, 673, 816, 922, 1010, 1032, 775, 892, 960, 1160, 43, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1259;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 823, 890, 542, 1090, 1207, 0, 210, 322, 470, 608, 673, 816, 922, 1010, 1032, 775, 892, 960, 1160, 43, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1259;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 725, 823, 890, 542, 1090, 1207, 0, 210, 322, 470, 608, 673, 816, 922, 1010, 1032, 775, 892, 960, 1160, 43, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354],  "objective" : 1259,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1259}}, "sections": ["default", "raw", "json"], "time": 51404}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 49.723, "solutions": 11, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1253, "nodes": 18161, "failures": 12002, "restarts": 19, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 823, 890, 542, 1084, 1201, 0, 210, 322, 470, 608, 673, 816, 922, 1010, 1032, 775, 892, 960, 1160, 43, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1253;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 823, 890, 542, 1084, 1201, 0, 210, 322, 470, 608, 673, 816, 922, 1010, 1032, 775, 892, 960, 1160, 43, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354]);\nobjective = 1253;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 725, 823, 890, 542, 1084, 1201, 0, 210, 322, 470, 608, 673, 816, 922, 1010, 1032, 775, 892, 960, 1160, 43, 208, 320, 375, 505, 643, 710, 101, 125, 272, 354],  "objective" : 1253,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1253}}, "sections": ["default", "raw", "json"], "time": 51476}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 53.35, "solutions": 12, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1206, "nodes": 20118, "failures": 13503, "restarts": 22, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 823, 890, 134, 1084, 1201, 52, 232, 344, 516, 628, 683, 816, 922, 1010, 1032, 775, 892, 960, 1160, 89, 231, 343, 398, 481, 568, 665, 436, 191, 308, 377]);\nobjective = 1206;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 823, 890, 134, 1084, 1201, 52, 232, 344, 516, 628, 683, 816, 922, 1010, 1032, 775, 892, 960, 1160, 89, 231, 343, 398, 481, 568, 665, 436, 191, 308, 377]);\nobjective = 1206;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 725, 823, 890, 134, 1084, 1201, 52, 232, 344, 516, 628, 683, 816, 922, 1010, 1032, 775, 892, 960, 1160, 89, 231, 343, 398, 481, 568, 665, 436, 191, 308, 377],  "objective" : 1206,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1206}}, "sections": ["default", "raw", "json"], "time": 55108}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 53.555, "solutions": 13, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1201, "nodes": 21511, "failures": 14511, "restarts": 23, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 823, 890, 134, 1084, 1201, 52, 232, 344, 516, 628, 683, 816, 922, 1010, 1032, 775, 892, 960, 1148, 89, 231, 343, 398, 481, 568, 665, 436, 191, 308, 377]);\nobjective = 1201;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 440, 587, 642, 725, 823, 890, 134, 1084, 1201, 52, 232, 344, 516, 628, 683, 816, 922, 1010, 1032, 775, 892, 960, 1148, 89, 231, 343, 398, 481, 568, 665, 436, 191, 308, 377]);\nobjective = 1201;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 440, 587, 642, 725, 823, 890, 134, 1084, 1201, 52, 232, 344, 516, 628, 683, 816, 922, 1010, 1032, 775, 892, 960, 1148, 89, 231, 343, 398, 481, 568, 665, 436, 191, 308, 377],  "objective" : 1201,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1201}}, "sections": ["default", "raw", "json"], "time": 55318}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 55.754, "solutions": 14, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1194, "nodes": 22957, "failures": 15502, "restarts": 25, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 823, 890, 134, 1039, 1186, 52, 232, 344, 516, 638, 693, 816, 922, 1010, 728, 775, 892, 960, 1148, 66, 208, 320, 375, 481, 563, 630, 436, 928, 1058, 1110]);\nobjective = 1194;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 823, 890, 134, 1039, 1186, 52, 232, 344, 516, 638, 693, 816, 922, 1010, 728, 775, 892, 960, 1148, 66, 208, 320, 375, 481, 563, 630, 436, 928, 1058, 1110]);\nobjective = 1194;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 823, 890, 134, 1039, 1186, 52, 232, 344, 516, 638, 693, 816, 922, 1010, 728, 775, 892, 960, 1148, 66, 208, 320, 375, 481, 563, 630, 436, 928, 1058, 1110],  "objective" : 1194,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 1194}}, "sections": ["default", "raw", "json"], "time": 57512}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 55.837, "solutions": 15, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1146, "nodes": 23880, "failures": 16000, "restarts": 26, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 784, 851, 134, 1029, 1146, 52, 232, 344, 516, 638, 693, 811, 953, 1049, 977, 736, 853, 905, 1093, 66, 208, 320, 375, 481, 563, 630, 436, 741, 882, 934]);\nobjective = 1146;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 784, 851, 134, 1029, 1146, 52, 232, 344, 516, 638, 693, 811, 953, 1049, 977, 736, 853, 905, 1093, 66, 208, 320, 375, 481, 563, 630, 436, 741, 882, 934]);\nobjective = 1146;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 784, 851, 134, 1029, 1146, 52, 232, 344, 516, 638, 693, 811, 953, 1049, 977, 736, 853, 905, 1093, 66, 208, 320, 375, 481, 563, 630, 436, 741, 882, 934],  "objective" : 1146,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 1146}}, "sections": ["default", "raw", "json"], "time": 57589}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 57.613, "solutions": 16, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1145, "nodes": 24980, "failures": 16672, "restarts": 27, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 1145, 52, 232, 344, 486, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 32]);\nobjective = 1145;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 1145, 52, 232, 344, 486, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 32]);\nobjective = 1145;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 1145, 52, 232, 344, 486, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 32],  "objective" : 1145,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1],  "_objective" : 1145}}, "sections": ["default", "raw", "json"], "time": 59371}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 65.961, "solutions": 17, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1144, "nodes": 27019, "failures": 18000, "restarts": 30, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 1, 53, 233, 345, 487, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 33]);\nobjective = 1144;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 1, 53, 233, 345, 487, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 33]);\nobjective = 1144;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 1, 53, 233, 345, 487, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 33],  "objective" : 1144,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1],  "_objective" : 1144}}, "sections": ["default", "raw", "json"], "time": 67720}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 65.986, "solutions": 18, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1143, "nodes": 27933, "failures": 18938, "restarts": 30, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 2, 54, 234, 346, 488, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 34]);\nobjective = 1143;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 2, 54, 234, 346, 488, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 34]);\nobjective = 1143;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 2, 54, 234, 346, 488, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 34],  "objective" : 1143,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1],  "_objective" : 1143}}, "sections": ["default", "raw", "json"], "time": 67749}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 66.06399999999999, "solutions": 19, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1139, "nodes": 28893, "failures": 19024, "restarts": 31, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 6, 58, 238, 350, 492, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 38]);\nobjective = 1139;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 6, 58, 238, 350, 492, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 38]);\nobjective = 1139;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 6, 58, 238, 350, 492, 607, 672, 815, 952, 1049, 976, 735, 852, 904, 1093, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 38],  "objective" : 1139,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1],  "_objective" : 1139}}, "sections": ["default", "raw", "json"], "time": 67812}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 66.33499999999999, "solutions": 20, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1138, "nodes": 29906, "failures": 19552, "restarts": 32, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 7, 59, 239, 351, 493, 607, 672, 815, 952, 1048, 976, 735, 852, 904, 1092, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 39]);\nobjective = 1138;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 7, 59, 239, 351, 493, 607, 672, 815, 952, 1048, 976, 735, 852, 904, 1092, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 39]);\nobjective = 1138;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 783, 851, 134, 1028, 7, 59, 239, 351, 493, 607, 672, 815, 952, 1048, 976, 735, 852, 904, 1092, 83, 285, 432, 497, 640, 722, 789, 322, 964, 1111, 39],  "objective" : 1138,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1],  "_objective" : 1138}}, "sections": ["default", "raw", "json"], "time": 68090}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 77.75700000000001, "solutions": 21, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1123, "nodes": 33494, "failures": 22500, "restarts": 37, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 537, 1004, 7, 59, 239, 351, 493, 607, 672, 815, 952, 1035, 1057, 735, 852, 904, 1092, 83, 285, 432, 497, 640, 722, 789, 322, 48, 165, 217]);\nobjective = 1123;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 537, 1004, 7, 59, 239, 351, 493, 607, 672, 815, 952, 1035, 1057, 735, 852, 904, 1092, 83, 285, 432, 497, 640, 722, 789, 322, 48, 165, 217]);\nobjective = 1123;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 783, 851, 537, 1004, 7, 59, 239, 351, 493, 607, 672, 815, 952, 1035, 1057, 735, 852, 904, 1092, 83, 285, 432, 497, 640, 722, 789, 322, 48, 165, 217],  "objective" : 1123,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1123}}, "sections": ["default", "raw", "json"], "time": 79510}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 77.806, "solutions": 22, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1115, "nodes": 34469, "failures": 23000, "restarts": 38, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 537, 1004, 7, 59, 239, 351, 493, 607, 672, 815, 952, 1035, 1057, 735, 852, 904, 1084, 83, 285, 432, 497, 640, 722, 789, 322, 48, 165, 217]);\nobjective = 1115;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 851, 537, 1004, 7, 59, 239, 351, 493, 607, 672, 815, 952, 1035, 1057, 735, 852, 904, 1084, 83, 285, 432, 497, 640, 722, 789, 322, 48, 165, 217]);\nobjective = 1115;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 783, 851, 537, 1004, 7, 59, 239, 351, 493, 607, 672, 815, 952, 1035, 1057, 735, 852, 904, 1084, 83, 285, 432, 497, 640, 722, 789, 322, 48, 165, 217],  "objective" : 1115,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1115}}, "sections": ["default", "raw", "json"], "time": 79566}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 93.084, "solutions": 23, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1109, "nodes": 39869, "failures": 27124, "restarts": 44, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 295, 457, 604, 669, 788, 912, 979, 429, 1028, 36, 88, 268, 380, 522, 639, 704, 810, 952, 1035, 837, 556, 673, 738, 967, 0, 142, 254, 309, 392, 509, 576, 179, 625, 769, 851]);\nobjective = 1109;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 295, 457, 604, 669, 788, 912, 979, 429, 1028, 36, 88, 268, 380, 522, 639, 704, 810, 952, 1035, 837, 556, 673, 738, 967, 0, 142, 254, 309, 392, 509, 576, 179, 625, 769, 851]);\nobjective = 1109;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 295, 457, 604, 669, 788, 912, 979, 429, 1028, 36, 88, 268, 380, 522, 639, 704, 810, 952, 1035, 837, 556, 673, 738, 967, 0, 142, 254, 309, 392, 509, 576, 179, 625, 769, 851],  "objective" : 1109,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 1109}}, "sections": ["default", "raw", "json"], "time": 94842}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 94.52800000000001, "solutions": 24, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1108, "nodes": 41500, "failures": 28102, "restarts": 46, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 296, 458, 605, 670, 789, 912, 979, 429, 1028, 37, 89, 269, 381, 523, 640, 705, 810, 952, 1035, 837, 557, 674, 739, 967, 0, 142, 254, 309, 392, 509, 576, 179, 625, 769, 851]);\nobjective = 1108;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 296, 458, 605, 670, 789, 912, 979, 429, 1028, 37, 89, 269, 381, 523, 640, 705, 810, 952, 1035, 837, 557, 674, 739, 967, 0, 142, 254, 309, 392, 509, 576, 179, 625, 769, 851]);\nobjective = 1108;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 296, 458, 605, 670, 789, 912, 979, 429, 1028, 37, 89, 269, 381, 523, 640, 705, 810, 952, 1035, 837, 557, 674, 739, 967, 0, 142, 254, 309, 392, 509, 576, 179, 625, 769, 851],  "objective" : 1108,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 1108}}, "sections": ["default", "raw", "json"], "time": 96279}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 96.38500000000001, "solutions": 25, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1063, "nodes": 43077, "failures": 29000, "restarts": 48, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 789, 912, 979, 242, 1028, 82, 134, 314, 432, 614, 730, 785, 868, 952, 1019, 477, 524, 641, 693, 921, 0, 195, 341, 396, 479, 587, 684, 133, 733, 864, 946]);\nobjective = 1063;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 789, 912, 979, 242, 1028, 82, 134, 314, 432, 614, 730, 785, 868, 952, 1019, 477, 524, 641, 693, 921, 0, 195, 341, 396, 479, 587, 684, 133, 733, 864, 946]);\nobjective = 1063;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 581, 646, 789, 912, 979, 242, 1028, 82, 134, 314, 432, 614, 730, 785, 868, 952, 1019, 477, 524, 641, 693, 921, 0, 195, 341, 396, 479, 587, 684, 133, 733, 864, 946],  "objective" : 1063,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 1063}}, "sections": ["default", "raw", "json"], "time": 98143}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 96.465, "solutions": 26, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1039, "nodes": 44078, "failures": 29506, "restarts": 49, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 743, 825, 918, 231, 1004, 82, 134, 325, 437, 614, 730, 785, 868, 952, 1019, 477, 524, 641, 693, 921, 22, 184, 331, 396, 479, 587, 684, 101, 148, 295, 365]);\nobjective = 1039;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 743, 825, 918, 231, 1004, 82, 134, 325, 437, 614, 730, 785, 868, 952, 1019, 477, 524, 641, 693, 921, 22, 184, 331, 396, 479, 587, 684, 101, 148, 295, 365]);\nobjective = 1039;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 581, 646, 743, 825, 918, 231, 1004, 82, 134, 325, 437, 614, 730, 785, 868, 952, 1019, 477, 524, 641, 693, 921, 22, 184, 331, 396, 479, 587, 684, 101, 148, 295, 365],  "objective" : 1039,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1039}}, "sections": ["default", "raw", "json"], "time": 98213}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 96.57599999999999, "solutions": 27, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 1037, "nodes": 45103, "failures": 30018, "restarts": 50, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 743, 825, 918, 231, 1002, 82, 134, 325, 437, 614, 730, 785, 868, 950, 1019, 477, 524, 641, 693, 921, 24, 184, 331, 396, 479, 587, 684, 101, 148, 295, 365]);\nobjective = 1037;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 743, 825, 918, 231, 1002, 82, 134, 325, 437, 614, 730, 785, 868, 950, 1019, 477, 524, 641, 693, 921, 24, 184, 331, 396, 479, 587, 684, 101, 148, 295, 365]);\nobjective = 1037;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 581, 646, 743, 825, 918, 231, 1002, 82, 134, 325, 437, 614, 730, 785, 868, 950, 1019, 477, 524, 641, 693, 921, 24, 184, 331, 396, 479, 587, 684, 101, 148, 295, 365],  "objective" : 1037,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1037}}, "sections": ["default", "raw", "json"], "time": 98335}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 127.778, "solutions": 28, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 973, "nodes": 50284, "failures": 34586, "restarts": 57, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 743, 825, 918, 138, 872, 34, 86, 295, 437, 614, 730, 785, 868, 973, 97, 477, 524, 641, 693, 921, 60, 215, 331, 396, 479, 587, 684, 506, 195, 328, 380]);\nobjective = 973;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 743, 825, 918, 138, 872, 34, 86, 295, 437, 614, 730, 785, 868, 973, 97, 477, 524, 641, 693, 921, 60, 215, 331, 396, 479, 587, 684, 506, 195, 328, 380]);\nobjective = 973;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 581, 646, 743, 825, 918, 138, 872, 34, 86, 295, 437, 614, 730, 785, 868, 973, 97, 477, 524, 641, 693, 921, 60, 215, 331, 396, 479, 587, 684, 506, 195, 328, 380],  "objective" : 973,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 973}}, "sections": ["default", "raw", "json"], "time": 129530}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 127.815, "solutions": 29, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 969, "nodes": 51200, "failures": 35434, "restarts": 57, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 743, 825, 918, 253, 872, 34, 86, 315, 433, 614, 761, 826, 0, 99, 166, 477, 524, 641, 693, 921, 64, 206, 342, 397, 504, 594, 684, 861, 354, 471, 540]);\nobjective = 969;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 581, 646, 743, 825, 918, 253, 872, 34, 86, 315, 433, 614, 761, 826, 0, 99, 166, 477, 524, 641, 693, 921, 64, 206, 342, 397, 504, 594, 684, 861, 354, 471, 540]);\nobjective = 969;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 581, 646, 743, 825, 918, 253, 872, 34, 86, 315, 433, 614, 761, 826, 0, 99, 166, 477, 524, 641, 693, 921, 64, 206, 342, 397, 504, 594, 684, 861, 354, 471, 540],  "objective" : 969,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 969}}, "sections": ["default", "raw", "json"], "time": 129563}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 128.64, "solutions": 30, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 955, "nodes": 52293, "failures": 36526, "restarts": 58, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 215, 357, 559, 705, 770, 913, 70, 137, 701, 872, 34, 86, 315, 457, 659, 806, 861, 32, 129, 206, 492, 399, 516, 589, 813, 0, 166, 293, 348, 431, 557, 653, 581, 260, 385, 467]);\nobjective = 955;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 215, 357, 559, 705, 770, 913, 70, 137, 701, 872, 34, 86, 315, 457, 659, 806, 861, 32, 129, 206, 492, 399, 516, 589, 813, 0, 166, 293, 348, 431, 557, 653, 581, 260, 385, 467]);\nobjective = 955;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 357, 559, 705, 770, 913, 70, 137, 701, 872, 34, 86, 315, 457, 659, 806, 861, 32, 129, 206, 492, 399, 516, 589, 813, 0, 166, 293, 348, 431, 557, 653, 581, 260, 385, 467],  "objective" : 955,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 955}}, "sections": ["default", "raw", "json"], "time": 130388}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 128.678, "solutions": 31, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 951, "nodes": 53227, "failures": 37000, "restarts": 59, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 215, 357, 559, 705, 770, 913, 70, 137, 701, 868, 34, 86, 315, 457, 659, 806, 861, 36, 129, 206, 492, 399, 516, 589, 813, 4, 166, 293, 348, 431, 557, 653, 581, 260, 385, 467]);\nobjective = 951;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 215, 357, 559, 705, 770, 913, 70, 137, 701, 868, 34, 86, 315, 457, 659, 806, 861, 36, 129, 206, 492, 399, 516, 589, 813, 4, 166, 293, 348, 431, 557, 653, 581, 260, 385, 467]);\nobjective = 951;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 357, 559, 705, 770, 913, 70, 137, 701, 868, 34, 86, 315, 457, 659, 806, 861, 36, 129, 206, 492, 399, 516, 589, 813, 4, 166, 293, 348, 431, 557, 653, 581, 260, 385, 467],  "objective" : 951,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 951}}, "sections": ["default", "raw", "json"], "time": 130426}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 132.341, "solutions": 32, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 941, "nodes": 54701, "failures": 38014, "restarts": 61, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 215, 357, 559, 691, 756, 899, 70, 137, 691, 858, 34, 86, 315, 457, 649, 796, 861, 36, 129, 206, 492, 399, 516, 589, 813, 4, 166, 293, 348, 431, 557, 653, 581, 260, 385, 467]);\nobjective = 941;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 215, 357, 559, 691, 756, 899, 70, 137, 691, 858, 34, 86, 315, 457, 649, 796, 861, 36, 129, 206, 492, 399, 516, 589, 813, 4, 166, 293, 348, 431, 557, 653, 581, 260, 385, 467]);\nobjective = 941;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 357, 559, 691, 756, 899, 70, 137, 691, 858, 34, 86, 315, 457, 649, 796, 861, 36, 129, 206, 492, 399, 516, 589, 813, 4, 166, 293, 348, 431, 557, 653, 581, 260, 385, 467],  "objective" : 941,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 941}}, "sections": ["default", "raw", "json"], "time": 134101}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 140.575, "solutions": 33, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 940, "nodes": 58739, "failures": 40576, "restarts": 65, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 215, 357, 559, 671, 736, 879, 70, 137, 671, 838, 34, 86, 315, 457, 629, 772, 834, 36, 129, 206, 492, 399, 530, 589, 802, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 940;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 215, 357, 559, 671, 736, 879, 70, 137, 671, 838, 34, 86, 315, 457, 629, 772, 834, 36, 129, 206, 492, 399, 530, 589, 802, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 940;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 357, 559, 671, 736, 879, 70, 137, 671, 838, 34, 86, 315, 457, 629, 772, 834, 36, 129, 206, 492, 399, 530, 589, 802, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487],  "objective" : 940,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 940}}, "sections": ["default", "raw", "json"], "time": 142336}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 140.615, "solutions": 34, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 921, "nodes": 59688, "failures": 41000, "restarts": 66, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 215, 357, 559, 671, 736, 879, 70, 137, 671, 838, 34, 86, 315, 457, 629, 772, 834, 36, 129, 206, 492, 399, 530, 589, 802, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 921;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 215, 357, 559, 671, 736, 879, 70, 137, 671, 838, 34, 86, 315, 457, 629, 772, 834, 36, 129, 206, 492, 399, 530, 589, 802, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 921;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 357, 559, 671, 736, 879, 70, 137, 671, 838, 34, 86, 315, 457, 629, 772, 834, 36, 129, 206, 492, 399, 530, 589, 802, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487],  "objective" : 921,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 921}}, "sections": ["default", "raw", "json"], "time": 142366}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 146.816, "solutions": 35, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 917, "nodes": 61762, "failures": 42500, "restarts": 69, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 215, 357, 559, 671, 736, 879, 74, 162, 671, 838, 38, 112, 315, 457, 629, 772, 834, 36, 129, 206, 492, 399, 530, 589, 802, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 917;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 215, 357, 559, 671, 736, 879, 74, 162, 671, 838, 38, 112, 315, 457, 629, 772, 834, 36, 129, 206, 492, 399, 530, 589, 802, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 917;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 357, 559, 671, 736, 879, 74, 162, 671, 838, 38, 112, 315, 457, 629, 772, 834, 36, 129, 206, 492, 399, 530, 589, 802, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487],  "objective" : 917,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 917}}, "sections": ["default", "raw", "json"], "time": 148564}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 146.864, "solutions": 36, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 907, "nodes": 62661, "failures": 43436, "restarts": 69, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 217, 359, 559, 671, 726, 809, 44, 111, 671, 872, 85, 152, 332, 457, 629, 776, 841, 36, 129, 206, 492, 401, 530, 589, 769, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 907;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 217, 359, 559, 671, 726, 809, 44, 111, 671, 872, 85, 152, 332, 457, 629, 776, 841, 36, 129, 206, 492, 401, 530, 589, 769, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 907;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 217, 359, 559, 671, 726, 809, 44, 111, 671, 872, 85, 152, 332, 457, 629, 776, 841, 36, 129, 206, 492, 401, 530, 589, 769, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487],  "objective" : 907,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 907}}, "sections": ["default", "raw", "json"], "time": 148623}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 147.284, "solutions": 37, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 889, "nodes": 63644, "failures": 43537, "restarts": 70, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 217, 359, 559, 671, 726, 809, 44, 111, 671, 854, 85, 152, 332, 457, 629, 776, 841, 36, 129, 206, 492, 401, 530, 589, 769, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 889;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 217, 359, 559, 671, 726, 809, 44, 111, 671, 854, 85, 152, 332, 457, 629, 776, 841, 36, 129, 206, 492, 401, 530, 589, 769, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487]);\nobjective = 889;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 217, 359, 559, 671, 726, 809, 44, 111, 671, 854, 85, 152, 332, 457, 629, 776, 841, 36, 129, 206, 492, 401, 530, 589, 769, 4, 166, 313, 368, 451, 571, 638, 233, 280, 405, 487],  "objective" : 889,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 889}}, "sections": ["default", "raw", "json"], "time": 149032}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 154.912, "solutions": 38, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 876, "nodes": 66123, "failures": 45476, "restarts": 73, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 217, 359, 546, 658, 713, 796, 44, 111, 671, 841, 85, 152, 332, 444, 629, 763, 828, 36, 129, 206, 479, 401, 518, 576, 756, 4, 166, 278, 333, 430, 571, 638, 233, 280, 397, 466]);\nobjective = 876;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 217, 359, 546, 658, 713, 796, 44, 111, 671, 841, 85, 152, 332, 444, 629, 763, 828, 36, 129, 206, 479, 401, 518, 576, 756, 4, 166, 278, 333, 430, 571, 638, 233, 280, 397, 466]);\nobjective = 876;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 217, 359, 546, 658, 713, 796, 44, 111, 671, 841, 85, 152, 332, 444, 629, 763, 828, 36, 129, 206, 479, 401, 518, 576, 756, 4, 166, 278, 333, 430, 571, 638, 233, 280, 397, 466],  "objective" : 876,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 876}}, "sections": ["default", "raw", "json"], "time": 156671}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 192.214, "solutions": 39, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 870, "nodes": 70913, "failures": 49648, "restarts": 79, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 187, 299, 476, 618, 683, 772, 44, 111, 263, 817, 94, 152, 332, 449, 651, 783, 838, 51, 135, 225, 518, 401, 518, 576, 756, 4, 185, 332, 387, 471, 583, 677, 699, 430, 547, 621]);\nobjective = 870;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 187, 299, 476, 618, 683, 772, 44, 111, 263, 817, 94, 152, 332, 449, 651, 783, 838, 51, 135, 225, 518, 401, 518, 576, 756, 4, 185, 332, 387, 471, 583, 677, 699, 430, 547, 621]);\nobjective = 870;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 187, 299, 476, 618, 683, 772, 44, 111, 263, 817, 94, 152, 332, 449, 651, 783, 838, 51, 135, 225, 518, 401, 518, 576, 756, 4, 185, 332, 387, 471, 583, 677, 699, 430, 547, 621],  "objective" : 870,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 870}}, "sections": ["default", "raw", "json"], "time": 193962}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 203.839, "solutions": 40, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 864, "nodes": 76254, "failures": 53296, "restarts": 85, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 187, 299, 476, 618, 683, 772, 44, 111, 263, 817, 100, 152, 332, 449, 651, 783, 838, 57, 141, 225, 518, 401, 518, 576, 756, 10, 185, 332, 387, 471, 583, 677, 699, 430, 547, 621]);\nobjective = 864;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 187, 299, 476, 618, 683, 772, 44, 111, 263, 817, 100, 152, 332, 449, 651, 783, 838, 57, 141, 225, 518, 401, 518, 576, 756, 10, 185, 332, 387, 471, 583, 677, 699, 430, 547, 621]);\nobjective = 864;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 187, 299, 476, 618, 683, 772, 44, 111, 263, 817, 100, 152, 332, 449, 651, 783, 838, 57, 141, 225, 518, 401, 518, 576, 756, 10, 185, 332, 387, 471, 583, 677, 699, 430, 547, 621],  "objective" : 864,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 864}}, "sections": ["default", "raw", "json"], "time": 205598}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 206.055, "solutions": 41, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 857, "nodes": 77769, "failures": 54515, "restarts": 87, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 194, 306, 478, 618, 683, 772, 44, 111, 263, 817, 107, 159, 339, 451, 651, 783, 838, 64, 148, 225, 520, 401, 518, 576, 756, 17, 185, 332, 387, 471, 583, 677, 699, 430, 547, 621]);\nobjective = 857;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 194, 306, 478, 618, 683, 772, 44, 111, 263, 817, 107, 159, 339, 451, 651, 783, 838, 64, 148, 225, 520, 401, 518, 576, 756, 17, 185, 332, 387, 471, 583, 677, 699, 430, 547, 621]);\nobjective = 857;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 194, 306, 478, 618, 683, 772, 44, 111, 263, 817, 107, 159, 339, 451, 651, 783, 838, 64, 148, 225, 520, 401, 518, 576, 756, 17, 185, 332, 387, 471, 583, 677, 699, 430, 547, 621],  "objective" : 857,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 857}}, "sections": ["default", "raw", "json"], "time": 207803}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 854.499, "solutions": 42, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 852, "nodes": 208228, "failures": 179157, "restarts": 180, "peakDepth": 321}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 512, 624, 689, 772, 44, 111, 263, 817, 112, 164, 344, 485, 657, 783, 838, 69, 153, 230, 426, 378, 518, 576, 756, 22, 190, 332, 387, 471, 583, 677, 699, 430, 547, 621]);\nobjective = 852;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 512, 624, 689, 772, 44, 111, 263, 817, 112, 164, 344, 485, 657, 783, 838, 69, 153, 230, 426, 378, 518, 576, 756, 22, 190, 332, 387, 471, 583, 677, 699, 430, 547, 621]);\nobjective = 852;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 512, 624, 689, 772, 44, 111, 263, 817, 112, 164, 344, 485, 657, 783, 838, 69, 153, 230, 426, 378, 518, 576, 756, 22, 190, 332, 387, 471, 583, 677, 699, 430, 547, 621],  "objective" : 852,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 852}}, "sections": ["default", "raw", "json"], "time": 856247}
{"type": "statistics", "statistics": {"initTime": 1.075, "solveTime": 1199.753, "solutions": 42, "variables": 4402, "intVariables": 191, "boolVariables": 4211, "setVariables": 0, "constraints": 5688, "objective": 852, "nodes": 272001, "failures": 240721, "restarts": 229, "peakDepth": 321}}
{"type": "comment", "comment": "%% Unexpected resolution interruption!\n"}
{"type": "statistics", "statistics": {"nSolutions": 42}}
