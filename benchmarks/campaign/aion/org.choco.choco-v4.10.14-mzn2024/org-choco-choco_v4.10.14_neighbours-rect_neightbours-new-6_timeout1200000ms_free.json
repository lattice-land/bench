{"type": "lattice-land", "lattice-land": "start"}
{"type": "statistics", "statistics": {"configuration": "org-choco-choco_v4.10.14_neighbours-rect_neightbours-new-6_timeout1200000ms_free", "problem": "neighbours", "model": "../data/mzn-challenge/2024/neighbours/neighbours-rect.mzn", "data_file": "../data/mzn-challenge/2024/neighbours/neightbours-new-6.dzn", "mzn_solver": "org.choco.choco", "version": "v4.10.14", "timeout_ms": "1200000", "datetime": "2025-03-11T09:07:14.563113", "status": "UNKNOWN", "cores": "1", "threads": "1"}}
cpu-bind=MASK - aion-0158, task  0  0 [2608144]: mask 0x80 set
{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 218, "flatIntVars": 31, "flatBoolConstraints": 102, "flatIntConstraints": 222, "evaluatedHalfReifiedConstraints": 218, "method": "maximize", "flatTime": 0.0702996}}
{"type": "comment", "comment": "%% Choco 231102\n"}
{"type": "solution", "output": {"default": "% 1 3 1 4 2\n% 1 2 2 3 1\n% 1 4 1 1 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 2 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 1, 4, 2, 1, 2, 2, 3, 1, 1, 4, 1, 1, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 2, 1, 1, 1, 2]);\nobjective = 57;\n", "raw": "% 1 3 1 4 2\n% 1 2 2 3 1\n% 1 4 1 1 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 2 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 1, 4, 2, 1, 2, 2, 3, 1, 1, 4, 1, 1, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 2, 1, 1, 1, 2]);\nobjective = 57;\n", "json": {  "x" : [[1, 3, 1, 4, 2], [1, 2, 2, 3, 1], [1, 4, 1, 1, 1], [3, 3, 2, 2, 1], [2, 1, 4, 3, 1], [2, 1, 1, 1, 2]],  "objective" : 57,  "_objective" : 57}}, "sections": ["default", "raw", "json"], "time": 1373}
{"type": "solution", "output": {"default": "% 1 3 1 4 2\n% 1 2 2 3 1\n% 1 4 1 1 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 1, 4, 2, 1, 2, 2, 3, 1, 1, 4, 1, 1, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 1, 1, 2]);\nobjective = 58;\n", "raw": "% 1 3 1 4 2\n% 1 2 2 3 1\n% 1 4 1 1 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 1, 4, 2, 1, 2, 2, 3, 1, 1, 4, 1, 1, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 1, 1, 2]);\nobjective = 58;\n", "json": {  "x" : [[1, 3, 1, 4, 2], [1, 2, 2, 3, 1], [1, 4, 1, 1, 1], [3, 3, 2, 2, 1], [2, 1, 4, 3, 1], [3, 1, 1, 1, 2]],  "objective" : 58,  "_objective" : 58}}, "sections": ["default", "raw", "json"], "time": 1373}
{"type": "solution", "output": {"default": "% 1 3 3 1 2\n% 1 2 2 3 4\n% 1 4 1 1 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 3, 1, 2, 1, 2, 2, 3, 4, 1, 4, 1, 1, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 1, 1, 2]);\nobjective = 60;\n", "raw": "% 1 3 3 1 2\n% 1 2 2 3 4\n% 1 4 1 1 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 3, 1, 2, 1, 2, 2, 3, 4, 1, 4, 1, 1, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 1, 1, 2]);\nobjective = 60;\n", "json": {  "x" : [[1, 3, 3, 1, 2], [1, 2, 2, 3, 4], [1, 4, 1, 1, 1], [3, 3, 2, 2, 1], [2, 1, 4, 3, 1], [3, 1, 1, 1, 2]],  "objective" : 60,  "_objective" : 60}}, "sections": ["default", "raw", "json"], "time": 1384}
{"type": "solution", "output": {"default": "% 1 3 3 1 2\n% 1 2 2 3 4\n% 1 4 1 4 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 3, 1, 2, 1, 2, 2, 3, 4, 1, 4, 1, 4, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 1, 1, 2]);\nobjective = 63;\n", "raw": "% 1 3 3 1 2\n% 1 2 2 3 4\n% 1 4 1 4 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 3, 1, 2, 1, 2, 2, 3, 4, 1, 4, 1, 4, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 1, 1, 2]);\nobjective = 63;\n", "json": {  "x" : [[1, 3, 3, 1, 2], [1, 2, 2, 3, 4], [1, 4, 1, 4, 1], [3, 3, 2, 2, 1], [2, 1, 4, 3, 1], [3, 1, 1, 1, 2]],  "objective" : 63,  "_objective" : 63}}, "sections": ["default", "raw", "json"], "time": 1384}
{"type": "solution", "output": {"default": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 4 1 4 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 4, 1, 4, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 1, 1, 2]);\nobjective = 64;\n", "raw": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 4 1 4 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 1 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 4, 1, 4, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 1, 1, 2]);\nobjective = 64;\n", "json": {  "x" : [[1, 3, 4, 1, 2], [1, 2, 2, 3, 4], [1, 4, 1, 4, 1], [3, 3, 2, 2, 1], [2, 1, 4, 3, 1], [3, 1, 1, 1, 2]],  "objective" : 64,  "_objective" : 64}}, "sections": ["default", "raw", "json"], "time": 1455}
{"type": "solution", "output": {"default": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 4 1 4 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 4, 1, 4, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 2, 1, 2]);\nobjective = 65;\n", "raw": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 4 1 4 1\n% 3 3 2 2 1\n% 2 1 4 3 1\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 4, 1, 4, 1, 3, 3, 2, 2, 1, 2, 1, 4, 3, 1, 3, 1, 2, 1, 2]);\nobjective = 65;\n", "json": {  "x" : [[1, 3, 4, 1, 2], [1, 2, 2, 3, 4], [1, 4, 1, 4, 1], [3, 3, 2, 2, 1], [2, 1, 4, 3, 1], [3, 1, 2, 1, 2]],  "objective" : 65,  "_objective" : 65}}, "sections": ["default", "raw", "json"], "time": 1480}
{"type": "solution", "output": {"default": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 2 1 4 1\n% 3 3 4 2 1\n% 2 1 5 3 1\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 2, 1, 4, 1, 3, 3, 4, 2, 1, 2, 1, 5, 3, 1, 3, 1, 2, 1, 2]);\nobjective = 66;\n", "raw": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 2 1 4 1\n% 3 3 4 2 1\n% 2 1 5 3 1\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 2, 1, 4, 1, 3, 3, 4, 2, 1, 2, 1, 5, 3, 1, 3, 1, 2, 1, 2]);\nobjective = 66;\n", "json": {  "x" : [[1, 3, 4, 1, 2], [1, 2, 2, 3, 4], [1, 2, 1, 4, 1], [3, 3, 4, 2, 1], [2, 1, 5, 3, 1], [3, 1, 2, 1, 2]],  "objective" : 66,  "_objective" : 66}}, "sections": ["default", "raw", "json"], "time": 1550}
{"type": "solution", "output": {"default": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 2 1 4 1\n% 3 5 4 2 1\n% 2 1 3 4 1\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 2, 1, 4, 1, 3, 5, 4, 2, 1, 2, 1, 3, 4, 1, 3, 1, 2, 1, 2]);\nobjective = 67;\n", "raw": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 2 1 4 1\n% 3 5 4 2 1\n% 2 1 3 4 1\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 2, 1, 4, 1, 3, 5, 4, 2, 1, 2, 1, 3, 4, 1, 3, 1, 2, 1, 2]);\nobjective = 67;\n", "json": {  "x" : [[1, 3, 4, 1, 2], [1, 2, 2, 3, 4], [1, 2, 1, 4, 1], [3, 5, 4, 2, 1], [2, 1, 3, 4, 1], [3, 1, 2, 1, 2]],  "objective" : 67,  "_objective" : 67}}, "sections": ["default", "raw", "json"], "time": 1558}
{"type": "solution", "output": {"default": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 2 1 4 1\n% 3 5 4 2 1\n% 2 1 3 3 4\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 2, 1, 4, 1, 3, 5, 4, 2, 1, 2, 1, 3, 3, 4, 3, 1, 2, 1, 2]);\nobjective = 69;\n", "raw": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 2 1 4 1\n% 3 5 4 2 1\n% 2 1 3 3 4\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 2, 1, 4, 1, 3, 5, 4, 2, 1, 2, 1, 3, 3, 4, 3, 1, 2, 1, 2]);\nobjective = 69;\n", "json": {  "x" : [[1, 3, 4, 1, 2], [1, 2, 2, 3, 4], [1, 2, 1, 4, 1], [3, 5, 4, 2, 1], [2, 1, 3, 3, 4], [3, 1, 2, 1, 2]],  "objective" : 69,  "_objective" : 69}}, "sections": ["default", "raw", "json"], "time": 1624}
{"type": "solution", "output": {"default": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 2 1 4 1\n% 4 3 4 2 1\n% 2 1 5 3 4\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 2, 1, 4, 1, 4, 3, 4, 2, 1, 2, 1, 5, 3, 4, 3, 1, 2, 1, 2]);\nobjective = 70;\n", "raw": "% 1 3 4 1 2\n% 1 2 2 3 4\n% 1 2 1 4 1\n% 4 3 4 2 1\n% 2 1 5 3 4\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 4, 1, 2, 1, 2, 2, 3, 4, 1, 2, 1, 4, 1, 4, 3, 4, 2, 1, 2, 1, 5, 3, 4, 3, 1, 2, 1, 2]);\nobjective = 70;\n", "json": {  "x" : [[1, 3, 4, 1, 2], [1, 2, 2, 3, 4], [1, 2, 1, 4, 1], [4, 3, 4, 2, 1], [2, 1, 5, 3, 4], [3, 1, 2, 1, 2]],  "objective" : 70,  "_objective" : 70}}, "sections": ["default", "raw", "json"], "time": 1723}
{"type": "solution", "output": {"default": "% 1 3 2 1 2\n% 1 4 5 3 4\n% 1 2 1 2 1\n% 4 3 4 2 1\n% 2 1 5 3 4\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 2, 1, 2, 1, 4, 5, 3, 4, 1, 2, 1, 2, 1, 4, 3, 4, 2, 1, 2, 1, 5, 3, 4, 3, 1, 2, 1, 2]);\nobjective = 71;\n", "raw": "% 1 3 2 1 2\n% 1 4 5 3 4\n% 1 2 1 2 1\n% 4 3 4 2 1\n% 2 1 5 3 4\n% 3 1 2 1 2\nx = array2d(1..6,1..5,[1, 3, 2, 1, 2, 1, 4, 5, 3, 4, 1, 2, 1, 2, 1, 4, 3, 4, 2, 1, 2, 1, 5, 3, 4, 3, 1, 2, 1, 2]);\nobjective = 71;\n", "json": {  "x" : [[1, 3, 2, 1, 2], [1, 4, 5, 3, 4], [1, 2, 1, 2, 1], [4, 3, 4, 2, 1], [2, 1, 5, 3, 4], [3, 1, 2, 1, 2]],  "objective" : 71,  "_objective" : 71}}, "sections": ["default", "raw", "json"], "time": 1805}
Exception in thread "main" java.lang.IllegalArgumentException: Equal objects must have equal hashcodes. During rehashing, Trove discovered that the following two objects claim to be equal (as in java.lang.Object.equals()) but their hashCodes (or those calculated by your TObjectHashingStrategy) are not equal.This violates the general contract of java.lang.Object.hashCode().  See bullet point two in that method's documentation. object #1 =class org.chocosolver.solver.variables.view.integer.IntAffineView id= 2106000623 hashCode= 363 toString= 1.(X_INTRODUCED_10_) + 0[4,4]; object #2 =class org.chocosolver.solver.variables.view.integer.IntAffineView id= 330739404 hashCode= 425 toString= 1.(X_INTRODUCED_10_) + 0[4,4]

	at gnu.trove.impl.hash.TObjectHash.buildObjectContractViolation(TObjectHash.java:464)
	at gnu.trove.impl.hash.TObjectHash.throwObjectContractViolation(TObjectHash.java:426)
	at gnu.trove.map.hash.TObjectDoubleHashMap.rehash(TObjectDoubleHashMap.java:191)
	at gnu.trove.impl.hash.THash.postInsertHook(THash.java:388)
	at gnu.trove.map.hash.TObjectDoubleHashMap.adjustOrPutValue(TObjectDoubleHashMap.java:456)
	at org.chocosolver.solver.search.strategy.selectors.variables.DomOverWDeg.increase(DomOverWDeg.java:89)
	at org.chocosolver.solver.search.strategy.selectors.variables.AbstractCriterionBasedVariableSelector.onContradiction(AbstractCriterionBasedVariableSelector.java:225)
	at org.chocosolver.solver.search.loop.monitors.SearchMonitorList.onContradiction(SearchMonitorList.java:134)
	at org.chocosolver.solver.Solver.propagate(Solver.java:502)
	at org.chocosolver.solver.Solver.searchLoop(Solver.java:341)
	at org.chocosolver.solver.Solver.solve(Solver.java:309)
	at org.chocosolver.parser.flatzinc.Flatzinc.singleThread(Flatzinc.java:305)
	at org.chocosolver.parser.RegParser.solve(RegParser.java:342)
	at org.chocosolver.parser.flatzinc.ChocoFZN.main(ChocoFZN.java:29)
{"type": "statistics", "statistics": {"initTime": 0.537, "solveTime": 1.08, "solutions": 11, "variables": 344, "constraints": 325, "nodes": 4328, "failures": 4001, "restarts": 7}}
{"type": "comment", "comment": "%% Unexpected resolution interruption!\n"}
{"type": "status", "status": "ERROR", "time": 1938}
{"type": "statistics", "statistics": {"nSolutions": 11}}
srun: error: aion-0158: task 0: Exited with exit code 1
