{"type": "lattice-land", "lattice-land": "start"}
{"type": "statistics", "statistics": {"configuration": "com-google-ortools-sat_v9.9_hoist-benchmark_PU_2_2_3_64cores_64threads_timeout1200000ms", "problem": "hoist-benchmark", "model": "../data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "data_file": "../data/mzn-challenge/2024/hoist-benchmark/PU_2_2_3.dzn", "mzn_solver": "com.google.ortools.sat", "version": "v9.9", "timeout_ms": "1200000", "datetime": "2025-03-11T08:25:26.971344", "status": "UNKNOWN", "cores": "64", "threads": "64"}}
cpu-bind=MASK - aion-0227, task  0  0 [1808322]: mask 0xffffffffffffffff set
{"type": "warning", "location": {"filename": "/mnt/aiongpfs/users/ptalbot/lattice-land/bench/benchmarks/data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "firstLine": 102, "firstColumn": 50, "lastLine": 102, "lastColumn": 53}, "message": "variable `k` shadows variable with the same name in line 102.66"}
{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 2088, "flatIntVars": 97, "flatBoolConstraints": 900, "flatIntConstraints": 1910, "evaluatedHalfReifiedConstraints": 1788, "method": "minimize", "flatTime": 0.225749}}
{"type": "comment", "comment": "%% File /tmp/mznfileeH0myG.fzn parsed in 23 ms\n"}
{"type": "comment", "comment": "%% Presolve model\n"}
{"type": "comment", "comment": "%%   - done in 0 ms\n"}
{"type": "comment", "comment": "%% Model mznfileeH0myG\n"}
{"type": "comment", "comment": "%%   - array_bool_and: 300\n"}
{"type": "comment", "comment": "%%   - bool_clause: 600\n"}
{"type": "comment", "comment": "%%   - int_lin_le: 98\n"}
{"type": "comment", "comment": "%%   - int_lin_le_imp: 1788\n"}
{"type": "comment", "comment": "%%   - int_times: 24\n"}
{"type": "comment", "comment": "%%   - Minimization problem\n"}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 368, 62, 198, 258, 400, 94, 161, 288, 335, 34, 90, 316, 428, 167, 283, 343, 7, 133, 202, 224, 391, 63, 121]);\nobjective = 448;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 368, 62, 198, 258, 400, 94, 161, 288, 335, 34, 90, 316, 428, 167, 283, 343, 7, 133, 202, 224, 391, 63, 121]);\nobjective = 448;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 231, 368, 62, 198, 258, 400, 94, 161, 288, 335, 34, 90, 316, 428, 167, 283, 343, 7, 133, 202, 224, 391, 63, 121],  "objective" : 448,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0],  "_objective" : 448}}, "sections": ["default", "raw", "json"], "time": 49778}
{"type": "status", "status": "OPTIMAL_SOLUTION", "time": 49778}
{"type": "statistics", "statistics": {"nSolutions": 1}}
{"type": "statistics", "statistics": {"objective": 448, "objectiveBound": 448, "boolVariables": 827, "failures": 0, "propagations": 2774, "solveTime": 49.4936}}
{"type": "lattice-land", "lattice-land": "start"}
{"type": "statistics", "statistics": {"configuration": "com-google-ortools-sat_v9.9_hoist-benchmark_PU_2_2_3_64cores_64threads_timeout1200000ms", "problem": "hoist-benchmark", "model": "../data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "data_file": "../data/mzn-challenge/2024/hoist-benchmark/PU_2_2_3.dzn", "mzn_solver": "com.google.ortools.sat", "version": "v9.9", "timeout_ms": "1200000", "datetime": "2025-03-12T05:11:19.525130", "status": "UNKNOWN", "cores": "64", "threads": "64"}}
cpu-bind=MASK - aion-0183, task  0  0 [3835721]: mask 0xffffffffffffffff0000000000000000 set
{"type": "warning", "location": {"filename": "/mnt/aiongpfs/users/ptalbot/lattice-land/bench/benchmarks/data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "firstLine": 102, "firstColumn": 50, "lastLine": 102, "lastColumn": 53}, "message": "variable `k` shadows variable with the same name in line 102.66"}
{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 1936, "flatIntVars": 97, "flatBoolConstraints": 900, "flatIntConstraints": 1758, "evaluatedHalfReifiedConstraints": 1636, "method": "minimize", "flatTime": 0.226406}}
{"type": "comment", "comment": "%% File /tmp/mznfileDdQfQ5.fzn parsed in 21 ms\n"}
{"type": "comment", "comment": "%% Presolve model\n"}
{"type": "comment", "comment": "%%   - done in 0 ms\n"}
{"type": "comment", "comment": "%% Model mznfileDdQfQ5\n"}
{"type": "comment", "comment": "%%   - array_bool_and: 300\n"}
{"type": "comment", "comment": "%%   - bool_clause: 600\n"}
{"type": "comment", "comment": "%%   - int_lin_le: 98\n"}
{"type": "comment", "comment": "%%   - int_lin_le_imp: 1636\n"}
{"type": "comment", "comment": "%%   - int_times: 24\n"}
{"type": "comment", "comment": "%%   - Minimization problem\n"}
{"type": "statistics", "statistics": {"objective": 1730, "objectiveBound": 327, "boolVariables": 839, "failures": 14, "propagations": 63824, "solveTime": 0.129504}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 767, 860, 48, 814, 931, 983, 1163, 1275, 1417, 1534, 1589, 1730, 124, 221, 1454, 1501, 1626, 1678]);\nobjective = 1730;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 767, 860, 48, 814, 931, 983, 1163, 1275, 1417, 1534, 1589, 1730, 124, 221, 1454, 1501, 1626, 1678]);\nobjective = 1730;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 860, 48, 814, 931, 983, 1163, 1275, 1417, 1534, 1589, 1730, 124, 221, 1454, 1501, 1626, 1678],  "objective" : 1730,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],  "_objective" : 1730}}, "sections": ["default", "raw", "json"], "time": 409}
{"type": "statistics", "statistics": {"objective": 1729, "objectiveBound": 327, "boolVariables": 863, "failures": 14, "propagations": 64842, "solveTime": 0.136276}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 373, 575, 722, 787, 930, 1072, 1169, 1729, 1681, 99, 181, 411, 553, 755, 902, 967, 1110, 1252, 1349, 1650, 1422, 1539, 1591]);\nobjective = 1729;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 373, 575, 722, 787, 930, 1072, 1169, 1729, 1681, 99, 181, 411, 553, 755, 902, 967, 1110, 1252, 1349, 1650, 1422, 1539, 1591]);\nobjective = 1729;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2]);\n", "json": {  "r" : [0, 231, 373, 575, 722, 787, 930, 1072, 1169, 1729, 1681, 99, 181, 411, 553, 755, 902, 967, 1110, 1252, 1349, 1650, 1422, 1539, 1591],  "objective" : 1729,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0],  "_objective" : 1729}}, "sections": ["default", "raw", "json"], "time": 423}
{"type": "statistics", "statistics": {"objective": 1728, "objectiveBound": 327, "boolVariables": 894, "failures": 209, "propagations": 120591, "solveTime": 0.144568}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 343, 485, 612, 677, 790, 922, 989, 174, 1681, 70, 122, 302, 443, 645, 757, 812, 895, 1021, 1088, 6, 524, 641, 716]);\nobjective = 1728;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 343, 485, 612, 677, 790, 922, 989, 174, 1681, 70, 122, 302, 443, 645, 757, 812, 895, 1021, 1088, 6, 524, 641, 716]);\nobjective = 1728;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 231, 343, 485, 612, 677, 790, 922, 989, 174, 1681, 70, 122, 302, 443, 645, 757, 812, 895, 1021, 1088, 6, 524, 641, 716],  "objective" : 1728,  "hoist" : [1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 1728}}, "sections": ["default", "raw", "json"], "time": 424}
{"type": "statistics", "statistics": {"objective": 1334, "objectiveBound": 327, "boolVariables": 921, "failures": 260, "propagations": 133771, "solveTime": 0.150576}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 343, 485, 612, 677, 760, 892, 989, 916, 805, 948, 1030, 1210, 0, 161, 308, 373, 456, 538, 605, 53, 1091, 1238, 1290]);\nobjective = 1334;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 343, 485, 612, 677, 760, 892, 989, 916, 805, 948, 1030, 1210, 0, 161, 308, 373, 456, 538, 605, 53, 1091, 1238, 1290]);\nobjective = 1334;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2]);\n", "json": {  "r" : [0, 231, 343, 485, 612, 677, 760, 892, 989, 916, 805, 948, 1030, 1210, 0, 161, 308, 373, 456, 538, 605, 53, 1091, 1238, 1290],  "objective" : 1334,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 1334}}, "sections": ["default", "raw", "json"], "time": 430}
{"type": "statistics", "statistics": {"objective": 1333, "objectiveBound": 327, "boolVariables": 940, "failures": 262, "propagations": 135307, "solveTime": 0.151616}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 182, 294, 436, 548, 613, 696, 778, 845, 867, 914, 1031, 1101, 1281, 60, 256, 403, 468, 581, 723, 805, 1148, 1067, 1209, 1291]);\nobjective = 1333;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 182, 294, 436, 548, 613, 696, 778, 845, 867, 914, 1031, 1101, 1281, 60, 256, 403, 468, 581, 723, 805, 1148, 1067, 1209, 1291]);\nobjective = 1333;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 182, 294, 436, 548, 613, 696, 778, 845, 867, 914, 1031, 1101, 1281, 60, 256, 403, 468, 581, 723, 805, 1148, 1067, 1209, 1291],  "objective" : 1333,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0],  "_objective" : 1333}}, "sections": ["default", "raw", "json"], "time": 436}
{"type": "statistics", "statistics": {"objective": 1328, "objectiveBound": 327, "boolVariables": 949, "failures": 262, "propagations": 136335, "solveTime": 0.152369}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 182, 294, 436, 548, 613, 696, 778, 845, 867, 914, 1031, 1096, 1276, 60, 256, 403, 468, 581, 723, 805, 1148, 1062, 1209, 1291]);\nobjective = 1328;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 182, 294, 436, 548, 613, 696, 778, 845, 867, 914, 1031, 1096, 1276, 60, 256, 403, 468, 581, 723, 805, 1148, 1062, 1209, 1291]);\nobjective = 1328;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2]);\n", "json": {  "r" : [0, 182, 294, 436, 548, 613, 696, 778, 845, 867, 914, 1031, 1096, 1276, 60, 256, 403, 468, 581, 723, 805, 1148, 1062, 1209, 1291],  "objective" : 1328,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0],  "_objective" : 1328}}, "sections": ["default", "raw", "json"], "time": 437}
{"type": "statistics", "statistics": {"objective": 1321, "objectiveBound": 327, "boolVariables": 953, "failures": 262, "propagations": 137399, "solveTime": 0.153069}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 182, 294, 436, 548, 613, 696, 778, 845, 867, 914, 1031, 1083, 1263, 60, 256, 403, 468, 581, 723, 805, 1148, 1062, 1209, 1291]);\nobjective = 1321;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 182, 294, 436, 548, 613, 696, 778, 845, 867, 914, 1031, 1083, 1263, 60, 256, 403, 468, 581, 723, 805, 1148, 1062, 1209, 1291]);\nobjective = 1321;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2]);\n", "json": {  "r" : [0, 182, 294, 436, 548, 613, 696, 778, 845, 867, 914, 1031, 1083, 1263, 60, 256, 403, 468, 581, 723, 805, 1148, 1062, 1209, 1291],  "objective" : 1321,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0],  "_objective" : 1321}}, "sections": ["default", "raw", "json"], "time": 437}
{"type": "statistics", "statistics": {"objective": 1315, "objectiveBound": 327, "boolVariables": 963, "failures": 262, "propagations": 138471, "solveTime": 0.153814}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 688, 770, 837, 867, 914, 1031, 1083, 1263, 60, 255, 402, 467, 595, 715, 805, 1148, 445, 562, 631]);\nobjective = 1315;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 688, 770, 837, 867, 914, 1031, 1083, 1263, 60, 255, 402, 467, 595, 715, 805, 1148, 445, 562, 631]);\nobjective = 1315;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 688, 770, 837, 867, 914, 1031, 1083, 1263, 60, 255, 402, 467, 595, 715, 805, 1148, 445, 562, 631],  "objective" : 1315,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1315}}, "sections": ["default", "raw", "json"], "time": 437}
{"type": "statistics", "statistics": {"objective": 1312, "objectiveBound": 327, "boolVariables": 980, "failures": 262, "propagations": 139971, "solveTime": 0.154757}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 183, 295, 437, 549, 614, 697, 779, 846, 868, 915, 1032, 1084, 1264, 64, 257, 404, 469, 582, 724, 806, 1149, 1204, 39, 91]);\nobjective = 1312;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 183, 295, 437, 549, 614, 697, 779, 846, 868, 915, 1032, 1084, 1264, 64, 257, 404, 469, 582, 724, 806, 1149, 1204, 39, 91]);\nobjective = 1312;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 183, 295, 437, 549, 614, 697, 779, 846, 868, 915, 1032, 1084, 1264, 64, 257, 404, 469, 582, 724, 806, 1149, 1204, 39, 91],  "objective" : 1312,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0],  "_objective" : 1312}}, "sections": ["default", "raw", "json"], "time": 437}
{"type": "statistics", "statistics": {"objective": 1299, "objectiveBound": 327, "boolVariables": 991, "failures": 265, "propagations": 141423, "solveTime": 0.155957}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 780, 847, 127, 1143, 1260, 32, 258, 400, 602, 749, 814, 897, 1022, 1089, 1230, 1182, 1299, 63]);\nobjective = 1299;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 780, 847, 127, 1143, 1260, 32, 258, 400, 602, 749, 814, 897, 1022, 1089, 1230, 1182, 1299, 63]);\nobjective = 1299;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 780, 847, 127, 1143, 1260, 32, 258, 400, 602, 749, 814, 897, 1022, 1089, 1230, 1182, 1299, 63],  "objective" : 1299,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1],  "_objective" : 1299}}, "sections": ["default", "raw", "json"], "time": 437}
{"type": "statistics", "statistics": {"objective": 1298, "objectiveBound": 327, "boolVariables": 1001, "failures": 266, "propagations": 142478, "solveTime": 0.156716}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 780, 847, 84, 1143, 1260, 32, 258, 400, 602, 749, 814, 897, 1022, 1089, 1230, 1182, 1, 63]);\nobjective = 1298;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 780, 847, 84, 1143, 1260, 32, 258, 400, 602, 749, 814, 897, 1022, 1089, 1230, 1182, 1, 63]);\nobjective = 1298;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 780, 847, 84, 1143, 1260, 32, 258, 400, 602, 749, 814, 897, 1022, 1089, 1230, 1182, 1, 63],  "objective" : 1298,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0],  "_objective" : 1298}}, "sections": ["default", "raw", "json"], "time": 437}
{"type": "statistics", "statistics": {"objective": 1276, "objectiveBound": 327, "boolVariables": 1015, "failures": 269, "propagations": 143806, "solveTime": 0.157675}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 188, 330, 486, 598, 663, 791, 893, 960, 1179, 1131, 1267, 73, 303, 444, 631, 758, 823, 925, 1041, 1138, 1160, 1092, 1238, 18]);\nobjective = 1276;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 188, 330, 486, 598, 663, 791, 893, 960, 1179, 1131, 1267, 73, 303, 444, 631, 758, 823, 925, 1041, 1138, 1160, 1092, 1238, 18]);\nobjective = 1276;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2]);\n", "json": {  "r" : [0, 188, 330, 486, 598, 663, 791, 893, 960, 1179, 1131, 1267, 73, 303, 444, 631, 758, 823, 925, 1041, 1138, 1160, 1092, 1238, 18],  "objective" : 1276,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 1],  "_objective" : 1276}}, "sections": ["default", "raw", "json"], "time": 438}
{"type": "statistics", "statistics": {"objective": 1275, "objectiveBound": 327, "boolVariables": 1024, "failures": 276, "propagations": 146107, "solveTime": 0.159008}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 184, 296, 438, 550, 615, 698, 781, 848, 974, 1021, 1153, 1205, 123, 265, 467, 585, 646, 738, 880, 947, 1074, 1121, 1238, 18]);\nobjective = 1275;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 184, 296, 438, 550, 615, 698, 781, 848, 974, 1021, 1153, 1205, 123, 265, 467, 585, 646, 738, 880, 947, 1074, 1121, 1238, 18]);\nobjective = 1275;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 184, 296, 438, 550, 615, 698, 781, 848, 974, 1021, 1153, 1205, 123, 265, 467, 585, 646, 738, 880, 947, 1074, 1121, 1238, 18],  "objective" : 1275,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 1],  "_objective" : 1275}}, "sections": ["default", "raw", "json"], "time": 439}
{"type": "statistics", "statistics": {"objective": 1274, "objectiveBound": 327, "boolVariables": 1069, "failures": 282, "propagations": 148309, "solveTime": 0.160529}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 193, 305, 491, 616, 671, 796, 878, 971, 1208, 925, 1042, 1094, 1274, 142, 344, 491, 556, 699, 823, 905, 54, 1155, 28, 92]);\nobjective = 1274;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 193, 305, 491, 616, 671, 796, 878, 971, 1208, 925, 1042, 1094, 1274, 142, 344, 491, 556, 699, 823, 905, 54, 1155, 28, 92]);\nobjective = 1274;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2]);\n", "json": {  "r" : [0, 193, 305, 491, 616, 671, 796, 878, 971, 1208, 925, 1042, 1094, 1274, 142, 344, 491, 556, 699, 823, 905, 54, 1155, 28, 92],  "objective" : 1274,  "hoist" : [1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0],  "_objective" : 1274}}, "sections": ["default", "raw", "json"], "time": 440}
{"type": "statistics", "statistics": {"objective": 1273, "objectiveBound": 327, "boolVariables": 1083, "failures": 289, "propagations": 151719, "solveTime": 0.162121}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 194, 330, 492, 616, 671, 811, 894, 972, 1213, 1121, 1268, 74, 303, 445, 587, 718, 783, 926, 1042, 1109, 1208, 1160, 24, 93]);\nobjective = 1273;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 194, 330, 492, 616, 671, 811, 894, 972, 1213, 1121, 1268, 74, 303, 445, 587, 718, 783, 926, 1042, 1109, 1208, 1160, 24, 93]);\nobjective = 1273;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2]);\n", "json": {  "r" : [0, 194, 330, 492, 616, 671, 811, 894, 972, 1213, 1121, 1268, 74, 303, 445, 587, 718, 783, 926, 1042, 1109, 1208, 1160, 24, 93],  "objective" : 1273,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 0],  "_objective" : 1273}}, "sections": ["default", "raw", "json"], "time": 442}
{"type": "statistics", "statistics": {"objective": 1272, "objectiveBound": 327, "boolVariables": 1101, "failures": 298, "propagations": 155805, "solveTime": 0.163996}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 185, 297, 439, 551, 616, 699, 781, 848, 974, 1021, 1138, 1190, 124, 266, 468, 586, 647, 739, 880, 947, 1074, 1230, 75, 127]);\nobjective = 1272;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 185, 297, 439, 551, 616, 699, 781, 848, 974, 1021, 1138, 1190, 124, 266, 468, 586, 647, 739, 880, 947, 1074, 1230, 75, 127]);\nobjective = 1272;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 185, 297, 439, 551, 616, 699, 781, 848, 974, 1021, 1138, 1190, 124, 266, 468, 586, 647, 739, 880, 947, 1074, 1230, 75, 127],  "objective" : 1272,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 1, 0],  "_objective" : 1272}}, "sections": ["default", "raw", "json"], "time": 443}
{"type": "statistics", "statistics": {"objective": 1271, "objectiveBound": 327, "boolVariables": 1115, "failures": 312, "propagations": 161318, "solveTime": 0.166524}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 195, 307, 493, 607, 672, 812, 895, 988, 1214, 942, 1059, 1111, 20, 132, 334, 446, 501, 584, 716, 795, 57, 629, 757, 836]);\nobjective = 1271;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 195, 307, 493, 607, 672, 812, 895, 988, 1214, 942, 1059, 1111, 20, 132, 334, 446, 501, 584, 716, 795, 57, 629, 757, 836]);\nobjective = 1271;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 195, 307, 493, 607, 672, 812, 895, 988, 1214, 942, 1059, 1111, 20, 132, 334, 446, 501, 584, 716, 795, 57, 629, 757, 836],  "objective" : 1271,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0],  "_objective" : 1271}}, "sections": ["default", "raw", "json"], "time": 446}
{"type": "statistics", "statistics": {"objective": 1267, "objectiveBound": 327, "boolVariables": 1131, "failures": 395, "propagations": 185871, "solveTime": 0.175536}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 195, 307, 493, 607, 672, 812, 895, 988, 1214, 915, 1032, 1085, 20, 132, 334, 446, 501, 584, 716, 795, 57, 629, 757, 836]);\nobjective = 1267;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 195, 307, 493, 607, 672, 812, 895, 988, 1214, 915, 1032, 1085, 20, 132, 334, 446, 501, 584, 716, 795, 57, 629, 757, 836]);\nobjective = 1267;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 195, 307, 493, 607, 672, 812, 895, 988, 1214, 915, 1032, 1085, 20, 132, 334, 446, 501, 584, 716, 795, 57, 629, 757, 836],  "objective" : 1267,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 2, 0, 0],  "_objective" : 1267}}, "sections": ["default", "raw", "json"], "time": 459}
{"type": "statistics", "statistics": {"objective": 1243, "objectiveBound": 327, "boolVariables": 1140, "failures": 395, "propagations": 187083, "solveTime": 0.176359}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 307, 479, 607, 662, 753, 895, 989, 1141, 884, 1031, 1083, 20, 132, 334, 446, 511, 594, 698, 795, 57, 639, 757, 836]);\nobjective = 1243;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 307, 479, 607, 662, 753, 895, 989, 1141, 884, 1031, 1083, 20, 132, 334, 446, 511, 594, 698, 795, 57, 639, 757, 836]);\nobjective = 1243;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 307, 479, 607, 662, 753, 895, 989, 1141, 884, 1031, 1083, 20, 132, 334, 446, 511, 594, 698, 795, 57, 639, 757, 836],  "objective" : 1243,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 1243}}, "sections": ["default", "raw", "json"], "time": 459}
{"type": "statistics", "statistics": {"objective": 1242, "objectiveBound": 327, "boolVariables": 1153, "failures": 398, "propagations": 188713, "solveTime": 0.177399}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 194, 306, 494, 606, 671, 812, 894, 973, 1182, 885, 1016, 1068, 6, 133, 333, 461, 526, 639, 721, 788, 55, 1129, 34, 94]);\nobjective = 1242;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 194, 306, 494, 606, 671, 812, 894, 973, 1182, 885, 1016, 1068, 6, 133, 333, 461, 526, 639, 721, 788, 55, 1129, 34, 94]);\nobjective = 1242;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2]);\n", "json": {  "r" : [0, 194, 306, 494, 606, 671, 812, 894, 973, 1182, 885, 1016, 1068, 6, 133, 333, 461, 526, 639, 721, 788, 55, 1129, 34, 94],  "objective" : 1242,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0],  "_objective" : 1242}}, "sections": ["default", "raw", "json"], "time": 460}
{"type": "statistics", "statistics": {"objective": 1241, "objectiveBound": 327, "boolVariables": 1165, "failures": 416, "propagations": 194601, "solveTime": 0.179779}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 194, 306, 494, 606, 671, 813, 896, 974, 1183, 886, 1017, 1069, 8, 134, 333, 461, 526, 639, 722, 789, 56, 1130, 36, 95]);\nobjective = 1241;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 194, 306, 494, 606, 671, 813, 896, 974, 1183, 886, 1017, 1069, 8, 134, 333, 461, 526, 639, 722, 789, 56, 1130, 36, 95]);\nobjective = 1241;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2]);\n", "json": {  "r" : [0, 194, 306, 494, 606, 671, 813, 896, 974, 1183, 886, 1017, 1069, 8, 134, 333, 461, 526, 639, 722, 789, 56, 1130, 36, 95],  "objective" : 1241,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 2, 1, 0],  "_objective" : 1241}}, "sections": ["default", "raw", "json"], "time": 460}
{"type": "statistics", "statistics": {"objective": 1237, "objectiveBound": 328, "boolVariables": 1176, "failures": 420, "propagations": 196343, "solveTime": 0.180903}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 202, 344, 494, 606, 671, 814, 923, 1000, 1184, 13, 160, 242, 472, 614, 816, 963, 1020, 1162, 61, 128, 1075, 982, 1129, 1198]);\nobjective = 1237;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 202, 344, 494, 606, 671, 814, 923, 1000, 1184, 13, 160, 242, 472, 614, 816, 963, 1020, 1162, 61, 128, 1075, 982, 1129, 1198]);\nobjective = 1237;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 202, 344, 494, 606, 671, 814, 923, 1000, 1184, 13, 160, 242, 472, 614, 816, 963, 1020, 1162, 61, 128, 1075, 982, 1129, 1198],  "objective" : 1237,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 0],  "_objective" : 1237}}, "sections": ["default", "raw", "json"], "time": 466}
{"type": "statistics", "statistics": {"objective": 1236, "objectiveBound": 328, "boolVariables": 1192, "failures": 421, "propagations": 197830, "solveTime": 0.181832}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 202, 344, 494, 606, 671, 814, 923, 1000, 1183, 170, 287, 339, 565, 707, 849, 963, 1020, 1162, 49, 116, 1075, 910, 1057, 1109]);\nobjective = 1236;\nhoist = array1d(0..24, [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 202, 344, 494, 606, 671, 814, 923, 1000, 1183, 170, 287, 339, 565, 707, 849, 963, 1020, 1162, 49, 116, 1075, 910, 1057, 1109]);\nobjective = 1236;\nhoist = array1d(0..24, [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 202, 344, 494, 606, 671, 814, 923, 1000, 1183, 170, 287, 339, 565, 707, 849, 963, 1020, 1162, 49, 116, 1075, 910, 1057, 1109],  "objective" : 1236,  "hoist" : [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 0],  "_objective" : 1236}}, "sections": ["default", "raw", "json"], "time": 466}
{"type": "statistics", "statistics": {"objective": 1235, "objectiveBound": 328, "boolVariables": 1203, "failures": 428, "propagations": 201258, "solveTime": 0.183242}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 202, 344, 494, 606, 671, 814, 923, 1000, 701, 170, 287, 339, 565, 707, 849, 972, 1037, 1162, 9, 76, 98, 910, 1057, 1109]);\nobjective = 1235;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 202, 344, 494, 606, 671, 814, 923, 1000, 701, 170, 287, 339, 565, 707, 849, 972, 1037, 1162, 9, 76, 98, 910, 1057, 1109]);\nobjective = 1235;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 202, 344, 494, 606, 671, 814, 923, 1000, 701, 170, 287, 339, 565, 707, 849, 972, 1037, 1162, 9, 76, 98, 910, 1057, 1109],  "objective" : 1235,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 0],  "_objective" : 1235}}, "sections": ["default", "raw", "json"], "time": 466}
{"type": "statistics", "statistics": {"objective": 1193, "objectiveBound": 328, "boolVariables": 1209, "failures": 429, "propagations": 202626, "solveTime": 0.184146}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 312, 460, 607, 662, 761, 903, 1000, 94, 170, 287, 340, 565, 707, 849, 963, 1020, 1103, 0, 67, 53, 910, 1057, 1139]);\nobjective = 1193;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 312, 460, 607, 662, 761, 903, 1000, 94, 170, 287, 340, 565, 707, 849, 963, 1020, 1103, 0, 67, 53, 910, 1057, 1139]);\nobjective = 1193;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 312, 460, 607, 662, 761, 903, 1000, 94, 170, 287, 340, 565, 707, 849, 963, 1020, 1103, 0, 67, 53, 910, 1057, 1139],  "objective" : 1193,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 1193}}, "sections": ["default", "raw", "json"], "time": 466}
{"type": "statistics", "statistics": {"objective": 1192, "objectiveBound": 328, "boolVariables": 1215, "failures": 430, "propagations": 204431, "solveTime": 0.185162}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 185, 297, 439, 551, 616, 700, 841, 908, 930, 977, 1094, 1146, 134, 266, 468, 586, 647, 730, 812, 879, 1030, 349, 496, 548]);\nobjective = 1192;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 185, 297, 439, 551, 616, 700, 841, 908, 930, 977, 1094, 1146, 134, 266, 468, 586, 647, 730, 812, 879, 1030, 349, 496, 548]);\nobjective = 1192;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 185, 297, 439, 551, 616, 700, 841, 908, 930, 977, 1094, 1146, 134, 266, 468, 586, 647, 730, 812, 879, 1030, 349, 496, 548],  "objective" : 1192,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0],  "_objective" : 1192}}, "sections": ["default", "raw", "json"], "time": 466}
{"type": "statistics", "statistics": {"objective": 1032, "objectiveBound": 328, "boolVariables": 1230, "failures": 431, "propagations": 206002, "solveTime": 0.186154}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 185, 297, 439, 551, 616, 700, 841, 908, 930, 780, 927, 986, 134, 266, 468, 592, 647, 730, 812, 879, 1030, 349, 496, 548]);\nobjective = 1032;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 185, 297, 439, 551, 616, 700, 841, 908, 930, 780, 927, 986, 134, 266, 468, 592, 647, 730, 812, 879, 1030, 349, 496, 548]);\nobjective = 1032;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2]);\n", "json": {  "r" : [0, 185, 297, 439, 551, 616, 700, 841, 908, 930, 780, 927, 986, 134, 266, 468, 592, 647, 730, 812, 879, 1030, 349, 496, 548],  "objective" : 1032,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 2, 1, 0, 0],  "_objective" : 1032}}, "sections": ["default", "raw", "json"], "time": 466}
{"type": "statistics", "statistics": {"objective": 1030, "objectiveBound": 328, "boolVariables": 1240, "failures": 438, "propagations": 209079, "solveTime": 0.187648}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 185, 307, 452, 599, 654, 792, 934, 0, 958, 781, 898, 967, 125, 266, 435, 582, 647, 731, 849, 921, 58, 690, 813, 865]);\nobjective = 1030;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 185, 307, 452, 599, 654, 792, 934, 0, 958, 781, 898, 967, 125, 266, 435, 582, 647, 731, 849, 921, 58, 690, 813, 865]);\nobjective = 1030;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 185, 307, 452, 599, 654, 792, 934, 0, 958, 781, 898, 967, 125, 266, 435, 582, 647, 731, 849, 921, 58, 690, 813, 865],  "objective" : 1030,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0],  "_objective" : 1030}}, "sections": ["default", "raw", "json"], "time": 467}
{"type": "statistics", "statistics": {"objective": 1022, "objectiveBound": 328, "boolVariables": 1247, "failures": 438, "propagations": 210414, "solveTime": 0.188503}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 185, 307, 452, 599, 654, 792, 934, 0, 342, 781, 898, 967, 125, 266, 435, 582, 647, 731, 849, 921, 58, 690, 813, 865]);\nobjective = 1022;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 185, 307, 452, 599, 654, 792, 934, 0, 342, 781, 898, 967, 125, 266, 435, 582, 647, 731, 849, 921, 58, 690, 813, 865]);\nobjective = 1022;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 185, 307, 452, 599, 654, 792, 934, 0, 342, 781, 898, 967, 125, 266, 435, 582, 647, 731, 849, 921, 58, 690, 813, 865],  "objective" : 1022,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0],  "_objective" : 1022}}, "sections": ["default", "raw", "json"], "time": 468}
{"type": "statistics", "statistics": {"objective": 1002, "objectiveBound": 328, "boolVariables": 1260, "failures": 439, "propagations": 211893, "solveTime": 0.189423}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 185, 307, 452, 599, 654, 792, 934, 0, 342, 697, 814, 866, 44, 156, 334, 446, 501, 584, 679, 748, 58, 636, 783, 865]);\nobjective = 1002;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 185, 307, 452, 599, 654, 792, 934, 0, 342, 697, 814, 866, 44, 156, 334, 446, 501, 584, 679, 748, 58, 636, 783, 865]);\nobjective = 1002;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 185, 307, 452, 599, 654, 792, 934, 0, 342, 697, 814, 866, 44, 156, 334, 446, 501, 584, 679, 748, 58, 636, 783, 865],  "objective" : 1002,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 2, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 2, 0, 0],  "_objective" : 1002}}, "sections": ["default", "raw", "json"], "time": 469}
{"type": "statistics", "statistics": {"objective": 930, "objectiveBound": 328, "boolVariables": 1277, "failures": 457, "propagations": 218266, "solveTime": 0.191855}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 373, 575, 722, 787, 930, 142, 239, 863, 889, 106, 188, 418, 532, 674, 786, 841, 54, 196, 293, 727, 499, 616, 668]);\nobjective = 930;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 373, 575, 722, 787, 930, 142, 239, 863, 889, 106, 188, 418, 532, 674, 786, 841, 54, 196, 293, 727, 499, 616, 668]);\nobjective = 930;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2]);\n", "json": {  "r" : [0, 231, 373, 575, 722, 787, 930, 142, 239, 863, 889, 106, 188, 418, 532, 674, 786, 841, 54, 196, 293, 727, 499, 616, 668],  "objective" : 930,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 2, 3, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 930}}, "sections": ["default", "raw", "json"], "time": 472}
{"type": "statistics", "statistics": {"objective": 853, "objectiveBound": 328, "boolVariables": 1286, "failures": 491, "propagations": 340508, "solveTime": 0.230755}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 373, 575, 691, 756, 41, 169, 266, 297, 362, 509, 564, 794, 53, 255, 402, 467, 610, 722, 789, 811, 499, 616, 668]);\nobjective = 853;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 373, 575, 691, 756, 41, 169, 266, 297, 362, 509, 564, 794, 53, 255, 402, 467, 610, 722, 789, 811, 499, 616, 668]);\nobjective = 853;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 231, 373, 575, 691, 756, 41, 169, 266, 297, 362, 509, 564, 794, 53, 255, 402, 467, 610, 722, 789, 811, 499, 616, 668],  "objective" : 853,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0],  "_objective" : 853}}, "sections": ["default", "raw", "json"], "time": 510}
{"type": "statistics", "statistics": {"objective": 852, "objectiveBound": 328, "boolVariables": 1306, "failures": 492, "propagations": 342065, "solveTime": 0.231884}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 796, 44, 140, 38, 806, 92, 156, 336, 448, 590, 702, 757, 0, 113, 201, 245, 386, 533, 615]);\nobjective = 852;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 796, 44, 140, 38, 806, 92, 156, 336, 448, 590, 702, 757, 0, 113, 201, 245, 386, 533, 615]);\nobjective = 852;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 331, 495, 617, 672, 796, 44, 140, 38, 806, 92, 156, 336, 448, 590, 702, 757, 0, 113, 201, 245, 386, 533, 615],  "objective" : 852,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0],  "_objective" : 852}}, "sections": ["default", "raw", "json"], "time": 511}
{"type": "statistics", "statistics": {"objective": 851, "objectiveBound": 328, "boolVariables": 1321, "failures": 518, "propagations": 350639, "solveTime": 0.2351}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 796, 44, 140, 38, 806, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615]);\nobjective = 851;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 796, 44, 140, 38, 806, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615]);\nobjective = 851;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 203, 331, 495, 617, 672, 796, 44, 140, 38, 806, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615],  "objective" : 851,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0],  "_objective" : 851}}, "sections": ["default", "raw", "json"], "time": 516}
{"type": "statistics", "statistics": {"objective": 841, "objectiveBound": 328, "boolVariables": 1323, "failures": 528, "propagations": 354942, "solveTime": 0.237053}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 761, 44, 140, 38, 806, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615]);\nobjective = 841;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 761, 44, 140, 38, 806, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615]);\nobjective = 841;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 203, 331, 495, 617, 672, 761, 44, 140, 38, 806, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615],  "objective" : 841,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0],  "_objective" : 841}}, "sections": ["default", "raw", "json"], "time": 518}
{"type": "statistics", "statistics": {"objective": 840, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.244487}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 759, 44, 140, 38, 805, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615]);\nobjective = 840;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 759, 44, 140, 38, 805, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615]);\nobjective = 840;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 203, 331, 495, 617, 672, 759, 44, 140, 38, 805, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615],  "objective" : 840,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0],  "_objective" : 840}}, "sections": ["default", "raw", "json"], "time": 524}
{"type": "statistics", "statistics": {"objective": 839, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.246415}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 759, 44, 140, 38, 804, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615]);\nobjective = 839;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 759, 44, 140, 38, 804, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615]);\nobjective = 839;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 203, 331, 495, 617, 672, 759, 44, 140, 38, 804, 92, 156, 336, 448, 590, 702, 757, 1, 113, 201, 245, 386, 533, 615],  "objective" : 839,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0],  "_objective" : 839}}, "sections": ["default", "raw", "json"], "time": 526}
{"type": "statistics", "statistics": {"objective": 838, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.250063}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 757, 44, 140, 38, 803, 92, 156, 336, 448, 590, 702, 757, 3, 113, 201, 245, 386, 533, 615]);\nobjective = 838;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 757, 44, 140, 38, 803, 92, 156, 336, 448, 590, 702, 757, 3, 113, 201, 245, 386, 533, 615]);\nobjective = 838;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 203, 331, 495, 617, 672, 757, 44, 140, 38, 803, 92, 156, 336, 448, 590, 702, 757, 3, 113, 201, 245, 386, 533, 615],  "objective" : 838,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0],  "_objective" : 838}}, "sections": ["default", "raw", "json"], "time": 530}
{"type": "statistics", "statistics": {"objective": 837, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.251963}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 757, 44, 140, 38, 802, 92, 156, 336, 448, 590, 702, 757, 3, 113, 201, 245, 386, 533, 615]);\nobjective = 837;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 757, 44, 140, 38, 802, 92, 156, 336, 448, 590, 702, 757, 3, 113, 201, 245, 386, 533, 615]);\nobjective = 837;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 203, 331, 495, 617, 672, 757, 44, 140, 38, 802, 92, 156, 336, 448, 590, 702, 757, 3, 113, 201, 245, 386, 533, 615],  "objective" : 837,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0],  "_objective" : 837}}, "sections": ["default", "raw", "json"], "time": 531}
{"type": "statistics", "statistics": {"objective": 835, "objectiveBound": 329, "boolVariables": 1374, "failures": 633, "propagations": 390270, "solveTime": 0.254977}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 755, 44, 140, 35, 800, 92, 153, 333, 445, 588, 700, 755, 3, 110, 201, 245, 386, 533, 615]);\nobjective = 835;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 203, 331, 495, 617, 672, 755, 44, 140, 35, 800, 92, 153, 333, 445, 588, 700, 755, 3, 110, 201, 245, 386, 533, 615]);\nobjective = 835;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 203, 331, 495, 617, 672, 755, 44, 140, 35, 800, 92, 153, 333, 445, 588, 700, 755, 3, 110, 201, 245, 386, 533, 615],  "objective" : 835,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0],  "_objective" : 835}}, "sections": ["default", "raw", "json"], "time": 535}
{"type": "statistics", "statistics": {"objective": 834, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.25833}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 203, 331, 495, 615, 671, 754, 44, 140, 36, 799, 92, 154, 334, 446, 588, 700, 755, 4, 111, 201, 245, 386, 533, 615]);\nobjective = 834;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 203, 331, 495, 615, 671, 754, 44, 140, 36, 799, 92, 154, 334, 446, 588, 700, 755, 4, 111, 201, 245, 386, 533, 615]);\nobjective = 834;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2]);\n", "json": {  "r" : [0, 203, 331, 495, 615, 671, 754, 44, 140, 36, 799, 92, 154, 334, 446, 588, 700, 755, 4, 111, 201, 245, 386, 533, 615],  "objective" : 834,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 2, 0, 0],  "_objective" : 834}}, "sections": ["default", "raw", "json"], "time": 538}
{"type": "statistics", "statistics": {"objective": 833, "objectiveBound": 329, "boolVariables": 1393, "failures": 689, "propagations": 409375, "solveTime": 0.262112}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 215, 357, 499, 618, 673, 756, 45, 112, 298, 807, 91, 153, 334, 446, 589, 701, 756, 20, 132, 199, 221, 399, 534, 616]);\nobjective = 833;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 215, 357, 499, 618, 673, 756, 45, 112, 298, 807, 91, 153, 334, 446, 589, 701, 756, 20, 132, 199, 221, 399, 534, 616]);\nobjective = 833;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2]);\n", "json": {  "r" : [0, 215, 357, 499, 618, 673, 756, 45, 112, 298, 807, 91, 153, 334, 446, 589, 701, 756, 20, 132, 199, 221, 399, 534, 616],  "objective" : 833,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 2, 0, 0],  "_objective" : 833}}, "sections": ["default", "raw", "json"], "time": 542}
{"type": "statistics", "statistics": {"objective": 832, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.263242}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 215, 357, 499, 618, 673, 756, 45, 112, 298, 805, 91, 153, 334, 446, 589, 701, 756, 20, 132, 199, 221, 399, 534, 616]);\nobjective = 832;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 215, 357, 499, 618, 673, 756, 45, 112, 298, 805, 91, 153, 334, 446, 589, 701, 756, 20, 132, 199, 221, 399, 534, 616]);\nobjective = 832;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2]);\n", "json": {  "r" : [0, 215, 357, 499, 618, 673, 756, 45, 112, 298, 805, 91, 153, 334, 446, 589, 701, 756, 20, 132, 199, 221, 399, 534, 616],  "objective" : 832,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 1, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 3, 2, 0, 0],  "_objective" : 832}}, "sections": ["default", "raw", "json"], "time": 543}
{"type": "statistics", "statistics": {"objective": 831, "objectiveBound": 329, "boolVariables": 1413, "failures": 700, "propagations": 415369, "solveTime": 0.265019}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 225, 367, 569, 716, 778, 90, 232, 299, 299, 830, 128, 180, 361, 473, 615, 727, 782, 45, 133, 200, 652, 395, 535, 616]);\nobjective = 831;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 225, 367, 569, 716, 778, 90, 232, 299, 299, 830, 128, 180, 361, 473, 615, 727, 782, 45, 133, 200, 652, 395, 535, 616]);\nobjective = 831;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2]);\n", "json": {  "r" : [0, 225, 367, 569, 716, 778, 90, 232, 299, 299, 830, 128, 180, 361, 473, 615, 727, 782, 45, 133, 200, 652, 395, 535, 616],  "objective" : 831,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0],  "_objective" : 831}}, "sections": ["default", "raw", "json"], "time": 548}
{"type": "statistics", "statistics": {"objective": 830, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.269499}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 225, 367, 569, 716, 778, 90, 232, 299, 299, 830, 128, 180, 361, 473, 615, 727, 782, 47, 133, 200, 652, 395, 535, 616]);\nobjective = 830;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 225, 367, 569, 716, 778, 90, 232, 299, 299, 830, 128, 180, 361, 473, 615, 727, 782, 47, 133, 200, 652, 395, 535, 616]);\nobjective = 830;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2]);\n", "json": {  "r" : [0, 225, 367, 569, 716, 778, 90, 232, 299, 299, 830, 128, 180, 361, 473, 615, 727, 782, 47, 133, 200, 652, 395, 535, 616],  "objective" : 830,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 1, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 3, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 1, 0, 0],  "_objective" : 830}}, "sections": ["default", "raw", "json"], "time": 549}
{"type": "statistics", "statistics": {"objective": 814, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.27031}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 190, 302, 454, 596, 651, 756, 84, 151, 202, 715, 48, 130, 310, 427, 569, 681, 736, 5, 87, 175, 347, 394, 511, 563]);\nobjective = 814;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 190, 302, 454, 596, 651, 756, 84, 151, 202, 715, 48, 130, 310, 427, 569, 681, 736, 5, 87, 175, 347, 394, 511, 563]);\nobjective = 814;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2]);\n", "json": {  "r" : [0, 190, 302, 454, 596, 651, 756, 84, 151, 202, 715, 48, 130, 310, 427, 569, 681, 736, 5, 87, 175, 347, 394, 511, 563],  "objective" : 814,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 814}}, "sections": ["default", "raw", "json"], "time": 550}
{"type": "statistics", "statistics": {"objective": 806, "objectiveBound": 329, "boolVariables": 1463, "failures": 761, "propagations": 436129, "solveTime": 0.273327}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 673, 728, 5, 140, 237, 486, 52, 199, 278]);\nobjective = 806;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 673, 728, 5, 140, 237, 486, 52, 199, 278]);\nobjective = 806;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 673, 728, 5, 140, 237, 486, 52, 199, 278],  "objective" : 806,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 806}}, "sections": ["default", "raw", "json"], "time": 560}
{"type": "statistics", "statistics": {"objective": 802, "objectiveBound": 329, "boolVariables": 1479, "failures": 789, "propagations": 446557, "solveTime": 0.277189}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 667, 722, 5, 140, 237, 486, 52, 199, 278]);\nobjective = 802;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 667, 722, 5, 140, 237, 486, 52, 199, 278]);\nobjective = 802;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 667, 722, 5, 140, 237, 486, 52, 199, 278],  "objective" : 802,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 802}}, "sections": ["default", "raw", "json"], "time": 561}
{"type": "statistics", "statistics": {"objective": 800, "objectiveBound": 329, "boolVariables": 1484, "failures": 820, "propagations": 455502, "solveTime": 0.280278}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 667, 722, 5, 140, 237, 486, 52, 199, 278]);\nobjective = 800;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 667, 722, 5, 140, 237, 486, 52, 199, 278]);\nobjective = 800;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 667, 722, 5, 140, 237, 486, 52, 199, 278],  "objective" : 800,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 800}}, "sections": ["default", "raw", "json"], "time": 561}
{"type": "statistics", "statistics": {"objective": 799, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.282082}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 667, 722, 7, 140, 237, 486, 52, 199, 278]);\nobjective = 799;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 667, 722, 7, 140, 237, 486, 52, 199, 278]);\nobjective = 799;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 302, 444, 582, 637, 756, 84, 151, 668, 715, 34, 86, 266, 378, 555, 667, 722, 7, 140, 237, 486, 52, 199, 278],  "objective" : 799,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 799}}, "sections": ["default", "raw", "json"], "time": 562}
{"type": "statistics", "statistics": {"objective": 798, "objectiveBound": 329, "boolVariables": 1520, "failures": 884, "propagations": 478613, "solveTime": 0.288454}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 765, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 798, 77, 511, 77, 224, 278]);\nobjective = 798;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 765, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 798, 77, 511, 77, 224, 278]);\nobjective = 798;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 327, 469, 582, 637, 765, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 798, 77, 511, 77, 224, 278],  "objective" : 798,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0],  "_objective" : 798}}, "sections": ["default", "raw", "json"], "time": 568}
{"type": "statistics", "statistics": {"objective": 782, "objectiveBound": 329, "boolVariables": 1532, "failures": 884, "propagations": 480068, "solveTime": 0.289334}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 765, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 10, 77, 511, 77, 224, 278]);\nobjective = 782;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 765, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 10, 77, 511, 77, 224, 278]);\nobjective = 782;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 327, 469, 582, 637, 765, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 10, 77, 511, 77, 224, 278],  "objective" : 782,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0],  "_objective" : 782}}, "sections": ["default", "raw", "json"], "time": 573}
{"type": "statistics", "statistics": {"objective": 781, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.290734}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 763, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 10, 77, 511, 77, 224, 278]);\nobjective = 781;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 763, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 10, 77, 511, 77, 224, 278]);\nobjective = 781;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 327, 469, 582, 637, 763, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 10, 77, 511, 77, 224, 278],  "objective" : 781,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0],  "_objective" : 781}}, "sections": ["default", "raw", "json"], "time": 573}
{"type": "statistics", "statistics": {"objective": 780, "objectiveBound": 329, "boolVariables": 1539, "failures": 934, "propagations": 497715, "solveTime": 0.295955}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 763, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 10, 77, 511, 77, 224, 278]);\nobjective = 780;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 763, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 10, 77, 511, 77, 224, 278]);\nobjective = 780;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 327, 469, 582, 637, 763, 109, 176, 668, 423, 570, 622, 36, 152, 354, 466, 521, 662, 10, 77, 511, 77, 224, 278],  "objective" : 780,  "hoist" : [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 3, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0],  "_objective" : 780}}, "sections": ["default", "raw", "json"], "time": 576}
{"type": "statistics", "statistics": {"objective": 767, "objectiveBound": 329, "boolVariables": 1542, "failures": 934, "propagations": 499210, "solveTime": 0.297118}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 763, 109, 176, 668, 423, 570, 622, 36, 160, 354, 466, 521, 662, 26, 123, 511, 77, 224, 278]);\nobjective = 767;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 215, 327, 469, 582, 637, 763, 109, 176, 668, 423, 570, 622, 36, 160, 354, 466, 521, 662, 26, 123, 511, 77, 224, 278]);\nobjective = 767;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 327, 469, 582, 637, 763, 109, 176, 668, 423, 570, 622, 36, 160, 354, 466, 521, 662, 26, 123, 511, 77, 224, 278],  "objective" : 767,  "hoist" : [1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],  "_objective" : 767}}, "sections": ["default", "raw", "json"], "time": 579}
{"type": "statistics", "statistics": {"objective": 766, "objectiveBound": 329, "boolVariables": 1547, "failures": 939, "propagations": 501462, "solveTime": 0.298252}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 204, 325, 467, 579, 637, 720, 84, 151, 411, 363, 495, 572, 36, 161, 355, 475, 531, 614, 696, 763, 510, 77, 224, 276]);\nobjective = 766;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 204, 325, 467, 579, 637, 720, 84, 151, 411, 363, 495, 572, 36, 161, 355, 475, 531, 614, 696, 763, 510, 77, 224, 276]);\nobjective = 766;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 204, 325, 467, 579, 637, 720, 84, 151, 411, 363, 495, 572, 36, 161, 355, 475, 531, 614, 696, 763, 510, 77, 224, 276],  "objective" : 766,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0],  "_objective" : 766}}, "sections": ["default", "raw", "json"], "time": 579}
{"type": "statistics", "statistics": {"objective": 763, "objectiveBound": 329, "boolVariables": 1560, "failures": 939, "propagations": 502906, "solveTime": 0.299105}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 204, 325, 467, 579, 634, 717, 84, 151, 411, 363, 495, 572, 36, 161, 355, 475, 531, 614, 696, 763, 510, 77, 224, 276]);\nobjective = 763;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 204, 325, 467, 579, 634, 717, 84, 151, 411, 363, 495, 572, 36, 161, 355, 475, 531, 614, 696, 763, 510, 77, 224, 276]);\nobjective = 763;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 204, 325, 467, 579, 634, 717, 84, 151, 411, 363, 495, 572, 36, 161, 355, 475, 531, 614, 696, 763, 510, 77, 224, 276],  "objective" : 763,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0],  "_objective" : 763}}, "sections": ["default", "raw", "json"], "time": 580}
{"type": "statistics", "statistics": {"objective": 762, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.301725}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 204, 324, 466, 578, 633, 716, 84, 151, 411, 363, 494, 572, 36, 161, 355, 475, 530, 613, 695, 762, 510, 77, 224, 276]);\nobjective = 762;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 204, 324, 466, 578, 633, 716, 84, 151, 411, 363, 494, 572, 36, 161, 355, 475, 530, 613, 695, 762, 510, 77, 224, 276]);\nobjective = 762;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 204, 324, 466, 578, 633, 716, 84, 151, 411, 363, 494, 572, 36, 161, 355, 475, 530, 613, 695, 762, 510, 77, 224, 276],  "objective" : 762,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0],  "_objective" : 762}}, "sections": ["default", "raw", "json"], "time": 581}
{"type": "statistics", "statistics": {"objective": 761, "objectiveBound": 329, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.305458}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 204, 322, 465, 577, 632, 715, 84, 151, 410, 362, 493, 572, 36, 161, 355, 474, 529, 612, 694, 761, 510, 77, 224, 276]);\nobjective = 761;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 204, 322, 465, 577, 632, 715, 84, 151, 410, 362, 493, 572, 36, 161, 355, 474, 529, 612, 694, 761, 510, 77, 224, 276]);\nobjective = 761;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 204, 322, 465, 577, 632, 715, 84, 151, 410, 362, 493, 572, 36, 161, 355, 474, 529, 612, 694, 761, 510, 77, 224, 276],  "objective" : 761,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0],  "_objective" : 761}}, "sections": ["default", "raw", "json"], "time": 585}
{"type": "statistics", "statistics": {"objective": 749, "objectiveBound": 329, "boolVariables": 1579, "failures": 1011, "propagations": 529879, "solveTime": 0.309541}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 184, 296, 444, 575, 633, 0, 109, 189, 411, 343, 490, 572, 40, 152, 354, 475, 530, 613, 696, 29, 511, 681, 72, 127]);\nobjective = 749;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 184, 296, 444, 575, 633, 0, 109, 189, 411, 343, 490, 572, 40, 152, 354, 475, 530, 613, 696, 29, 511, 681, 72, 127]);\nobjective = 749;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 184, 296, 444, 575, 633, 0, 109, 189, 411, 343, 490, 572, 40, 152, 354, 475, 530, 613, 696, 29, 511, 681, 72, 127],  "objective" : 749,  "hoist" : [1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],  "_objective" : 749}}, "sections": ["default", "raw", "json"], "time": 590}
{"type": "statistics", "statistics": {"objective": 748, "objectiveBound": 329, "boolVariables": 1582, "failures": 1021, "propagations": 535194, "solveTime": 0.311755}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 184, 296, 444, 575, 633, 0, 109, 189, 411, 343, 490, 572, 40, 152, 354, 475, 530, 613, 695, 29, 511, 681, 72, 127]);\nobjective = 748;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 184, 296, 444, 575, 633, 0, 109, 189, 411, 343, 490, 572, 40, 152, 354, 475, 530, 613, 695, 29, 511, 681, 72, 127]);\nobjective = 748;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 184, 296, 444, 575, 633, 0, 109, 189, 411, 343, 490, 572, 40, 152, 354, 475, 530, 613, 695, 29, 511, 681, 72, 127],  "objective" : 748,  "hoist" : [1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0],  "_objective" : 748}}, "sections": ["default", "raw", "json"], "time": 597}
{"type": "statistics", "statistics": {"objective": 733, "objectiveBound": 330, "boolVariables": 1593, "failures": 1051, "propagations": 544910, "solveTime": 0.315371}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 184, 296, 444, 575, 633, 0, 109, 189, 411, 343, 490, 572, 40, 152, 354, 475, 530, 613, 695, 29, 511, 90, 237, 289]);\nobjective = 733;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 184, 296, 444, 575, 633, 0, 109, 189, 411, 343, 490, 572, 40, 152, 354, 475, 530, 613, 695, 29, 511, 90, 237, 289]);\nobjective = 733;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 184, 296, 444, 575, 633, 0, 109, 189, 411, 343, 490, 572, 40, 152, 354, 475, 530, 613, 695, 29, 511, 90, 237, 289],  "objective" : 733,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0],  "_objective" : 733}}, "sections": ["default", "raw", "json"], "time": 597}
{"type": "statistics", "statistics": {"objective": 732, "objectiveBound": 330, "boolVariables": 1647, "failures": 1121, "propagations": 570965, "solveTime": 0.324061}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 184, 296, 444, 572, 627, 710, 109, 189, 227, 343, 490, 572, 40, 152, 354, 475, 530, 670, 80, 159, 10, 90, 237, 289]);\nobjective = 732;\nhoist = array1d(0..24, [1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 184, 296, 444, 572, 627, 710, 109, 189, 227, 343, 490, 572, 40, 152, 354, 475, 530, 670, 80, 159, 10, 90, 237, 289]);\nobjective = 732;\nhoist = array1d(0..24, [1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 184, 296, 444, 572, 627, 710, 109, 189, 227, 343, 490, 572, 40, 152, 354, 475, 530, 670, 80, 159, 10, 90, 237, 289],  "objective" : 732,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 3, 1, 0, 0],  "_objective" : 732}}, "sections": ["default", "raw", "json"], "time": 604}
{"type": "statistics", "statistics": {"objective": 721, "objectiveBound": 331, "boolVariables": 1668, "failures": 1174, "propagations": 598717, "solveTime": 0.332816}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 184, 296, 444, 572, 627, 710, 109, 189, 227, 343, 490, 572, 40, 152, 354, 475, 530, 670, 80, 159, 511, 90, 237, 289]);\nobjective = 721;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 184, 296, 444, 572, 627, 710, 109, 189, 227, 343, 490, 572, 40, 152, 354, 475, 530, 670, 80, 159, 511, 90, 237, 289]);\nobjective = 721;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 184, 296, 444, 572, 627, 710, 109, 189, 227, 343, 490, 572, 40, 152, 354, 475, 530, 670, 80, 159, 511, 90, 237, 289],  "objective" : 721,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 2, 1, 0, 0],  "_objective" : 721}}, "sections": ["default", "raw", "json"], "time": 615}
{"type": "statistics", "statistics": {"objective": 719, "objectiveBound": 331, "boolVariables": 1675, "failures": 1218, "propagations": 614415, "solveTime": 0.337866}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 370, 572, 0, 55, 184, 266, 333, 85, 407, 524, 579, 40, 152, 334, 475, 540, 681, 80, 147, 216, 292, 439, 491]);\nobjective = 719;\nhoist = array1d(0..24, [1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 370, 572, 0, 55, 184, 266, 333, 85, 407, 524, 579, 40, 152, 334, 475, 540, 681, 80, 147, 216, 292, 439, 491]);\nobjective = 719;\nhoist = array1d(0..24, [1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 231, 370, 572, 0, 55, 184, 266, 333, 85, 407, 524, 579, 40, 152, 334, 475, 540, 681, 80, 147, 216, 292, 439, 491],  "objective" : 719,  "hoist" : [1, 1, 2, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0],  "_objective" : 719}}, "sections": ["default", "raw", "json"], "time": 619}
{"type": "statistics", "statistics": {"objective": 718, "objectiveBound": 331, "boolVariables": 1686, "failures": 1218, "propagations": 615992, "solveTime": 0.338765}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 370, 572, 0, 55, 184, 266, 333, 85, 382, 524, 578, 40, 152, 334, 475, 539, 681, 80, 147, 187, 292, 414, 466]);\nobjective = 718;\nhoist = array1d(0..24, [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 370, 572, 0, 55, 184, 266, 333, 85, 382, 524, 578, 40, 152, 334, 475, 539, 681, 80, 147, 187, 292, 414, 466]);\nobjective = 718;\nhoist = array1d(0..24, [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2]);\n", "json": {  "r" : [0, 231, 370, 572, 0, 55, 184, 266, 333, 85, 382, 524, 578, 40, 152, 334, 475, 539, 681, 80, 147, 187, 292, 414, 466],  "objective" : 718,  "hoist" : [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0],  "_objective" : 718}}, "sections": ["default", "raw", "json"], "time": 619}
{"type": "statistics", "statistics": {"objective": 699, "objectiveBound": 331, "boolVariables": 1695, "failures": 1230, "propagations": 620755, "solveTime": 0.340859}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 205, 332, 495, 641, 699, 95, 237, 321, 343, 390, 523, 604, 135, 277, 466, 613, 668, 52, 141, 208, 230, 400, 517, 569]);\nobjective = 699;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 205, 332, 495, 641, 699, 95, 237, 321, 343, 390, 523, 604, 135, 277, 466, 613, 668, 52, 141, 208, 230, 400, 517, 569]);\nobjective = 699;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 205, 332, 495, 641, 699, 95, 237, 321, 343, 390, 523, 604, 135, 277, 466, 613, 668, 52, 141, 208, 230, 400, 517, 569],  "objective" : 699,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0],  "_objective" : 699}}, "sections": ["default", "raw", "json"], "time": 626}
{"type": "statistics", "statistics": {"objective": 696, "objectiveBound": 331, "boolVariables": 1718, "failures": 1231, "propagations": 622410, "solveTime": 0.341852}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 205, 332, 495, 641, 0, 95, 237, 321, 343, 390, 523, 604, 135, 277, 466, 578, 633, 52, 141, 208, 35, 257, 402, 454]);\nobjective = 696;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 205, 332, 495, 641, 0, 95, 237, 321, 343, 390, 523, 604, 135, 277, 466, 578, 633, 52, 141, 208, 35, 257, 402, 454]);\nobjective = 696;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 205, 332, 495, 641, 0, 95, 237, 321, 343, 390, 523, 604, 135, 277, 466, 578, 633, 52, 141, 208, 35, 257, 402, 454],  "objective" : 696,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 1, 0, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0],  "_objective" : 696}}, "sections": ["default", "raw", "json"], "time": 626}
{"type": "statistics", "statistics": {"objective": 688, "objectiveBound": 331, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.34387}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 98, 186, 218, 330, 463, 538, 37, 149, 291, 434, 499, 630, 69, 136, 29, 240, 386, 468]);\nobjective = 688;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 98, 186, 218, 330, 463, 538, 37, 149, 291, 434, 499, 630, 69, 136, 29, 240, 386, 468]);\nobjective = 688;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 98, 186, 218, 330, 463, 538, 37, 149, 291, 434, 499, 630, 69, 136, 29, 240, 386, 468],  "objective" : 688,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 688}}, "sections": ["default", "raw", "json"], "time": 627}
{"type": "statistics", "statistics": {"objective": 687, "objectiveBound": 331, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.366116}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 295, 437, 549, 604, 687, 119, 216, 222, 332, 465, 543, 40, 159, 324, 439, 504, 647, 102, 195, 32, 274, 391, 473]);\nobjective = 687;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 295, 437, 549, 604, 687, 119, 216, 222, 332, 465, 543, 40, 159, 324, 439, 504, 647, 102, 195, 32, 274, 391, 473]);\nobjective = 687;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 295, 437, 549, 604, 687, 119, 216, 222, 332, 465, 543, 40, 159, 324, 439, 504, 647, 102, 195, 32, 274, 391, 473],  "objective" : 687,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 687}}, "sections": ["default", "raw", "json"], "time": 646}
{"type": "statistics", "statistics": {"objective": 686, "objectiveBound": 331, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.367861}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 294, 436, 548, 603, 686, 119, 216, 222, 332, 465, 543, 40, 159, 324, 439, 504, 647, 102, 195, 32, 274, 391, 473]);\nobjective = 686;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 294, 436, 548, 603, 686, 119, 216, 222, 332, 465, 543, 40, 159, 324, 439, 504, 647, 102, 195, 32, 274, 391, 473]);\nobjective = 686;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 294, 436, 548, 603, 686, 119, 216, 222, 332, 465, 543, 40, 159, 324, 439, 504, 647, 102, 195, 32, 274, 391, 473],  "objective" : 686,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 686}}, "sections": ["default", "raw", "json"], "time": 648}
{"type": "statistics", "statistics": {"objective": 685, "objectiveBound": 331, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.369232}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 119, 216, 222, 332, 465, 543, 40, 159, 324, 439, 504, 647, 102, 195, 32, 274, 391, 473]);\nobjective = 685;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 685, 119, 216, 222, 332, 465, 543, 40, 159, 324, 439, 504, 647, 102, 195, 32, 274, 391, 473]);\nobjective = 685;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 119, 216, 222, 332, 465, 543, 40, 159, 324, 439, 504, 647, 102, 195, 32, 274, 391, 473],  "objective" : 685,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 685}}, "sections": ["default", "raw", "json"], "time": 649}
{"type": "statistics", "statistics": {"objective": 654, "objectiveBound": 331, "boolVariables": 1804, "failures": 1464, "propagations": 714623, "solveTime": 0.369761}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 603, 42, 139, 216, 69, 284, 401, 460, 649, 137, 324, 439, 504, 614, 102, 169, 32, 218, 335, 387]);\nobjective = 654;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 603, 42, 139, 216, 69, 284, 401, 460, 649, 137, 324, 439, 504, 614, 102, 169, 32, 218, 335, 387]);\nobjective = 654;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 603, 42, 139, 216, 69, 284, 401, 460, 649, 137, 324, 439, 504, 614, 102, 169, 32, 218, 335, 387],  "objective" : 654,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 654}}, "sections": ["default", "raw", "json"], "time": 649}
{"type": "statistics", "statistics": {"objective": 653, "objectiveBound": 331, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.371197}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 603, 42, 139, 216, 69, 284, 401, 460, 648, 137, 324, 439, 504, 613, 102, 169, 32, 218, 335, 387]);\nobjective = 653;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 603, 42, 139, 216, 69, 284, 401, 460, 648, 137, 324, 439, 504, 613, 102, 169, 32, 218, 335, 387]);\nobjective = 653;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 603, 42, 139, 216, 69, 284, 401, 460, 648, 137, 324, 439, 504, 613, 102, 169, 32, 218, 335, 387],  "objective" : 653,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 653}}, "sections": ["default", "raw", "json"], "time": 651}
{"type": "statistics", "statistics": {"objective": 648, "objectiveBound": 331, "boolVariables": 1828, "failures": 1507, "propagations": 729127, "solveTime": 0.375777}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 603, 42, 139, 216, 69, 284, 401, 460, 648, 137, 324, 439, 504, 613, 102, 169, 474, 218, 335, 387]);\nobjective = 648;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 603, 42, 139, 216, 69, 284, 401, 460, 648, 137, 324, 439, 504, 613, 102, 169, 474, 218, 335, 387]);\nobjective = 648;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 603, 42, 139, 216, 69, 284, 401, 460, 648, 137, 324, 439, 504, 613, 102, 169, 474, 218, 335, 387],  "objective" : 648,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0],  "_objective" : 648}}, "sections": ["default", "raw", "json"], "time": 660}
{"type": "statistics", "statistics": {"objective": 647, "objectiveBound": 331, "boolVariables": 1842, "failures": 1556, "propagations": 745334, "solveTime": 0.381285}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 42, 139, 216, 69, 260, 401, 460, 1, 137, 324, 439, 504, 613, 102, 169, 474, 218, 335, 387]);\nobjective = 647;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 42, 139, 216, 69, 260, 401, 460, 1, 137, 324, 439, 504, 613, 102, 169, 474, 218, 335, 387]);\nobjective = 647;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 42, 139, 216, 69, 260, 401, 460, 1, 137, 324, 439, 504, 613, 102, 169, 474, 218, 335, 387],  "objective" : 647,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0],  "_objective" : 647}}, "sections": ["default", "raw", "json"], "time": 662}
{"type": "statistics", "statistics": {"objective": 639, "objectiveBound": 331, "boolVariables": 1853, "failures": 1616, "propagations": 765829, "solveTime": 0.387618}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 460, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246]);\nobjective = 639;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 460, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246]);\nobjective = 639;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 460, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246],  "objective" : 639,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0],  "_objective" : 639}}, "sections": ["default", "raw", "json"], "time": 667}
{"type": "statistics", "statistics": {"objective": 638, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.416895}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 458, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246]);\nobjective = 638;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 458, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246]);\nobjective = 638;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 458, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246],  "objective" : 638,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0],  "_objective" : 638}}, "sections": ["default", "raw", "json"], "time": 696}
{"type": "statistics", "statistics": {"objective": 637, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.417643}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 458, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246]);\nobjective = 637;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 458, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246]);\nobjective = 637;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 458, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246],  "objective" : 637,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0],  "_objective" : 637}}, "sections": ["default", "raw", "json"], "time": 697}
{"type": "statistics", "statistics": {"objective": 636, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.419916}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 456, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246]);\nobjective = 636;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 456, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246]);\nobjective = 636;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 223, 365, 537, 33, 88, 205, 303, 400, 344, 260, 401, 456, 1, 137, 292, 439, 504, 599, 102, 169, 474, 35, 167, 246],  "objective" : 636,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, 0],  "_objective" : 636}}, "sections": ["default", "raw", "json"], "time": 699}
{"type": "statistics", "statistics": {"objective": 617, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.420687}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 552, 617, 86, 228, 325, 113, 204, 321, 373, 585, 84, 265, 402, 467, 550, 49, 116, 437, 165, 282, 348]);\nobjective = 617;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 552, 617, 86, 228, 325, 113, 204, 321, 373, 585, 84, 265, 402, 467, 550, 49, 116, 437, 165, 282, 348]);\nobjective = 617;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 552, 617, 86, 228, 325, 113, 204, 321, 373, 585, 84, 265, 402, 467, 550, 49, 116, 437, 165, 282, 348],  "objective" : 617,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],  "_objective" : 617}}, "sections": ["default", "raw", "json"], "time": 701}
{"type": "statistics", "statistics": {"objective": 616, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.461121}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 561, 616, 95, 228, 325, 502, 151, 298, 366, 546, 63, 265, 402, 467, 576, 42, 110, 438, 180, 327, 379]);\nobjective = 616;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 561, 616, 95, 228, 325, 502, 151, 298, 366, 546, 63, 265, 402, 467, 576, 42, 110, 438, 180, 327, 379]);\nobjective = 616;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 561, 616, 95, 228, 325, 502, 151, 298, 366, 546, 63, 265, 402, 467, 576, 42, 110, 438, 180, 327, 379],  "objective" : 616,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],  "_objective" : 616}}, "sections": ["default", "raw", "json"], "time": 741}
{"type": "statistics", "statistics": {"objective": 602, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.462045}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 87, 228, 325, 114, 201, 318, 370, 564, 84, 265, 377, 432, 529, 49, 116, 462, 48, 165, 235]);\nobjective = 602;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 435, 547, 602, 87, 228, 325, 114, 201, 318, 370, 564, 84, 265, 377, 432, 529, 49, 116, 462, 48, 165, 235]);\nobjective = 602;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 87, 228, 325, 114, 201, 318, 370, 564, 84, 265, 377, 432, 529, 49, 116, 462, 48, 165, 235],  "objective" : 602,  "hoist" : [1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],  "_objective" : 602}}, "sections": ["default", "raw", "json"], "time": 742}
{"type": "statistics", "statistics": {"objective": 601, "objectiveBound": 332, "boolVariables": 1088, "failures": 1882, "propagations": 557411, "solveTime": 0.506585}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 218, 359, 501, 47, 106, 207, 295, 392, 78, 252, 369, 421, 601, 142, 332, 453, 508, 46, 172, 263, 543, 337, 477, 559]);\nobjective = 601;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 218, 359, 501, 47, 106, 207, 295, 392, 78, 252, 369, 421, 601, 142, 332, 453, 508, 46, 172, 263, 543, 337, 477, 559]);\nobjective = 601;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 218, 359, 501, 47, 106, 207, 295, 392, 78, 252, 369, 421, 601, 142, 332, 453, 508, 46, 172, 263, 543, 337, 477, 559],  "objective" : 601,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 601}}, "sections": ["default", "raw", "json"], "time": 787}
{"type": "statistics", "statistics": {"objective": 600, "objectiveBound": 332, "boolVariables": 1102, "failures": 1884, "propagations": 559065, "solveTime": 0.516593}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 182, 294, 486, 33, 88, 192, 280, 372, 62, 237, 365, 417, 600, 130, 332, 453, 508, 30, 160, 248, 538, 333, 477, 559]);\nobjective = 600;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 182, 294, 486, 33, 88, 192, 280, 372, 62, 237, 365, 417, 600, 130, 332, 453, 508, 30, 160, 248, 538, 333, 477, 559]);\nobjective = 600;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 182, 294, 486, 33, 88, 192, 280, 372, 62, 237, 365, 417, 600, 130, 332, 453, 508, 30, 160, 248, 538, 333, 477, 559],  "objective" : 600,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 600}}, "sections": ["default", "raw", "json"], "time": 796}
{"type": "statistics", "statistics": {"objective": 599, "objectiveBound": 332, "boolVariables": 1104, "failures": 1884, "propagations": 560397, "solveTime": 0.52574}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 182, 294, 486, 33, 88, 192, 280, 372, 60, 237, 365, 417, 597, 130, 332, 453, 508, 28, 160, 248, 538, 333, 477, 542]);\nobjective = 599;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 182, 294, 486, 33, 88, 192, 280, 372, 60, 237, 365, 417, 597, 130, 332, 453, 508, 28, 160, 248, 538, 333, 477, 542]);\nobjective = 599;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 182, 294, 486, 33, 88, 192, 280, 372, 60, 237, 365, 417, 597, 130, 332, 453, 508, 28, 160, 248, 538, 333, 477, 542],  "objective" : 599,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 599}}, "sections": ["default", "raw", "json"], "time": 807}
{"type": "statistics", "statistics": {"objective": 598, "objectiveBound": 332, "boolVariables": 1107, "failures": 1884, "propagations": 561729, "solveTime": 0.536682}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 182, 294, 486, 33, 88, 192, 280, 372, 62, 237, 365, 417, 597, 130, 332, 453, 508, 29, 160, 248, 538, 333, 477, 542]);\nobjective = 598;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 182, 294, 486, 33, 88, 192, 280, 372, 62, 237, 365, 417, 597, 130, 332, 453, 508, 29, 160, 248, 538, 333, 477, 542]);\nobjective = 598;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 182, 294, 486, 33, 88, 192, 280, 372, 62, 237, 365, 417, 597, 130, 332, 453, 508, 29, 160, 248, 538, 333, 477, 542],  "objective" : 598,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 598}}, "sections": ["default", "raw", "json"], "time": 816}
{"type": "statistics", "statistics": {"objective": 597, "objectiveBound": 332, "boolVariables": 1963, "failures": 2323, "propagations": 1478348, "solveTime": 0.544238}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 192, 334, 491, 41, 106, 189, 277, 372, 62, 234, 364, 416, 596, 126, 307, 453, 508, 29, 156, 223, 538, 272, 393, 447]);\nobjective = 597;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 192, 334, 491, 41, 106, 189, 277, 372, 62, 234, 364, 416, 596, 126, 307, 453, 508, 29, 156, 223, 538, 272, 393, 447]);\nobjective = 597;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 192, 334, 491, 41, 106, 189, 277, 372, 62, 234, 364, 416, 596, 126, 307, 453, 508, 29, 156, 223, 538, 272, 393, 447],  "objective" : 597,  "hoist" : [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 597}}, "sections": ["default", "raw", "json"], "time": 827}
{"type": "statistics", "statistics": {"objective": 596, "objectiveBound": 332, "boolVariables": 1970, "failures": 2323, "propagations": 1480232, "solveTime": 0.545358}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 333, 486, 33, 88, 172, 275, 372, 62, 225, 363, 415, 595, 126, 306, 453, 508, 29, 140, 207, 538, 256, 392, 446]);\nobjective = 596;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 333, 486, 33, 88, 172, 275, 372, 62, 225, 363, 415, 595, 126, 306, 453, 508, 29, 140, 207, 538, 256, 392, 446]);\nobjective = 596;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 333, 486, 33, 88, 172, 275, 372, 62, 225, 363, 415, 595, 126, 306, 453, 508, 29, 140, 207, 538, 256, 392, 446],  "objective" : 596,  "hoist" : [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 596}}, "sections": ["default", "raw", "json"], "time": 827}
{"type": "statistics", "statistics": {"objective": 595, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.5496529999999999}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 333, 486, 33, 88, 172, 275, 372, 62, 225, 363, 415, 595, 126, 306, 453, 508, 30, 140, 207, 538, 256, 392, 446]);\nobjective = 595;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 333, 486, 33, 88, 172, 275, 372, 62, 225, 363, 415, 595, 126, 306, 453, 508, 30, 140, 207, 538, 256, 392, 446]);\nobjective = 595;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 333, 486, 33, 88, 172, 275, 372, 62, 225, 363, 415, 595, 126, 306, 453, 508, 30, 140, 207, 538, 256, 392, 446],  "objective" : 595,  "hoist" : [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 595}}, "sections": ["default", "raw", "json"], "time": 829}
{"type": "statistics", "statistics": {"objective": 594, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.556171}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 332, 486, 33, 88, 172, 275, 372, 62, 225, 362, 414, 594, 126, 305, 452, 507, 30, 140, 207, 537, 256, 392, 446]);\nobjective = 594;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 332, 486, 33, 88, 172, 275, 372, 62, 225, 362, 414, 594, 126, 305, 452, 507, 30, 140, 207, 537, 256, 392, 446]);\nobjective = 594;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 332, 486, 33, 88, 172, 275, 372, 62, 225, 362, 414, 594, 126, 305, 452, 507, 30, 140, 207, 537, 256, 392, 446],  "objective" : 594,  "hoist" : [1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 594}}, "sections": ["default", "raw", "json"], "time": 836}
{"type": "statistics", "statistics": {"objective": 593, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.5659920000000001}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 331, 486, 33, 88, 172, 275, 372, 62, 225, 361, 413, 593, 126, 305, 451, 506, 30, 140, 207, 536, 256, 392, 446]);\nobjective = 593;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 331, 486, 33, 88, 172, 275, 372, 62, 225, 361, 413, 593, 126, 305, 451, 506, 30, 140, 207, 536, 256, 392, 446]);\nobjective = 593;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 331, 486, 33, 88, 172, 275, 372, 62, 225, 361, 413, 593, 126, 305, 451, 506, 30, 140, 207, 536, 256, 392, 446],  "objective" : 593,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 593}}, "sections": ["default", "raw", "json"], "time": 846}
{"type": "statistics", "statistics": {"objective": 562, "objectiveBound": 332, "boolVariables": 2048, "failures": 2580, "propagations": 1598856, "solveTime": 0.577577}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 331, 523, 108, 173, 266, 397, 488, 49, 225, 361, 413, 31, 143, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446]);\nobjective = 562;\nhoist = array1d(0..24, [1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 331, 523, 108, 173, 266, 397, 488, 49, 225, 361, 413, 31, 143, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446]);\nobjective = 562;\nhoist = array1d(0..24, [1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 331, 523, 108, 173, 266, 397, 488, 49, 225, 361, 413, 31, 143, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446],  "objective" : 562,  "hoist" : [1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 562}}, "sections": ["default", "raw", "json"], "time": 864}
{"type": "statistics", "statistics": {"objective": 561, "objectiveBound": 332, "boolVariables": 2055, "failures": 2582, "propagations": 1601448, "solveTime": 0.579016}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 331, 523, 74, 129, 266, 397, 488, 95, 225, 361, 413, 41, 159, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446]);\nobjective = 561;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 331, 523, 74, 129, 266, 397, 488, 95, 225, 361, 413, 41, 159, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446]);\nobjective = 561;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 331, 523, 74, 129, 266, 397, 488, 95, 225, 361, 413, 41, 159, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446],  "objective" : 561,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 561}}, "sections": ["default", "raw", "json"], "time": 865}
{"type": "statistics", "statistics": {"objective": 560, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.582553}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 331, 523, 75, 131, 266, 397, 488, 95, 225, 361, 413, 41, 159, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446]);\nobjective = 560;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 331, 523, 75, 131, 266, 397, 488, 95, 225, 361, 413, 41, 159, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446]);\nobjective = 560;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 331, 523, 75, 131, 266, 397, 488, 95, 225, 361, 413, 41, 159, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446],  "objective" : 560,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 560}}, "sections": ["default", "raw", "json"], "time": 865}
{"type": "statistics", "statistics": {"objective": 559, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.5864819999999999}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 331, 523, 76, 131, 266, 397, 488, 95, 225, 361, 413, 41, 159, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446]);\nobjective = 559;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 331, 523, 76, 131, 266, 397, 488, 95, 225, 361, 413, 41, 159, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446]);\nobjective = 559;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 331, 523, 76, 131, 266, 397, 488, 95, 225, 361, 413, 41, 159, 304, 451, 506, 61, 203, 296, 536, 250, 367, 446],  "objective" : 559,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 559}}, "sections": ["default", "raw", "json"], "time": 866}
{"type": "statistics", "statistics": {"objective": 558, "objectiveBound": 332, "boolVariables": 2095, "failures": 2663, "propagations": 1642084, "solveTime": 0.590303}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 331, 522, 76, 131, 266, 397, 487, 95, 225, 361, 413, 41, 159, 304, 449, 506, 61, 189, 286, 536, 240, 367, 446]);\nobjective = 558;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 331, 522, 76, 131, 266, 397, 487, 95, 225, 361, 413, 41, 159, 304, 449, 506, 61, 189, 286, 536, 240, 367, 446]);\nobjective = 558;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 331, 522, 76, 131, 266, 397, 487, 95, 225, 361, 413, 41, 159, 304, 449, 506, 61, 189, 286, 536, 240, 367, 446],  "objective" : 558,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 558}}, "sections": ["default", "raw", "json"], "time": 872}
{"type": "statistics", "statistics": {"objective": 557, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.6014350000000001}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 331, 521, 76, 131, 266, 397, 486, 95, 225, 361, 413, 41, 159, 304, 449, 506, 61, 189, 286, 536, 240, 367, 446]);\nobjective = 557;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 331, 521, 76, 131, 266, 397, 486, 95, 225, 361, 413, 41, 159, 304, 449, 506, 61, 189, 286, 536, 240, 367, 446]);\nobjective = 557;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 331, 521, 76, 131, 266, 397, 486, 95, 225, 361, 413, 41, 159, 304, 449, 506, 61, 189, 286, 536, 240, 367, 446],  "objective" : 557,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 557}}, "sections": ["default", "raw", "json"], "time": 881}
{"type": "statistics", "statistics": {"objective": 556, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.603862}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 331, 520, 76, 131, 266, 397, 485, 95, 225, 361, 413, 41, 159, 304, 448, 506, 61, 189, 286, 536, 240, 367, 446]);\nobjective = 556;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 331, 520, 76, 131, 266, 397, 485, 95, 225, 361, 413, 41, 159, 304, 448, 506, 61, 189, 286, 536, 240, 367, 446]);\nobjective = 556;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 331, 520, 76, 131, 266, 397, 485, 95, 225, 361, 413, 41, 159, 304, 448, 506, 61, 189, 286, 536, 240, 367, 446],  "objective" : 556,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 556}}, "sections": ["default", "raw", "json"], "time": 883}
{"type": "statistics", "statistics": {"objective": 555, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.6136779999999999}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 191, 331, 519, 76, 131, 266, 397, 484, 95, 225, 361, 413, 41, 159, 304, 447, 506, 61, 189, 286, 536, 240, 367, 446]);\nobjective = 555;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 191, 331, 519, 76, 131, 266, 397, 484, 95, 225, 361, 413, 41, 159, 304, 447, 506, 61, 189, 286, 536, 240, 367, 446]);\nobjective = 555;\nhoist = array1d(0..24, [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 331, 519, 76, 131, 266, 397, 484, 95, 225, 361, 413, 41, 159, 304, 447, 506, 61, 189, 286, 536, 240, 367, 446],  "objective" : 555,  "hoist" : [1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 3, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 555}}, "sections": ["default", "raw", "json"], "time": 893}
{"type": "statistics", "statistics": {"objective": 554, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.6196199999999999}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 347, 514, 72, 127, 261, 393, 490, 288, 444, 34, 106, 286, 402, 0, 138, 193, 316, 432, 519, 343, 34, 181, 245]);\nobjective = 554;\nhoist = array1d(0..24, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 347, 514, 72, 127, 261, 393, 490, 288, 444, 34, 106, 286, 402, 0, 138, 193, 316, 432, 519, 343, 34, 181, 245]);\nobjective = 554;\nhoist = array1d(0..24, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 231, 347, 514, 72, 127, 261, 393, 490, 288, 444, 34, 106, 286, 402, 0, 138, 193, 316, 432, 519, 343, 34, 181, 245],  "objective" : 554,  "hoist" : [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 554}}, "sections": ["default", "raw", "json"], "time": 899}
{"type": "statistics", "statistics": {"objective": 537, "objectiveBound": 332, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.62247}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 187, 319, 461, 36, 91, 217, 349, 426, 56, 148, 295, 351, 531, 120, 262, 389, 444, 24, 150, 246, 474, 197, 324, 392]);\nobjective = 537;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 187, 319, 461, 36, 91, 217, 349, 426, 56, 148, 295, 351, 531, 120, 262, 389, 444, 24, 150, 246, 474, 197, 324, 392]);\nobjective = 537;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 187, 319, 461, 36, 91, 217, 349, 426, 56, 148, 295, 351, 531, 120, 262, 389, 444, 24, 150, 246, 474, 197, 324, 392],  "objective" : 537,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0],  "_objective" : 537}}, "sections": ["default", "raw", "json"], "time": 903}
{"type": "statistics", "statistics": {"objective": 536, "objectiveBound": 332, "boolVariables": 1158, "failures": 2022, "propagations": 590305, "solveTime": 0.646498}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 226, 342, 488, 64, 127, 256, 372, 469, 283, 423, 34, 98, 278, 394, 0, 133, 188, 308, 424, 498, 335, 45, 181, 233]);\nobjective = 536;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 226, 342, 488, 64, 127, 256, 372, 469, 283, 423, 34, 98, 278, 394, 0, 133, 188, 308, 424, 498, 335, 45, 181, 233]);\nobjective = 536;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 226, 342, 488, 64, 127, 256, 372, 469, 283, 423, 34, 98, 278, 394, 0, 133, 188, 308, 424, 498, 335, 45, 181, 233],  "objective" : 536,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 536}}, "sections": ["default", "raw", "json"], "time": 926}
{"type": "statistics", "statistics": {"objective": 535, "objectiveBound": 332, "boolVariables": 2247, "failures": 3300, "propagations": 1920698, "solveTime": 0.663986}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 226, 342, 488, 65, 127, 256, 372, 469, 283, 423, 34, 98, 278, 394, 1, 133, 188, 308, 424, 498, 335, 45, 181, 233]);\nobjective = 535;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 226, 342, 488, 65, 127, 256, 372, 469, 283, 423, 34, 98, 278, 394, 1, 133, 188, 308, 424, 498, 335, 45, 181, 233]);\nobjective = 535;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 226, 342, 488, 65, 127, 256, 372, 469, 283, 423, 34, 98, 278, 394, 1, 133, 188, 308, 424, 498, 335, 45, 181, 233],  "objective" : 535,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 535}}, "sections": ["default", "raw", "json"], "time": 944}
{"type": "statistics", "statistics": {"objective": 513, "objectiveBound": 333, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.681181}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 208, 320, 481, 80, 135, 238, 350, 446, 374, 178, 295, 370, 37, 149, 307, 448, 513, 97, 179, 272, 30, 226, 343, 401]);\nobjective = 513;\nhoist = array1d(0..24, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 208, 320, 481, 80, 135, 238, 350, 446, 374, 178, 295, 370, 37, 149, 307, 448, 513, 97, 179, 272, 30, 226, 343, 401]);\nobjective = 513;\nhoist = array1d(0..24, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 208, 320, 481, 80, 135, 238, 350, 446, 374, 178, 295, 370, 37, 149, 307, 448, 513, 97, 179, 272, 30, 226, 343, 401],  "objective" : 513,  "hoist" : [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0],  "_objective" : 513}}, "sections": ["default", "raw", "json"], "time": 961}
{"type": "statistics", "statistics": {"objective": 512, "objectiveBound": 333, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.798697}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 218, 334, 476, 76, 131, 248, 364, 457, 275, 411, 34, 86, 266, 382, 12, 124, 179, 296, 421, 488, 323, 50, 167, 219]);\nobjective = 512;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 218, 334, 476, 76, 131, 248, 364, 457, 275, 411, 34, 86, 266, 382, 12, 124, 179, 296, 421, 488, 323, 50, 167, 219]);\nobjective = 512;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 218, 334, 476, 76, 131, 248, 364, 457, 275, 411, 34, 86, 266, 382, 12, 124, 179, 296, 421, 488, 323, 50, 167, 219],  "objective" : 512,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 512}}, "sections": ["default", "raw", "json"], "time": 1079}
{"type": "statistics", "statistics": {"objective": 470, "objectiveBound": 334, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 0.812234}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 184, 326, 12, 151, 211, 294, 420, 47, 69, 116, 254, 330, 82, 219, 407, 49, 109, 246, 373, 442, 139, 186, 303, 361]);\nobjective = 470;\nhoist = array1d(0..24, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 184, 326, 12, 151, 211, 294, 420, 47, 69, 116, 254, 330, 82, 219, 407, 49, 109, 246, 373, 442, 139, 186, 303, 361]);\nobjective = 470;\nhoist = array1d(0..24, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 184, 326, 12, 151, 211, 294, 420, 47, 69, 116, 254, 330, 82, 219, 407, 49, 109, 246, 373, 442, 139, 186, 303, 361],  "objective" : 470,  "hoist" : [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 0, 1, 2, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 470}}, "sections": ["default", "raw", "json"], "time": 1092}
{"type": "statistics", "statistics": {"objective": 469, "objectiveBound": 339, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 1.16111}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 293, 1, 148, 208, 320, 421, 46, 68, 115, 245, 309, 61, 198, 384, 28, 88, 225, 352, 419, 118, 165, 282, 361]);\nobjective = 469;\nhoist = array1d(0..24, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 293, 1, 148, 208, 320, 421, 46, 68, 115, 245, 309, 61, 198, 384, 28, 88, 225, 352, 419, 118, 165, 282, 361]);\nobjective = 469;\nhoist = array1d(0..24, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 1, 148, 208, 320, 421, 46, 68, 115, 245, 309, 61, 198, 384, 28, 88, 225, 352, 419, 118, 165, 282, 361],  "objective" : 469,  "hoist" : [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 469}}, "sections": ["default", "raw", "json"], "time": 1441}
{"type": "statistics", "statistics": {"objective": 468, "objectiveBound": 340, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 1.2428}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 227, 340, 57, 194, 254, 367, 25, 92, 114, 161, 291, 351, 103, 240, 426, 70, 130, 267, 394, 461, 160, 207, 324, 382]);\nobjective = 468;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 227, 340, 57, 194, 254, 367, 25, 92, 114, 161, 291, 351, 103, 240, 426, 70, 130, 267, 394, 461, 160, 207, 324, 382]);\nobjective = 468;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 227, 340, 57, 194, 254, 367, 25, 92, 114, 161, 291, 351, 103, 240, 426, 70, 130, 267, 394, 461, 160, 207, 324, 382],  "objective" : 468,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 468}}, "sections": ["default", "raw", "json"], "time": 1523}
{"type": "statistics", "statistics": {"objective": 465, "objectiveBound": 340, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 1.3704}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 215, 327, 36, 182, 242, 354, 15, 100, 410, 149, 279, 336, 101, 218, 413, 63, 128, 247, 381, 448, 44, 171, 288, 367]);\nobjective = 465;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 215, 327, 36, 182, 242, 354, 15, 100, 410, 149, 279, 336, 101, 218, 413, 63, 128, 247, 381, 448, 44, 171, 288, 367]);\nobjective = 465;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 215, 327, 36, 182, 242, 354, 15, 100, 410, 149, 279, 336, 101, 218, 413, 63, 128, 247, 381, 448, 44, 171, 288, 367],  "objective" : 465,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 2, 1, 0, 0],  "_objective" : 465}}, "sections": ["default", "raw", "json"], "time": 1651}
{"type": "statistics", "statistics": {"objective": 464, "objectiveBound": 342, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 1.70097}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 438, 111, 173, 315, 406, 9, 31, 78, 210, 291]);\nobjective = 464;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 438, 111, 173, 315, 406, 9, 31, 78, 210, 291]);\nobjective = 464;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 438, 111, 173, 315, 406, 9, 31, 78, 210, 291],  "objective" : 464,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0],  "_objective" : 464}}, "sections": ["default", "raw", "json"], "time": 1981}
{"type": "statistics", "statistics": {"objective": 463, "objectiveBound": 342, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 1.71024}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 437, 111, 173, 315, 405, 9, 31, 78, 210, 291]);\nobjective = 463;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 437, 111, 173, 315, 405, 9, 31, 78, 210, 291]);\nobjective = 463;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 437, 111, 173, 315, 405, 9, 31, 78, 210, 291],  "objective" : 463,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0],  "_objective" : 463}}, "sections": ["default", "raw", "json"], "time": 1990}
{"type": "statistics", "statistics": {"objective": 462, "objectiveBound": 342, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 1.72073}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 438, 113, 173, 315, 406, 11, 33, 80, 210, 291]);\nobjective = 462;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 438, 113, 173, 315, 406, 11, 33, 80, 210, 291]);\nobjective = 462;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 438, 113, 173, 315, 406, 11, 33, 80, 210, 291],  "objective" : 462,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0],  "_objective" : 462}}, "sections": ["default", "raw", "json"], "time": 2000}
{"type": "statistics", "statistics": {"objective": 461, "objectiveBound": 342, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 1.73188}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 436, 113, 173, 315, 404, 10, 32, 79, 210, 291]);\nobjective = 461;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 436, 113, 173, 315, 404, 10, 32, 79, 210, 291]);\nobjective = 461;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 225, 352, 76, 192, 252, 379, 44, 111, 133, 246, 363, 415, 146, 288, 436, 113, 173, 315, 404, 10, 32, 79, 210, 291],  "objective" : 461,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 1, 1, 0, 0],  "_objective" : 461}}, "sections": ["default", "raw", "json"], "time": 2012}
{"type": "statistics", "statistics": {"objective": 450, "objectiveBound": 345, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 2.36866}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 181, 323, 36, 148, 208, 350, 20, 111, 238, 290, 434, 61, 251, 363, 81, 218, 278, 390, 49, 116, 138, 185, 315, 391]);\nobjective = 450;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 181, 323, 36, 148, 208, 350, 20, 111, 238, 290, 434, 61, 251, 363, 81, 218, 278, 390, 49, 116, 138, 185, 315, 391]);\nobjective = 450;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 323, 36, 148, 208, 350, 20, 111, 238, 290, 434, 61, 251, 363, 81, 218, 278, 390, 49, 116, 138, 185, 315, 391],  "objective" : 450,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 0, 0],  "_objective" : 450}}, "sections": ["default", "raw", "json"], "time": 2649}
{"type": "statistics", "statistics": {"objective": 448, "objectiveBound": 348, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 3.3956}}
{"type": "solution", "output": {"default": "r = array1d(0..24, [0, 231, 368, 62, 198, 258, 400, 94, 161, 288, 335, 34, 90, 316, 428, 167, 283, 343, 7, 133, 202, 224, 391, 63, 121]);\nobjective = 448;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..24, [0, 231, 368, 62, 198, 258, 400, 94, 161, 288, 335, 34, 90, 316, 428, 167, 283, 343, 7, 133, 202, 224, 391, 63, 121]);\nobjective = 448;\nhoist = array1d(0..24, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 231, 368, 62, 198, 258, 400, 94, 161, 288, 335, 34, 90, 316, 428, 167, 283, 343, 7, 133, 202, 224, 391, 63, 121],  "objective" : 448,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 1, 0, 0, 0, 1, 0, 1, 1, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 1, 0],  "_objective" : 448}}, "sections": ["default", "raw", "json"], "time": 3675}
{"type": "status", "status": "OPTIMAL_SOLUTION", "time": 53676}
{"type": "statistics", "statistics": {"nSolutions": 116}}
{"type": "statistics", "statistics": {"objective": 448, "objectiveBound": 448, "boolVariables": 0, "failures": 0, "propagations": 0, "solveTime": 53.3948}}
