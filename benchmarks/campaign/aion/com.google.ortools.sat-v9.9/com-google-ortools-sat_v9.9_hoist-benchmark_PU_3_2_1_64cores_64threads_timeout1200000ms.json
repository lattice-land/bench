{"type": "lattice-land", "lattice-land": "start"}
{"type": "statistics", "statistics": {"configuration": "com-google-ortools-sat_v9.9_hoist-benchmark_PU_3_2_1_64cores_64threads_timeout1200000ms", "problem": "hoist-benchmark", "model": "../data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "data_file": "../data/mzn-challenge/2024/hoist-benchmark/PU_3_2_1.dzn", "mzn_solver": "com.google.ortools.sat", "version": "v9.9", "timeout_ms": "1200000", "datetime": "2025-03-11T08:25:37.686387", "status": "UNKNOWN", "cores": "64", "threads": "64"}}
cpu-bind=MASK - aion-0227, task  0  0 [1808407]: mask 0xffffffffffffffff0000000000000000 set
{"type": "warning", "location": {"filename": "/mnt/aiongpfs/users/ptalbot/lattice-land/bench/benchmarks/data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "firstLine": 102, "firstColumn": 50, "lastLine": 102, "lastColumn": 53}, "message": "variable `k` shadows variable with the same name in line 102.66"}
{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 4294, "flatIntVars": 145, "flatBoolConstraints": 1998, "flatIntConstraints": 3810, "evaluatedHalfReifiedConstraints": 3628, "method": "minimize", "flatTime": 0.84417}}
{"type": "comment", "comment": "%% File /tmp/mznfilewMPIJn.fzn parsed in 47 ms\n"}
{"type": "comment", "comment": "%% Presolve model\n"}
{"type": "comment", "comment": "%%   - done in 0 ms\n"}
{"type": "comment", "comment": "%% Model mznfilewMPIJn\n"}
{"type": "comment", "comment": "%%   - array_bool_and: 666\n"}
{"type": "comment", "comment": "%%   - bool_clause: 1332\n"}
{"type": "comment", "comment": "%%   - int_lin_le: 146\n"}
{"type": "comment", "comment": "%%   - int_lin_le_imp: 3628\n"}
{"type": "comment", "comment": "%%   - int_times: 36\n"}
{"type": "comment", "comment": "%%   - Minimization problem\n"}
{"type": "status", "status": "UNKNOWN", "time": 1201039}
{"type": "statistics", "statistics": {"nSolutions": 0}}
{"type": "lattice-land", "lattice-land": "start"}
{"type": "statistics", "statistics": {"configuration": "com-google-ortools-sat_v9.9_hoist-benchmark_PU_3_2_1_64cores_64threads_timeout1200000ms", "problem": "hoist-benchmark", "model": "../data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "data_file": "../data/mzn-challenge/2024/hoist-benchmark/PU_3_2_1.dzn", "mzn_solver": "com.google.ortools.sat", "version": "v9.9", "timeout_ms": "1200000", "datetime": "2025-03-12T05:12:43.508386", "status": "UNKNOWN", "cores": "64", "threads": "64"}}
cpu-bind=MASK - aion-0183, task  0  0 [3835930]: mask 0xffffffffffffffff0000000000000000 set
{"type": "warning", "location": {"filename": "/mnt/aiongpfs/users/ptalbot/lattice-land/bench/benchmarks/data/mzn-challenge/2024/hoist-benchmark/hoist-benchmark.mzn", "firstLine": 102, "firstColumn": 50, "lastLine": 102, "lastColumn": 53}, "message": "variable `k` shadows variable with the same name in line 102.66"}
{"type": "statistics", "statistics": {"paths": 0, "flatBoolVars": 4034, "flatIntVars": 145, "flatBoolConstraints": 1998, "flatIntConstraints": 3550, "evaluatedHalfReifiedConstraints": 3368, "method": "minimize", "flatTime": 0.304985}}
{"type": "comment", "comment": "%% File /tmp/mznfileB0m0sh.fzn parsed in 45 ms\n"}
{"type": "comment", "comment": "%% Presolve model\n"}
{"type": "comment", "comment": "%%   - done in 0 ms\n"}
{"type": "comment", "comment": "%% Model mznfileB0m0sh\n"}
{"type": "comment", "comment": "%%   - array_bool_and: 666\n"}
{"type": "comment", "comment": "%%   - bool_clause: 1332\n"}
{"type": "comment", "comment": "%%   - int_lin_le: 146\n"}
{"type": "comment", "comment": "%%   - int_lin_le_imp: 3368\n"}
{"type": "comment", "comment": "%%   - int_times: 36\n"}
{"type": "comment", "comment": "%%   - Minimization problem\n"}
{"type": "statistics", "statistics": {"objective": 2595, "objectiveBound": 491, "boolVariables": 1932, "failures": 212, "propagations": 180235, "solveTime": 0.459941}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 986, 1153, 1270, 1338, 1518, 1630, 1772, 1884, 1945, 2028, 2110, 2177, 2377, 1068, 1215, 1297, 1477, 1589, 1731, 1849, 1914, 1997, 2079, 2146, 2298, 2465, 2582, 39]);\nobjective = 2595;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 986, 1153, 1270, 1338, 1518, 1630, 1772, 1884, 1945, 2028, 2110, 2177, 2377, 1068, 1215, 1297, 1477, 1589, 1731, 1849, 1914, 1997, 2079, 2146, 2298, 2465, 2582, 39]);\nobjective = 2595;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 986, 1153, 1270, 1338, 1518, 1630, 1772, 1884, 1945, 2028, 2110, 2177, 2377, 1068, 1215, 1297, 1477, 1589, 1731, 1849, 1914, 1997, 2079, 2146, 2298, 2465, 2582, 39],  "objective" : 2595,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],  "_objective" : 2595}}, "sections": ["default", "raw", "json"], "time": 861}
{"type": "statistics", "statistics": {"objective": 2541, "objectiveBound": 491, "boolVariables": 1979, "failures": 240, "propagations": 196114, "solveTime": 0.4663}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 986, 1033, 1150, 1212, 1422, 1564, 1706, 1824, 1885, 1968, 2050, 2117, 2139, 1068, 1185, 1243, 1423, 1535, 1677, 1789, 1854, 1937, 2019, 2086, 2238, 2405, 2528, 39]);\nobjective = 2541;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 986, 1033, 1150, 1212, 1422, 1564, 1706, 1824, 1885, 1968, 2050, 2117, 2139, 1068, 1185, 1243, 1423, 1535, 1677, 1789, 1854, 1937, 2019, 2086, 2238, 2405, 2528, 39]);\nobjective = 2541;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 986, 1033, 1150, 1212, 1422, 1564, 1706, 1824, 1885, 1968, 2050, 2117, 2139, 1068, 1185, 1243, 1423, 1535, 1677, 1789, 1854, 1937, 2019, 2086, 2238, 2405, 2528, 39],  "objective" : 2541,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1],  "_objective" : 2541}}, "sections": ["default", "raw", "json"], "time": 867}
{"type": "statistics", "statistics": {"objective": 1298, "objectiveBound": 491, "boolVariables": 2141, "failures": 192, "propagations": 156482, "solveTime": 0.469256}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 191, 303, 457, 569, 630, 713, 855, 952, 1240, 1082, 1199, 1253, 135, 274, 422, 534, 599, 742, 844, 923, 360, 46, 163, 237, 467, 609, 777, 889, 944, 1027, 1135, 1202, 984, 0, 118, 170]);\nobjective = 1298;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 191, 303, 457, 569, 630, 713, 855, 952, 1240, 1082, 1199, 1253, 135, 274, 422, 534, 599, 742, 844, 923, 360, 46, 163, 237, 467, 609, 777, 889, 944, 1027, 1135, 1202, 984, 0, 118, 170]);\nobjective = 1298;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 303, 457, 569, 630, 713, 855, 952, 1240, 1082, 1199, 1253, 135, 274, 422, 534, 599, 742, 844, 923, 360, 46, 163, 237, 467, 609, 777, 889, 944, 1027, 1135, 1202, 984, 0, 118, 170],  "objective" : 1298,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1298}}, "sections": ["default", "raw", "json"], "time": 870}
{"type": "statistics", "statistics": {"objective": 1297, "objectiveBound": 491, "boolVariables": 2037, "failures": 286, "propagations": 217450, "solveTime": 0.481423}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 193, 305, 451, 570, 625, 744, 865, 947, 1100, 1052, 1194, 1254, 137, 260, 422, 547, 612, 705, 787, 863, 53, 36, 165, 223, 403, 515, 663, 775, 830, 913, 995, 1062, 985, 1157, 0, 70]);\nobjective = 1297;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 193, 305, 451, 570, 625, 744, 865, 947, 1100, 1052, 1194, 1254, 137, 260, 422, 547, 612, 705, 787, 863, 53, 36, 165, 223, 403, 515, 663, 775, 830, 913, 995, 1062, 985, 1157, 0, 70]);\nobjective = 1297;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 193, 305, 451, 570, 625, 744, 865, 947, 1100, 1052, 1194, 1254, 137, 260, 422, 547, 612, 705, 787, 863, 53, 36, 165, 223, 403, 515, 663, 775, 830, 913, 995, 1062, 985, 1157, 0, 70],  "objective" : 1297,  "hoist" : [1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1297}}, "sections": ["default", "raw", "json"], "time": 882}
{"type": "statistics", "statistics": {"objective": 1296, "objectiveBound": 491, "boolVariables": 2053, "failures": 287, "propagations": 219962, "solveTime": 0.483365}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 294, 451, 570, 625, 745, 866, 947, 1241, 1004, 1151, 1203, 136, 274, 422, 547, 612, 705, 787, 864, 5, 52, 169, 221, 401, 516, 663, 775, 830, 913, 995, 1062, 1019, 1248, 69, 121]);\nobjective = 1296;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 294, 451, 570, 625, 745, 866, 947, 1241, 1004, 1151, 1203, 136, 274, 422, 547, 612, 705, 787, 864, 5, 52, 169, 221, 401, 516, 663, 775, 830, 913, 995, 1062, 1019, 1248, 69, 121]);\nobjective = 1296;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 294, 451, 570, 625, 745, 866, 947, 1241, 1004, 1151, 1203, 136, 274, 422, 547, 612, 705, 787, 864, 5, 52, 169, 221, 401, 516, 663, 775, 830, 913, 995, 1062, 1019, 1248, 69, 121],  "objective" : 1296,  "hoist" : [1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1296}}, "sections": ["default", "raw", "json"], "time": 884}
{"type": "statistics", "statistics": {"objective": 1295, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.485944}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 294, 451, 570, 625, 744, 866, 947, 1240, 1004, 1150, 1202, 136, 273, 422, 547, 612, 705, 787, 864, 5, 52, 169, 221, 401, 515, 663, 775, 830, 913, 995, 1062, 1019, 1247, 69, 121]);\nobjective = 1295;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 294, 451, 570, 625, 744, 866, 947, 1240, 1004, 1150, 1202, 136, 273, 422, 547, 612, 705, 787, 864, 5, 52, 169, 221, 401, 515, 663, 775, 830, 913, 995, 1062, 1019, 1247, 69, 121]);\nobjective = 1295;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 294, 451, 570, 625, 744, 866, 947, 1240, 1004, 1150, 1202, 136, 273, 422, 547, 612, 705, 787, 864, 5, 52, 169, 221, 401, 515, 663, 775, 830, 913, 995, 1062, 1019, 1247, 69, 121],  "objective" : 1295,  "hoist" : [1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1295}}, "sections": ["default", "raw", "json"], "time": 887}
{"type": "statistics", "statistics": {"objective": 1286, "objectiveBound": 491, "boolVariables": 2149, "failures": 192, "propagations": 159276, "solveTime": 0.489292}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 191, 303, 445, 557, 618, 701, 831, 928, 1228, 1070, 1187, 1241, 135, 262, 410, 522, 587, 730, 832, 899, 343, 46, 163, 225, 455, 597, 765, 877, 932, 1015, 1123, 1190, 962, 0, 118, 170]);\nobjective = 1286;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 191, 303, 445, 557, 618, 701, 831, 928, 1228, 1070, 1187, 1241, 135, 262, 410, 522, 587, 730, 832, 899, 343, 46, 163, 225, 455, 597, 765, 877, 932, 1015, 1123, 1190, 962, 0, 118, 170]);\nobjective = 1286;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 191, 303, 445, 557, 618, 701, 831, 928, 1228, 1070, 1187, 1241, 135, 262, 410, 522, 587, 730, 832, 899, 343, 46, 163, 225, 455, 597, 765, 877, 932, 1015, 1123, 1190, 962, 0, 118, 170],  "objective" : 1286,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1286}}, "sections": ["default", "raw", "json"], "time": 890}
{"type": "statistics", "statistics": {"objective": 1262, "objectiveBound": 491, "boolVariables": 2093, "failures": 320, "propagations": 237419, "solveTime": 0.491685}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 198, 310, 452, 571, 626, 746, 879, 948, 1205, 997, 1142, 1224, 142, 261, 412, 557, 612, 732, 874, 941, 350, 53, 170, 222, 402, 514, 664, 788, 844, 987, 1069, 1136, 1014, 1185, 70, 122]);\nobjective = 1262;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 198, 310, 452, 571, 626, 746, 879, 948, 1205, 997, 1142, 1224, 142, 261, 412, 557, 612, 732, 874, 941, 350, 53, 170, 222, 402, 514, 664, 788, 844, 987, 1069, 1136, 1014, 1185, 70, 122]);\nobjective = 1262;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 198, 310, 452, 571, 626, 746, 879, 948, 1205, 997, 1142, 1224, 142, 261, 412, 557, 612, 732, 874, 941, 350, 53, 170, 222, 402, 514, 664, 788, 844, 987, 1069, 1136, 1014, 1185, 70, 122],  "objective" : 1262,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1262}}, "sections": ["default", "raw", "json"], "time": 893}
{"type": "statistics", "statistics": {"objective": 1261, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.50747}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 571, 626, 746, 879, 948, 1205, 997, 1142, 1224, 143, 261, 414, 557, 612, 732, 874, 941, 351, 52, 171, 223, 403, 515, 664, 788, 844, 987, 1069, 1136, 1014, 1185, 69, 122]);\nobjective = 1261;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 571, 626, 746, 879, 948, 1205, 997, 1142, 1224, 143, 261, 414, 557, 612, 732, 874, 941, 351, 52, 171, 223, 403, 515, 664, 788, 844, 987, 1069, 1136, 1014, 1185, 69, 122]);\nobjective = 1261;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 571, 626, 746, 879, 948, 1205, 997, 1142, 1224, 143, 261, 414, 557, 612, 732, 874, 941, 351, 52, 171, 223, 403, 515, 664, 788, 844, 987, 1069, 1136, 1014, 1185, 69, 122],  "objective" : 1261,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1261}}, "sections": ["default", "raw", "json"], "time": 908}
{"type": "statistics", "statistics": {"objective": 1260, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.512055}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 571, 626, 746, 879, 947, 1204, 997, 1142, 1223, 143, 261, 414, 557, 612, 732, 874, 941, 351, 51, 171, 223, 403, 515, 664, 788, 844, 986, 1068, 1135, 1014, 1184, 69, 122]);\nobjective = 1260;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 571, 626, 746, 879, 947, 1204, 997, 1142, 1223, 143, 261, 414, 557, 612, 732, 874, 941, 351, 51, 171, 223, 403, 515, 664, 788, 844, 986, 1068, 1135, 1014, 1184, 69, 122]);\nobjective = 1260;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 571, 626, 746, 879, 947, 1204, 997, 1142, 1223, 143, 261, 414, 557, 612, 732, 874, 941, 351, 51, 171, 223, 403, 515, 664, 788, 844, 986, 1068, 1135, 1014, 1184, 69, 122],  "objective" : 1260,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1260}}, "sections": ["default", "raw", "json"], "time": 913}
{"type": "statistics", "statistics": {"objective": 1259, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.518974}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 571, 626, 745, 879, 946, 1204, 997, 1141, 1222, 143, 261, 414, 557, 612, 732, 874, 941, 351, 50, 171, 223, 403, 515, 664, 788, 843, 985, 1067, 1134, 1014, 1183, 69, 122]);\nobjective = 1259;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 571, 626, 745, 879, 946, 1204, 997, 1141, 1222, 143, 261, 414, 557, 612, 732, 874, 941, 351, 50, 171, 223, 403, 515, 664, 788, 843, 985, 1067, 1134, 1014, 1183, 69, 122]);\nobjective = 1259;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 571, 626, 745, 879, 946, 1204, 997, 1141, 1222, 143, 261, 414, 557, 612, 732, 874, 941, 351, 50, 171, 223, 403, 515, 664, 788, 843, 985, 1067, 1134, 1014, 1183, 69, 122],  "objective" : 1259,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1259}}, "sections": ["default", "raw", "json"], "time": 920}
{"type": "statistics", "statistics": {"objective": 1258, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.5249779999999999}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 199, 311, 453, 571, 626, 745, 877, 945, 1203, 997, 1141, 1221, 143, 260, 414, 557, 612, 732, 872, 940, 351, 51, 171, 223, 403, 515, 664, 787, 842, 984, 1066, 1133, 1014, 1182, 67, 122]);\nobjective = 1258;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 199, 311, 453, 571, 626, 745, 877, 945, 1203, 997, 1141, 1221, 143, 260, 414, 557, 612, 732, 872, 940, 351, 51, 171, 223, 403, 515, 664, 787, 842, 984, 1066, 1133, 1014, 1182, 67, 122]);\nobjective = 1258;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 199, 311, 453, 571, 626, 745, 877, 945, 1203, 997, 1141, 1221, 143, 260, 414, 557, 612, 732, 872, 940, 351, 51, 171, 223, 403, 515, 664, 787, 842, 984, 1066, 1133, 1014, 1182, 67, 122],  "objective" : 1258,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1258}}, "sections": ["default", "raw", "json"], "time": 926}
{"type": "statistics", "statistics": {"objective": 1257, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.530146}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 745, 877, 944, 1202, 997, 1141, 1221, 144, 259, 414, 557, 612, 732, 872, 939, 352, 51, 172, 224, 404, 516, 664, 787, 842, 983, 1066, 1133, 1014, 1182, 67, 122]);\nobjective = 1257;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 745, 877, 944, 1202, 997, 1141, 1221, 144, 259, 414, 557, 612, 732, 872, 939, 352, 51, 172, 224, 404, 516, 664, 787, 842, 983, 1066, 1133, 1014, 1182, 67, 122]);\nobjective = 1257;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 200, 312, 454, 571, 626, 745, 877, 944, 1202, 997, 1141, 1221, 144, 259, 414, 557, 612, 732, 872, 939, 352, 51, 172, 224, 404, 516, 664, 787, 842, 983, 1066, 1133, 1014, 1182, 67, 122],  "objective" : 1257,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1257}}, "sections": ["default", "raw", "json"], "time": 931}
{"type": "statistics", "statistics": {"objective": 1256, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.561124}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 744, 877, 944, 1202, 997, 1140, 1220, 144, 259, 414, 557, 612, 732, 872, 939, 352, 51, 172, 224, 404, 516, 664, 787, 842, 983, 1065, 1132, 1014, 1181, 67, 122]);\nobjective = 1256;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 744, 877, 944, 1202, 997, 1140, 1220, 144, 259, 414, 557, 612, 732, 872, 939, 352, 51, 172, 224, 404, 516, 664, 787, 842, 983, 1065, 1132, 1014, 1181, 67, 122]);\nobjective = 1256;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 200, 312, 454, 571, 626, 744, 877, 944, 1202, 997, 1140, 1220, 144, 259, 414, 557, 612, 732, 872, 939, 352, 51, 172, 224, 404, 516, 664, 787, 842, 983, 1065, 1132, 1014, 1181, 67, 122],  "objective" : 1256,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1256}}, "sections": ["default", "raw", "json"], "time": 967}
{"type": "statistics", "statistics": {"objective": 1255, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.568318}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 743, 877, 944, 1202, 997, 1140, 1220, 145, 258, 414, 557, 612, 732, 872, 939, 352, 51, 172, 225, 405, 517, 664, 787, 842, 983, 1065, 1132, 1014, 1181, 67, 122]);\nobjective = 1255;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 743, 877, 944, 1202, 997, 1140, 1220, 145, 258, 414, 557, 612, 732, 872, 939, 352, 51, 172, 225, 405, 517, 664, 787, 842, 983, 1065, 1132, 1014, 1181, 67, 122]);\nobjective = 1255;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 200, 312, 454, 571, 626, 743, 877, 944, 1202, 997, 1140, 1220, 145, 258, 414, 557, 612, 732, 872, 939, 352, 51, 172, 225, 405, 517, 664, 787, 842, 983, 1065, 1132, 1014, 1181, 67, 122],  "objective" : 1255,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1255}}, "sections": ["default", "raw", "json"], "time": 969}
{"type": "statistics", "statistics": {"objective": 1254, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.57897}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 742, 877, 944, 1201, 997, 1139, 1219, 145, 257, 414, 557, 612, 732, 872, 939, 352, 50, 172, 224, 405, 517, 664, 786, 842, 982, 1064, 1131, 1013, 1180, 66, 122]);\nobjective = 1254;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 742, 877, 944, 1201, 997, 1139, 1219, 145, 257, 414, 557, 612, 732, 872, 939, 352, 50, 172, 224, 405, 517, 664, 786, 842, 982, 1064, 1131, 1013, 1180, 66, 122]);\nobjective = 1254;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 200, 312, 454, 571, 626, 742, 877, 944, 1201, 997, 1139, 1219, 145, 257, 414, 557, 612, 732, 872, 939, 352, 50, 172, 224, 405, 517, 664, 786, 842, 982, 1064, 1131, 1013, 1180, 66, 122],  "objective" : 1254,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1254}}, "sections": ["default", "raw", "json"], "time": 980}
{"type": "statistics", "statistics": {"objective": 1253, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.585506}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 741, 877, 944, 1200, 997, 1139, 1219, 146, 258, 414, 557, 612, 732, 872, 939, 352, 50, 172, 224, 405, 517, 664, 786, 841, 982, 1064, 1131, 1013, 1180, 66, 122]);\nobjective = 1253;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 741, 877, 944, 1200, 997, 1139, 1219, 146, 258, 414, 557, 612, 732, 872, 939, 352, 50, 172, 224, 405, 517, 664, 786, 841, 982, 1064, 1131, 1013, 1180, 66, 122]);\nobjective = 1253;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 200, 312, 454, 571, 626, 741, 877, 944, 1200, 997, 1139, 1219, 146, 258, 414, 557, 612, 732, 872, 939, 352, 50, 172, 224, 405, 517, 664, 786, 841, 982, 1064, 1131, 1013, 1180, 66, 122],  "objective" : 1253,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1253}}, "sections": ["default", "raw", "json"], "time": 986}
{"type": "statistics", "statistics": {"objective": 1252, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.59312}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 740, 877, 944, 1199, 997, 1138, 1219, 147, 259, 414, 557, 612, 732, 871, 939, 352, 50, 172, 224, 405, 517, 664, 786, 841, 982, 1064, 1131, 1013, 1180, 65, 122]);\nobjective = 1252;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 740, 877, 944, 1199, 997, 1138, 1219, 147, 259, 414, 557, 612, 732, 871, 939, 352, 50, 172, 224, 405, 517, 664, 786, 841, 982, 1064, 1131, 1013, 1180, 65, 122]);\nobjective = 1252;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 200, 312, 454, 571, 626, 740, 877, 944, 1199, 997, 1138, 1219, 147, 259, 414, 557, 612, 732, 871, 939, 352, 50, 172, 224, 405, 517, 664, 786, 841, 982, 1064, 1131, 1013, 1180, 65, 122],  "objective" : 1252,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1252}}, "sections": ["default", "raw", "json"], "time": 995}
{"type": "statistics", "statistics": {"objective": 1251, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.616409}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 740, 877, 944, 1198, 997, 1137, 1219, 148, 260, 414, 557, 612, 732, 871, 939, 352, 50, 172, 224, 405, 517, 664, 785, 840, 981, 1064, 1131, 1013, 1180, 64, 122]);\nobjective = 1251;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 200, 312, 454, 571, 626, 740, 877, 944, 1198, 997, 1137, 1219, 148, 260, 414, 557, 612, 732, 871, 939, 352, 50, 172, 224, 405, 517, 664, 785, 840, 981, 1064, 1131, 1013, 1180, 64, 122]);\nobjective = 1251;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 200, 312, 454, 571, 626, 740, 877, 944, 1198, 997, 1137, 1219, 148, 260, 414, 557, 612, 732, 871, 939, 352, 50, 172, 224, 405, 517, 664, 785, 840, 981, 1064, 1131, 1013, 1180, 64, 122],  "objective" : 1251,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1251}}, "sections": ["default", "raw", "json"], "time": 1017}
{"type": "statistics", "statistics": {"objective": 1214, "objectiveBound": 491, "boolVariables": 2267, "failures": 585, "propagations": 358214, "solveTime": 0.6208939999999999}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 201, 313, 458, 572, 627, 725, 867, 934, 657, 983, 1116, 1168, 145, 257, 415, 558, 613, 706, 822, 894, 353, 47, 173, 225, 406, 518, 660, 787, 842, 939, 1065, 1134, 872, 1067, 0, 71]);\nobjective = 1214;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 201, 313, 458, 572, 627, 725, 867, 934, 657, 983, 1116, 1168, 145, 257, 415, 558, 613, 706, 822, 894, 353, 47, 173, 225, 406, 518, 660, 787, 842, 939, 1065, 1134, 872, 1067, 0, 71]);\nobjective = 1214;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 201, 313, 458, 572, 627, 725, 867, 934, 657, 983, 1116, 1168, 145, 257, 415, 558, 613, 706, 822, 894, 353, 47, 173, 225, 406, 518, 660, 787, 842, 939, 1065, 1134, 872, 1067, 0, 71],  "objective" : 1214,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1214}}, "sections": ["default", "raw", "json"], "time": 1022}
{"type": "statistics", "statistics": {"objective": 1213, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.624149}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 201, 313, 458, 572, 627, 725, 867, 934, 657, 983, 1115, 1167, 144, 257, 415, 558, 613, 706, 822, 894, 353, 46, 172, 224, 406, 518, 660, 786, 842, 939, 1064, 1133, 872, 1067, 0, 71]);\nobjective = 1213;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 201, 313, 458, 572, 627, 725, 867, 934, 657, 983, 1115, 1167, 144, 257, 415, 558, 613, 706, 822, 894, 353, 46, 172, 224, 406, 518, 660, 786, 842, 939, 1064, 1133, 872, 1067, 0, 71]);\nobjective = 1213;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 201, 313, 458, 572, 627, 725, 867, 934, 657, 983, 1115, 1167, 144, 257, 415, 558, 613, 706, 822, 894, 353, 46, 172, 224, 406, 518, 660, 786, 842, 939, 1064, 1133, 872, 1067, 0, 71],  "objective" : 1213,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1213}}, "sections": ["default", "raw", "json"], "time": 1025}
{"type": "statistics", "statistics": {"objective": 1186, "objectiveBound": 491, "boolVariables": 2315, "failures": 621, "propagations": 376763, "solveTime": 0.633096}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 726, 867, 935, 658, 985, 1117, 1186, 196, 308, 450, 573, 628, 730, 833, 900, 502, 48, 173, 233, 413, 544, 686, 798, 853, 957, 1065, 1135, 890, 1080, 41, 123]);\nobjective = 1186;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 726, 867, 935, 658, 985, 1117, 1186, 196, 308, 450, 573, 628, 730, 833, 900, 502, 48, 173, 233, 413, 544, 686, 798, 853, 957, 1065, 1135, 890, 1080, 41, 123]);\nobjective = 1186;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 315, 460, 573, 628, 726, 867, 935, 658, 985, 1117, 1186, 196, 308, 450, 573, 628, 730, 833, 900, 502, 48, 173, 233, 413, 544, 686, 798, 853, 957, 1065, 1135, 890, 1080, 41, 123],  "objective" : 1186,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1186}}, "sections": ["default", "raw", "json"], "time": 1034}
{"type": "statistics", "statistics": {"objective": 1185, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.6451750000000001}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 726, 867, 935, 658, 985, 1117, 1185, 196, 308, 450, 573, 628, 730, 833, 900, 502, 47, 173, 233, 413, 544, 686, 798, 853, 957, 1064, 1134, 889, 1080, 41, 123]);\nobjective = 1185;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 726, 867, 935, 658, 985, 1117, 1185, 196, 308, 450, 573, 628, 730, 833, 900, 502, 47, 173, 233, 413, 544, 686, 798, 853, 957, 1064, 1134, 889, 1080, 41, 123]);\nobjective = 1185;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 315, 460, 573, 628, 726, 867, 935, 658, 985, 1117, 1185, 196, 308, 450, 573, 628, 730, 833, 900, 502, 47, 173, 233, 413, 544, 686, 798, 853, 957, 1064, 1134, 889, 1080, 41, 123],  "objective" : 1185,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1185}}, "sections": ["default", "raw", "json"], "time": 1046}
{"type": "statistics", "statistics": {"objective": 1184, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.647886}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 726, 867, 934, 658, 985, 1117, 1184, 196, 308, 450, 573, 628, 730, 833, 900, 502, 47, 173, 233, 413, 543, 686, 798, 853, 957, 1063, 1133, 888, 1080, 41, 123]);\nobjective = 1184;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 726, 867, 934, 658, 985, 1117, 1184, 196, 308, 450, 573, 628, 730, 833, 900, 502, 47, 173, 233, 413, 543, 686, 798, 853, 957, 1063, 1133, 888, 1080, 41, 123]);\nobjective = 1184;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 315, 460, 573, 628, 726, 867, 934, 658, 985, 1117, 1184, 196, 308, 450, 573, 628, 730, 833, 900, 502, 47, 173, 233, 413, 543, 686, 798, 853, 957, 1063, 1133, 888, 1080, 41, 123],  "objective" : 1184,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1184}}, "sections": ["default", "raw", "json"], "time": 1049}
{"type": "statistics", "statistics": {"objective": 1183, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.652224}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 933, 658, 985, 1116, 1183, 196, 308, 450, 573, 628, 730, 833, 900, 502, 46, 173, 233, 413, 543, 685, 798, 853, 957, 1062, 1132, 888, 1080, 41, 123]);\nobjective = 1183;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 933, 658, 985, 1116, 1183, 196, 308, 450, 573, 628, 730, 833, 900, 502, 46, 173, 233, 413, 543, 685, 798, 853, 957, 1062, 1132, 888, 1080, 41, 123]);\nobjective = 1183;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 315, 460, 573, 628, 725, 865, 933, 658, 985, 1116, 1183, 196, 308, 450, 573, 628, 730, 833, 900, 502, 46, 173, 233, 413, 543, 685, 798, 853, 957, 1062, 1132, 888, 1080, 41, 123],  "objective" : 1183,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1183}}, "sections": ["default", "raw", "json"], "time": 1053}
{"type": "statistics", "statistics": {"objective": 1182, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.654129}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1116, 1182, 196, 308, 450, 573, 628, 730, 833, 900, 502, 46, 173, 233, 413, 542, 685, 797, 853, 957, 1061, 1131, 887, 1080, 41, 123]);\nobjective = 1182;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1116, 1182, 196, 308, 450, 573, 628, 730, 833, 900, 502, 46, 173, 233, 413, 542, 685, 797, 853, 957, 1061, 1131, 887, 1080, 41, 123]);\nobjective = 1182;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1116, 1182, 196, 308, 450, 573, 628, 730, 833, 900, 502, 46, 173, 233, 413, 542, 685, 797, 853, 957, 1061, 1131, 887, 1080, 41, 123],  "objective" : 1182,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1182}}, "sections": ["default", "raw", "json"], "time": 1055}
{"type": "statistics", "statistics": {"objective": 1181, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.659776}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1116, 1181, 196, 308, 450, 573, 628, 730, 833, 900, 502, 46, 173, 233, 413, 541, 685, 797, 852, 956, 1060, 1130, 887, 1080, 41, 123]);\nobjective = 1181;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1116, 1181, 196, 308, 450, 573, 628, 730, 833, 900, 502, 46, 173, 233, 413, 541, 685, 797, 852, 956, 1060, 1130, 887, 1080, 41, 123]);\nobjective = 1181;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1116, 1181, 196, 308, 450, 573, 628, 730, 833, 900, 502, 46, 173, 233, 413, 541, 685, 797, 852, 956, 1060, 1130, 887, 1080, 41, 123],  "objective" : 1181,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1181}}, "sections": ["default", "raw", "json"], "time": 1061}
{"type": "statistics", "statistics": {"objective": 1180, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.66178}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1115, 1180, 196, 308, 450, 573, 628, 730, 832, 900, 502, 46, 173, 233, 413, 541, 683, 795, 851, 956, 1059, 1129, 887, 1080, 41, 123]);\nobjective = 1180;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1115, 1180, 196, 308, 450, 573, 628, 730, 832, 900, 502, 46, 173, 233, 413, 541, 683, 795, 851, 956, 1059, 1129, 887, 1080, 41, 123]);\nobjective = 1180;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1115, 1180, 196, 308, 450, 573, 628, 730, 832, 900, 502, 46, 173, 233, 413, 541, 683, 795, 851, 956, 1059, 1129, 887, 1080, 41, 123],  "objective" : 1180,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1180}}, "sections": ["default", "raw", "json"], "time": 1063}
{"type": "statistics", "statistics": {"objective": 1179, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.6712129999999999}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1115, 1179, 196, 308, 450, 573, 628, 730, 831, 900, 502, 46, 173, 233, 413, 540, 682, 794, 850, 955, 1059, 1128, 887, 1080, 41, 123]);\nobjective = 1179;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1115, 1179, 196, 308, 450, 573, 628, 730, 831, 900, 502, 46, 173, 233, 413, 540, 682, 794, 850, 955, 1059, 1128, 887, 1080, 41, 123]);\nobjective = 1179;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 315, 460, 573, 628, 725, 865, 932, 658, 985, 1115, 1179, 196, 308, 450, 573, 628, 730, 831, 900, 502, 46, 173, 233, 413, 540, 682, 794, 850, 955, 1059, 1128, 887, 1080, 41, 123],  "objective" : 1179,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 1179}}, "sections": ["default", "raw", "json"], "time": 1072}
{"type": "statistics", "statistics": {"objective": 1164, "objectiveBound": 491, "boolVariables": 2433, "failures": 739, "propagations": 436706, "solveTime": 0.681034}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 933, 712, 90, 207, 259, 456, 598, 800, 912, 970, 1073, 1164, 97, 1000, 51, 168, 220, 406, 518, 660, 781, 836, 945, 1035, 1132, 1059, 317, 464, 546]);\nobjective = 1164;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 933, 712, 90, 207, 259, 456, 598, 800, 912, 970, 1073, 1164, 97, 1000, 51, 168, 220, 406, 518, 660, 781, 836, 945, 1035, 1132, 1059, 317, 464, 546]);\nobjective = 1164;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "json": {  "r" : [0, 231, 373, 515, 627, 682, 765, 865, 933, 712, 90, 207, 259, 456, 598, 800, 912, 970, 1073, 1164, 97, 1000, 51, 168, 220, 406, 518, 660, 781, 836, 945, 1035, 1132, 1059, 317, 464, 546],  "objective" : 1164,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1164}}, "sections": ["default", "raw", "json"], "time": 1082}
{"type": "statistics", "statistics": {"objective": 1163, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.684592}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 933, 712, 90, 207, 259, 456, 598, 800, 912, 970, 1073, 1163, 96, 1000, 50, 168, 220, 406, 518, 660, 781, 836, 945, 1034, 1131, 1058, 317, 464, 546]);\nobjective = 1163;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 933, 712, 90, 207, 259, 456, 598, 800, 912, 970, 1073, 1163, 96, 1000, 50, 168, 220, 406, 518, 660, 781, 836, 945, 1034, 1131, 1058, 317, 464, 546]);\nobjective = 1163;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "json": {  "r" : [0, 231, 373, 515, 627, 682, 765, 865, 933, 712, 90, 207, 259, 456, 598, 800, 912, 970, 1073, 1163, 96, 1000, 50, 168, 220, 406, 518, 660, 781, 836, 945, 1034, 1131, 1058, 317, 464, 546],  "objective" : 1163,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1163}}, "sections": ["default", "raw", "json"], "time": 1085}
{"type": "statistics", "statistics": {"objective": 1162, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.68676}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 932, 712, 90, 207, 259, 456, 598, 800, 912, 970, 1073, 1162, 96, 1000, 50, 167, 219, 406, 518, 660, 781, 836, 945, 1034, 1130, 1058, 317, 464, 546]);\nobjective = 1162;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 932, 712, 90, 207, 259, 456, 598, 800, 912, 970, 1073, 1162, 96, 1000, 50, 167, 219, 406, 518, 660, 781, 836, 945, 1034, 1130, 1058, 317, 464, 546]);\nobjective = 1162;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "json": {  "r" : [0, 231, 373, 515, 627, 682, 765, 865, 932, 712, 90, 207, 259, 456, 598, 800, 912, 970, 1073, 1162, 96, 1000, 50, 167, 219, 406, 518, 660, 781, 836, 945, 1034, 1130, 1058, 317, 464, 546],  "objective" : 1162,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1162}}, "sections": ["default", "raw", "json"], "time": 1088}
{"type": "statistics", "statistics": {"objective": 1161, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.691488}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 932, 712, 89, 206, 258, 456, 598, 800, 912, 970, 1073, 1161, 97, 1000, 51, 168, 220, 406, 518, 660, 781, 836, 945, 1033, 1129, 1057, 317, 464, 546]);\nobjective = 1161;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 932, 712, 89, 206, 258, 456, 598, 800, 912, 970, 1073, 1161, 97, 1000, 51, 168, 220, 406, 518, 660, 781, 836, 945, 1033, 1129, 1057, 317, 464, 546]);\nobjective = 1161;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "json": {  "r" : [0, 231, 373, 515, 627, 682, 765, 865, 932, 712, 89, 206, 258, 456, 598, 800, 912, 970, 1073, 1161, 97, 1000, 51, 168, 220, 406, 518, 660, 781, 836, 945, 1033, 1129, 1057, 317, 464, 546],  "objective" : 1161,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1161}}, "sections": ["default", "raw", "json"], "time": 1092}
{"type": "statistics", "statistics": {"objective": 1160, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.69345}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 932, 712, 89, 206, 258, 456, 598, 800, 912, 970, 1073, 1160, 97, 1000, 51, 168, 220, 406, 518, 660, 781, 836, 945, 1032, 1128, 1056, 317, 464, 546]);\nobjective = 1160;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 231, 373, 515, 627, 682, 765, 865, 932, 712, 89, 206, 258, 456, 598, 800, 912, 970, 1073, 1160, 97, 1000, 51, 168, 220, 406, 518, 660, 781, 836, 945, 1032, 1128, 1056, 317, 464, 546]);\nobjective = 1160;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2]);\n", "json": {  "r" : [0, 231, 373, 515, 627, 682, 765, 865, 932, 712, 89, 206, 258, 456, 598, 800, 912, 970, 1073, 1160, 97, 1000, 51, 168, 220, 406, 518, 660, 781, 836, 945, 1032, 1128, 1056, 317, 464, 546],  "objective" : 1160,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 1160}}, "sections": ["default", "raw", "json"], "time": 1094}
{"type": "statistics", "statistics": {"objective": 1115, "objectiveBound": 491, "boolVariables": 2461, "failures": 812, "propagations": 477134, "solveTime": 0.704041}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 480, 627, 682, 765, 847, 929, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1115, 97, 1000, 432, 549, 624, 854, 976, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1115;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 480, 627, 682, 765, 847, 929, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1115, 97, 1000, 432, 549, 624, 854, 976, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1115;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 480, 627, 682, 765, 847, 929, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1115, 97, 1000, 432, 549, 624, 854, 976, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508],  "objective" : 1115,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1115}}, "sections": ["default", "raw", "json"], "time": 1105}
{"type": "statistics", "statistics": {"objective": 1114, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.706504}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 480, 627, 682, 765, 847, 928, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1114, 97, 1000, 432, 549, 624, 854, 976, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1114;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 480, 627, 682, 765, 847, 928, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1114, 97, 1000, 432, 549, 624, 854, 976, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1114;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 480, 627, 682, 765, 847, 928, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1114, 97, 1000, 432, 549, 624, 854, 976, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508],  "objective" : 1114,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1114}}, "sections": ["default", "raw", "json"], "time": 1107}
{"type": "statistics", "statistics": {"objective": 1113, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.708777}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 480, 627, 682, 765, 847, 928, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1113, 97, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1113;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 480, 627, 682, 765, 847, 928, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1113, 97, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1113;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 480, 627, 682, 765, 847, 928, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1113, 97, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508],  "objective" : 1113,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1113}}, "sections": ["default", "raw", "json"], "time": 1110}
{"type": "statistics", "statistics": {"objective": 1112, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.710628}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 480, 626, 681, 764, 847, 927, 712, 44, 163, 215, 398, 510, 669, 816, 881, 973, 1112, 96, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1112;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 480, 626, 681, 764, 847, 927, 712, 44, 163, 215, 398, 510, 669, 816, 881, 973, 1112, 96, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1112;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 480, 626, 681, 764, 847, 927, 712, 44, 163, 215, 398, 510, 669, 816, 881, 973, 1112, 96, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508],  "objective" : 1112,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1112}}, "sections": ["default", "raw", "json"], "time": 1111}
{"type": "statistics", "statistics": {"objective": 1111, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.730308}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 480, 627, 682, 765, 847, 927, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1111, 97, 1000, 432, 549, 624, 854, 974, 51, 198, 253, 358, 470, 564, 1010, 317, 434, 508]);\nobjective = 1111;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 480, 627, 682, 765, 847, 927, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1111, 97, 1000, 432, 549, 624, 854, 974, 51, 198, 253, 358, 470, 564, 1010, 317, 434, 508]);\nobjective = 1111;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 480, 627, 682, 765, 847, 927, 712, 46, 163, 215, 398, 510, 669, 816, 881, 973, 1111, 97, 1000, 432, 549, 624, 854, 974, 51, 198, 253, 358, 470, 564, 1010, 317, 434, 508],  "objective" : 1111,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1111}}, "sections": ["default", "raw", "json"], "time": 1131}
{"type": "statistics", "statistics": {"objective": 1110, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.732893}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 480, 626, 681, 764, 847, 926, 712, 44, 163, 215, 398, 510, 669, 816, 881, 973, 1110, 95, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1110;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 480, 626, 681, 764, 847, 926, 712, 44, 163, 215, 398, 510, 669, 816, 881, 973, 1110, 95, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508]);\nobjective = 1110;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 480, 626, 681, 764, 847, 926, 712, 44, 163, 215, 398, 510, 669, 816, 881, 973, 1110, 95, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1011, 317, 434, 508],  "objective" : 1110,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1110}}, "sections": ["default", "raw", "json"], "time": 1134}
{"type": "statistics", "statistics": {"objective": 1109, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.750437}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 480, 626, 681, 764, 847, 925, 712, 44, 163, 215, 398, 510, 669, 816, 881, 973, 1109, 95, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1010, 317, 434, 508]);\nobjective = 1109;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 480, 626, 681, 764, 847, 925, 712, 44, 163, 215, 398, 510, 669, 816, 881, 973, 1109, 95, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1010, 317, 434, 508]);\nobjective = 1109;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 480, 626, 681, 764, 847, 925, 712, 44, 163, 215, 398, 510, 669, 816, 881, 973, 1109, 95, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1010, 317, 434, 508],  "objective" : 1109,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1109}}, "sections": ["default", "raw", "json"], "time": 1151}
{"type": "statistics", "statistics": {"objective": 1108, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.774919}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 480, 626, 681, 764, 847, 924, 712, 44, 162, 215, 398, 510, 669, 816, 881, 973, 1108, 95, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1010, 317, 434, 508]);\nobjective = 1108;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 480, 626, 681, 764, 847, 924, 712, 44, 162, 215, 398, 510, 669, 816, 881, 973, 1108, 95, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1010, 317, 434, 508]);\nobjective = 1108;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 480, 626, 681, 764, 847, 924, 712, 44, 162, 215, 398, 510, 669, 816, 881, 973, 1108, 95, 1000, 432, 549, 624, 854, 975, 51, 198, 253, 358, 470, 564, 1010, 317, 434, 508],  "objective" : 1108,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1108}}, "sections": ["default", "raw", "json"], "time": 1176}
{"type": "statistics", "statistics": {"objective": 1025, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.7762250000000001}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 182, 322, 464, 576, 631, 714, 796, 863, 692, 41, 158, 210, 390, 502, 645, 765, 830, 913, 1025, 92, 940, 424, 541, 599, 803, 915, 37, 149, 204, 317, 459, 553, 950, 276, 423, 497]);\nobjective = 1025;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 182, 322, 464, 576, 631, 714, 796, 863, 692, 41, 158, 210, 390, 502, 645, 765, 830, 913, 1025, 92, 940, 424, 541, 599, 803, 915, 37, 149, 204, 317, 459, 553, 950, 276, 423, 497]);\nobjective = 1025;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 182, 322, 464, 576, 631, 714, 796, 863, 692, 41, 158, 210, 390, 502, 645, 765, 830, 913, 1025, 92, 940, 424, 541, 599, 803, 915, 37, 149, 204, 317, 459, 553, 950, 276, 423, 497],  "objective" : 1025,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1025}}, "sections": ["default", "raw", "json"], "time": 1177}
{"type": "statistics", "statistics": {"objective": 1024, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.781622}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 182, 320, 464, 576, 631, 714, 796, 863, 692, 41, 158, 210, 390, 502, 645, 765, 830, 913, 1024, 92, 940, 424, 541, 599, 803, 915, 37, 149, 204, 317, 459, 553, 856, 276, 423, 497]);\nobjective = 1024;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 182, 320, 464, 576, 631, 714, 796, 863, 692, 41, 158, 210, 390, 502, 645, 765, 830, 913, 1024, 92, 940, 424, 541, 599, 803, 915, 37, 149, 204, 317, 459, 553, 856, 276, 423, 497]);\nobjective = 1024;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 182, 320, 464, 576, 631, 714, 796, 863, 692, 41, 158, 210, 390, 502, 645, 765, 830, 913, 1024, 92, 940, 424, 541, 599, 803, 915, 37, 149, 204, 317, 459, 553, 856, 276, 423, 497],  "objective" : 1024,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1024}}, "sections": ["default", "raw", "json"], "time": 1182}
{"type": "statistics", "statistics": {"objective": 1023, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.811542}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 182, 320, 464, 576, 631, 714, 796, 863, 692, 41, 158, 210, 390, 502, 645, 765, 830, 913, 1023, 92, 940, 424, 541, 599, 803, 915, 37, 149, 204, 317, 459, 553, 856, 276, 423, 497]);\nobjective = 1023;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 182, 320, 464, 576, 631, 714, 796, 863, 692, 41, 158, 210, 390, 502, 645, 765, 830, 913, 1023, 92, 940, 424, 541, 599, 803, 915, 37, 149, 204, 317, 459, 553, 856, 276, 423, 497]);\nobjective = 1023;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 182, 320, 464, 576, 631, 714, 796, 863, 692, 41, 158, 210, 390, 502, 645, 765, 830, 913, 1023, 92, 940, 424, 541, 599, 803, 915, 37, 149, 204, 317, 459, 553, 856, 276, 423, 497],  "objective" : 1023,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1023}}, "sections": ["default", "raw", "json"], "time": 1213}
{"type": "statistics", "statistics": {"objective": 1022, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.818854}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 624, 679, 762, 889, 970, 710, 42, 159, 213, 394, 510, 668, 802, 857, 940, 1022, 93, 952, 428, 545, 610, 790, 912, 91, 203, 258, 354, 469, 564, 853, 313, 433, 508]);\nobjective = 1022;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 624, 679, 762, 889, 970, 710, 42, 159, 213, 394, 510, 668, 802, 857, 940, 1022, 93, 952, 428, 545, 610, 790, 912, 91, 203, 258, 354, 469, 564, 853, 313, 433, 508]);\nobjective = 1022;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 624, 679, 762, 889, 970, 710, 42, 159, 213, 394, 510, 668, 802, 857, 940, 1022, 93, 952, 428, 545, 610, 790, 912, 91, 203, 258, 354, 469, 564, 853, 313, 433, 508],  "objective" : 1022,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1022}}, "sections": ["default", "raw", "json"], "time": 1220}
{"type": "statistics", "statistics": {"objective": 1021, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.820628}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 624, 679, 762, 889, 970, 710, 42, 159, 212, 394, 510, 668, 800, 856, 939, 1021, 93, 951, 428, 545, 610, 790, 911, 90, 202, 258, 354, 469, 564, 852, 313, 433, 508]);\nobjective = 1021;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 624, 679, 762, 889, 970, 710, 42, 159, 212, 394, 510, 668, 800, 856, 939, 1021, 93, 951, 428, 545, 610, 790, 911, 90, 202, 258, 354, 469, 564, 852, 313, 433, 508]);\nobjective = 1021;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 624, 679, 762, 889, 970, 710, 42, 159, 212, 394, 510, 668, 800, 856, 939, 1021, 93, 951, 428, 545, 610, 790, 911, 90, 202, 258, 354, 469, 564, 852, 313, 433, 508],  "objective" : 1021,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1021}}, "sections": ["default", "raw", "json"], "time": 1221}
{"type": "statistics", "statistics": {"objective": 1020, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.822774}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 624, 679, 762, 889, 969, 710, 42, 159, 211, 394, 510, 668, 800, 855, 938, 1020, 93, 950, 428, 545, 610, 790, 910, 89, 201, 257, 354, 469, 564, 851, 313, 433, 508]);\nobjective = 1020;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 624, 679, 762, 889, 969, 710, 42, 159, 211, 394, 510, 668, 800, 855, 938, 1020, 93, 950, 428, 545, 610, 790, 910, 89, 201, 257, 354, 469, 564, 851, 313, 433, 508]);\nobjective = 1020;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 624, 679, 762, 889, 969, 710, 42, 159, 211, 394, 510, 668, 800, 855, 938, 1020, 93, 950, 428, 545, 610, 790, 910, 89, 201, 257, 354, 469, 564, 851, 313, 433, 508],  "objective" : 1020,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1020}}, "sections": ["default", "raw", "json"], "time": 1224}
{"type": "statistics", "statistics": {"objective": 1019, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.824696}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 624, 679, 762, 889, 968, 710, 42, 159, 211, 394, 510, 668, 799, 854, 937, 1019, 93, 949, 428, 545, 610, 790, 909, 88, 201, 257, 354, 469, 564, 850, 313, 432, 508]);\nobjective = 1019;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 624, 679, 762, 889, 968, 710, 42, 159, 211, 394, 510, 668, 799, 854, 937, 1019, 93, 949, 428, 545, 610, 790, 909, 88, 201, 257, 354, 469, 564, 850, 313, 432, 508]);\nobjective = 1019;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 624, 679, 762, 889, 968, 710, 42, 159, 211, 394, 510, 668, 799, 854, 937, 1019, 93, 949, 428, 545, 610, 790, 909, 88, 201, 257, 354, 469, 564, 850, 313, 432, 508],  "objective" : 1019,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1019}}, "sections": ["default", "raw", "json"], "time": 1226}
{"type": "statistics", "statistics": {"objective": 1018, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.82718}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 623, 678, 761, 889, 967, 710, 42, 159, 211, 394, 510, 668, 798, 853, 936, 1018, 93, 948, 428, 545, 610, 790, 908, 88, 201, 256, 354, 469, 564, 849, 313, 432, 508]);\nobjective = 1018;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 623, 678, 761, 889, 967, 710, 42, 159, 211, 394, 510, 668, 798, 853, 936, 1018, 93, 948, 428, 545, 610, 790, 908, 88, 201, 256, 354, 469, 564, 849, 313, 432, 508]);\nobjective = 1018;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 623, 678, 761, 889, 967, 710, 42, 159, 211, 394, 510, 668, 798, 853, 936, 1018, 93, 948, 428, 545, 610, 790, 908, 88, 201, 256, 354, 469, 564, 849, 313, 432, 508],  "objective" : 1018,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1018}}, "sections": ["default", "raw", "json"], "time": 1228}
{"type": "statistics", "statistics": {"objective": 1017, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.831479}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 622, 677, 760, 889, 966, 710, 42, 159, 211, 394, 510, 668, 797, 852, 935, 1017, 93, 947, 428, 545, 610, 790, 907, 87, 201, 256, 354, 468, 564, 848, 313, 432, 508]);\nobjective = 1017;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 622, 677, 760, 889, 966, 710, 42, 159, 211, 394, 510, 668, 797, 852, 935, 1017, 93, 947, 428, 545, 610, 790, 907, 87, 201, 256, 354, 468, 564, 848, 313, 432, 508]);\nobjective = 1017;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 622, 677, 760, 889, 966, 710, 42, 159, 211, 394, 510, 668, 797, 852, 935, 1017, 93, 947, 428, 545, 610, 790, 907, 87, 201, 256, 354, 468, 564, 848, 313, 432, 508],  "objective" : 1017,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1017}}, "sections": ["default", "raw", "json"], "time": 1232}
{"type": "statistics", "statistics": {"objective": 1016, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.833619}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 621, 676, 759, 889, 965, 710, 42, 159, 211, 394, 510, 668, 796, 851, 934, 1016, 93, 946, 428, 545, 610, 790, 906, 86, 200, 255, 354, 468, 564, 847, 313, 432, 508]);\nobjective = 1016;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 621, 676, 759, 889, 965, 710, 42, 159, 211, 394, 510, 668, 796, 851, 934, 1016, 93, 946, 428, 545, 610, 790, 906, 86, 200, 255, 354, 468, 564, 847, 313, 432, 508]);\nobjective = 1016;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 621, 676, 759, 889, 965, 710, 42, 159, 211, 394, 510, 668, 796, 851, 934, 1016, 93, 946, 428, 545, 610, 790, 906, 86, 200, 255, 354, 468, 564, 847, 313, 432, 508],  "objective" : 1016,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1016}}, "sections": ["default", "raw", "json"], "time": 1234}
{"type": "statistics", "statistics": {"objective": 1015, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.835531}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 620, 675, 758, 889, 964, 710, 42, 159, 211, 394, 510, 668, 795, 850, 933, 1015, 93, 945, 428, 545, 610, 790, 905, 85, 199, 255, 354, 468, 564, 846, 313, 432, 508]);\nobjective = 1015;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 620, 675, 758, 889, 964, 710, 42, 159, 211, 394, 510, 668, 795, 850, 933, 1015, 93, 945, 428, 545, 610, 790, 905, 85, 199, 255, 354, 468, 564, 846, 313, 432, 508]);\nobjective = 1015;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 620, 675, 758, 889, 964, 710, 42, 159, 211, 394, 510, 668, 795, 850, 933, 1015, 93, 945, 428, 545, 610, 790, 905, 85, 199, 255, 354, 468, 564, 846, 313, 432, 508],  "objective" : 1015,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1015}}, "sections": ["default", "raw", "json"], "time": 1236}
{"type": "statistics", "statistics": {"objective": 1014, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.862859}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 619, 674, 757, 889, 963, 710, 42, 159, 211, 394, 510, 668, 794, 849, 932, 1014, 93, 944, 428, 545, 610, 790, 904, 85, 198, 255, 354, 468, 564, 845, 313, 431, 508]);\nobjective = 1014;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 619, 674, 757, 889, 963, 710, 42, 159, 211, 394, 510, 668, 794, 849, 932, 1014, 93, 944, 428, 545, 610, 790, 904, 85, 198, 255, 354, 468, 564, 845, 313, 431, 508]);\nobjective = 1014;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 619, 674, 757, 889, 963, 710, 42, 159, 211, 394, 510, 668, 794, 849, 932, 1014, 93, 944, 428, 545, 610, 790, 904, 85, 198, 255, 354, 468, 564, 845, 313, 431, 508],  "objective" : 1014,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1014}}, "sections": ["default", "raw", "json"], "time": 1264}
{"type": "statistics", "statistics": {"objective": 1013, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.8687240000000001}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 618, 673, 756, 889, 962, 710, 42, 159, 211, 394, 510, 668, 793, 848, 931, 1013, 93, 943, 428, 545, 610, 790, 903, 84, 197, 254, 354, 467, 564, 844, 313, 430, 508]);\nobjective = 1013;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 618, 673, 756, 889, 962, 710, 42, 159, 211, 394, 510, 668, 793, 848, 931, 1013, 93, 943, 428, 545, 610, 790, 903, 84, 197, 254, 354, 467, 564, 844, 313, 430, 508]);\nobjective = 1013;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 618, 673, 756, 889, 962, 710, 42, 159, 211, 394, 510, 668, 793, 848, 931, 1013, 93, 943, 428, 545, 610, 790, 903, 84, 197, 254, 354, 467, 564, 844, 313, 430, 508],  "objective" : 1013,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1013}}, "sections": ["default", "raw", "json"], "time": 1270}
{"type": "statistics", "statistics": {"objective": 1012, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.871318}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 617, 672, 755, 889, 961, 710, 42, 159, 211, 394, 510, 668, 792, 847, 930, 1012, 93, 942, 428, 545, 610, 790, 902, 83, 197, 253, 354, 467, 564, 843, 313, 430, 508]);\nobjective = 1012;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 617, 672, 755, 889, 961, 710, 42, 159, 211, 394, 510, 668, 792, 847, 930, 1012, 93, 942, 428, 545, 610, 790, 902, 83, 197, 253, 354, 467, 564, 843, 313, 430, 508]);\nobjective = 1012;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 617, 672, 755, 889, 961, 710, 42, 159, 211, 394, 510, 668, 792, 847, 930, 1012, 93, 942, 428, 545, 610, 790, 902, 83, 197, 253, 354, 467, 564, 843, 313, 430, 508],  "objective" : 1012,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1012}}, "sections": ["default", "raw", "json"], "time": 1272}
{"type": "statistics", "statistics": {"objective": 1011, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.879235}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 314, 483, 616, 671, 754, 889, 960, 710, 42, 159, 211, 394, 510, 668, 791, 846, 929, 1011, 93, 941, 428, 545, 609, 789, 901, 82, 196, 252, 354, 467, 563, 842, 313, 430, 506]);\nobjective = 1011;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 314, 483, 616, 671, 754, 889, 960, 710, 42, 159, 211, 394, 510, 668, 791, 846, 929, 1011, 93, 941, 428, 545, 609, 789, 901, 82, 196, 252, 354, 467, 563, 842, 313, 430, 506]);\nobjective = 1011;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 314, 483, 616, 671, 754, 889, 960, 710, 42, 159, 211, 394, 510, 668, 791, 846, 929, 1011, 93, 941, 428, 545, 609, 789, 901, 82, 196, 252, 354, 467, 563, 842, 313, 430, 506],  "objective" : 1011,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 1, 1, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1011}}, "sections": ["default", "raw", "json"], "time": 1280}
{"type": "statistics", "statistics": {"objective": 1010, "objectiveBound": 491, "boolVariables": 2527, "failures": 1026, "propagations": 1210253, "solveTime": 0.897977}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 303, 483, 595, 650, 747, 889, 960, 680, 41, 159, 211, 394, 510, 668, 784, 839, 922, 1005, 92, 705, 345, 479, 538, 767, 901, 82, 196, 252, 335, 433, 522, 841, 150, 297, 379]);\nobjective = 1010;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 303, 483, 595, 650, 747, 889, 960, 680, 41, 159, 211, 394, 510, 668, 784, 839, 922, 1005, 92, 705, 345, 479, 538, 767, 901, 82, 196, 252, 335, 433, 522, 841, 150, 297, 379]);\nobjective = 1010;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 303, 483, 595, 650, 747, 889, 960, 680, 41, 159, 211, 394, 510, 668, 784, 839, 922, 1005, 92, 705, 345, 479, 538, 767, 901, 82, 196, 252, 335, 433, 522, 841, 150, 297, 379],  "objective" : 1010,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1010}}, "sections": ["default", "raw", "json"], "time": 1299}
{"type": "statistics", "statistics": {"objective": 1005, "objectiveBound": 491, "boolVariables": 2556, "failures": 1095, "propagations": 1239818, "solveTime": 0.922588}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 303, 483, 595, 650, 747, 889, 960, 680, 41, 159, 211, 394, 510, 668, 784, 839, 922, 1005, 92, 705, 345, 479, 538, 767, 901, 82, 196, 252, 335, 433, 522, 841, 150, 297, 379]);\nobjective = 1005;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 303, 483, 595, 650, 747, 889, 960, 680, 41, 159, 211, 394, 510, 668, 784, 839, 922, 1005, 92, 705, 345, 479, 538, 767, 901, 82, 196, 252, 335, 433, 522, 841, 150, 297, 379]);\nobjective = 1005;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 303, 483, 595, 650, 747, 889, 960, 680, 41, 159, 211, 394, 510, 668, 784, 839, 922, 1005, 92, 705, 345, 479, 538, 767, 901, 82, 196, 252, 335, 433, 522, 841, 150, 297, 379],  "objective" : 1005,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1005}}, "sections": ["default", "raw", "json"], "time": 1323}
{"type": "statistics", "statistics": {"objective": 1004, "objectiveBound": 491, "boolVariables": 2558, "failures": 1105, "propagations": 1246787, "solveTime": 0.925787}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 303, 483, 595, 650, 747, 889, 960, 680, 41, 159, 211, 394, 510, 668, 784, 839, 922, 1004, 92, 705, 345, 479, 538, 767, 901, 82, 196, 252, 335, 433, 522, 841, 150, 297, 379]);\nobjective = 1004;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 303, 483, 595, 650, 747, 889, 960, 680, 41, 159, 211, 394, 510, 668, 784, 839, 922, 1004, 92, 705, 345, 479, 538, 767, 901, 82, 196, 252, 335, 433, 522, 841, 150, 297, 379]);\nobjective = 1004;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 303, 483, 595, 650, 747, 889, 960, 680, 41, 159, 211, 394, 510, 668, 784, 839, 922, 1004, 92, 705, 345, 479, 538, 767, 901, 82, 196, 252, 335, 433, 522, 841, 150, 297, 379],  "objective" : 1004,  "hoist" : [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1004}}, "sections": ["default", "raw", "json"], "time": 1327}
{"type": "statistics", "statistics": {"objective": 1003, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.928539}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 303, 482, 594, 649, 746, 888, 960, 679, 41, 159, 211, 394, 510, 668, 783, 838, 921, 1003, 92, 705, 345, 479, 538, 767, 901, 81, 195, 251, 334, 432, 522, 841, 150, 297, 379]);\nobjective = 1003;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 303, 482, 594, 649, 746, 888, 960, 679, 41, 159, 211, 394, 510, 668, 783, 838, 921, 1003, 92, 705, 345, 479, 538, 767, 901, 81, 195, 251, 334, 432, 522, 841, 150, 297, 379]);\nobjective = 1003;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 303, 482, 594, 649, 746, 888, 960, 679, 41, 159, 211, 394, 510, 668, 783, 838, 921, 1003, 92, 705, 345, 479, 538, 767, 901, 81, 195, 251, 334, 432, 522, 841, 150, 297, 379],  "objective" : 1003,  "hoist" : [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1003}}, "sections": ["default", "raw", "json"], "time": 1329}
{"type": "statistics", "statistics": {"objective": 1002, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.931507}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 303, 481, 593, 648, 745, 887, 959, 678, 41, 159, 211, 393, 510, 668, 782, 837, 920, 1002, 92, 705, 345, 479, 538, 767, 900, 81, 194, 251, 335, 432, 522, 839, 150, 297, 379]);\nobjective = 1002;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 303, 481, 593, 648, 745, 887, 959, 678, 41, 159, 211, 393, 510, 668, 782, 837, 920, 1002, 92, 705, 345, 479, 538, 767, 900, 81, 194, 251, 335, 432, 522, 839, 150, 297, 379]);\nobjective = 1002;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 303, 481, 593, 648, 745, 887, 959, 678, 41, 159, 211, 393, 510, 668, 782, 837, 920, 1002, 92, 705, 345, 479, 538, 767, 900, 81, 194, 251, 335, 432, 522, 839, 150, 297, 379],  "objective" : 1002,  "hoist" : [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1002}}, "sections": ["default", "raw", "json"], "time": 1332}
{"type": "statistics", "statistics": {"objective": 1001, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.933362}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 303, 480, 592, 647, 744, 886, 958, 677, 41, 158, 211, 392, 509, 668, 781, 836, 919, 1001, 92, 705, 345, 479, 538, 767, 900, 81, 193, 251, 334, 431, 522, 838, 150, 297, 379]);\nobjective = 1001;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 303, 480, 592, 647, 744, 886, 958, 677, 41, 158, 211, 392, 509, 668, 781, 836, 919, 1001, 92, 705, 345, 479, 538, 767, 900, 81, 193, 251, 334, 431, 522, 838, 150, 297, 379]);\nobjective = 1001;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 303, 480, 592, 647, 744, 886, 958, 677, 41, 158, 211, 392, 509, 668, 781, 836, 919, 1001, 92, 705, 345, 479, 538, 767, 900, 81, 193, 251, 334, 431, 522, 838, 150, 297, 379],  "objective" : 1001,  "hoist" : [1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 1001}}, "sections": ["default", "raw", "json"], "time": 1334}
{"type": "statistics", "statistics": {"objective": 997, "objectiveBound": 491, "boolVariables": 2571, "failures": 1149, "propagations": 1267853, "solveTime": 0.935329}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 311, 475, 595, 650, 747, 877, 945, 680, 41, 159, 211, 394, 533, 675, 787, 842, 925, 25, 92, 952, 361, 508, 566, 751, 893, 82, 196, 252, 335, 433, 520, 834, 150, 297, 379]);\nobjective = 997;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 311, 475, 595, 650, 747, 877, 945, 680, 41, 159, 211, 394, 533, 675, 787, 842, 925, 25, 92, 952, 361, 508, 566, 751, 893, 82, 196, 252, 335, 433, 520, 834, 150, 297, 379]);\nobjective = 997;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 311, 475, 595, 650, 747, 877, 945, 680, 41, 159, 211, 394, 533, 675, 787, 842, 925, 25, 92, 952, 361, 508, 566, 751, 893, 82, 196, 252, 335, 433, 520, 834, 150, 297, 379],  "objective" : 997,  "hoist" : [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 997}}, "sections": ["default", "raw", "json"], "time": 1336}
{"type": "statistics", "statistics": {"objective": 996, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.937565}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 311, 474, 595, 650, 747, 877, 944, 680, 41, 158, 211, 394, 532, 674, 786, 841, 924, 25, 92, 951, 361, 507, 566, 751, 892, 81, 196, 252, 335, 432, 520, 833, 150, 297, 379]);\nobjective = 996;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 311, 474, 595, 650, 747, 877, 944, 680, 41, 158, 211, 394, 532, 674, 786, 841, 924, 25, 92, 951, 361, 507, 566, 751, 892, 81, 196, 252, 335, 432, 520, 833, 150, 297, 379]);\nobjective = 996;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 311, 474, 595, 650, 747, 877, 944, 680, 41, 158, 211, 394, 532, 674, 786, 841, 924, 25, 92, 951, 361, 507, 566, 751, 892, 81, 196, 252, 335, 432, 520, 833, 150, 297, 379],  "objective" : 996,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 996}}, "sections": ["default", "raw", "json"], "time": 1338}
{"type": "statistics", "statistics": {"objective": 995, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.94232}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 311, 474, 595, 650, 747, 877, 944, 680, 41, 158, 211, 392, 532, 674, 786, 841, 924, 26, 93, 951, 361, 507, 566, 751, 892, 81, 195, 250, 334, 432, 520, 833, 150, 297, 377]);\nobjective = 995;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 311, 474, 595, 650, 747, 877, 944, 680, 41, 158, 211, 392, 532, 674, 786, 841, 924, 26, 93, 951, 361, 507, 566, 751, 892, 81, 195, 250, 334, 432, 520, 833, 150, 297, 377]);\nobjective = 995;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 311, 474, 595, 650, 747, 877, 944, 680, 41, 158, 211, 392, 532, 674, 786, 841, 924, 26, 93, 951, 361, 507, 566, 751, 892, 81, 195, 250, 334, 432, 520, 833, 150, 297, 377],  "objective" : 995,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 995}}, "sections": ["default", "raw", "json"], "time": 1343}
{"type": "statistics", "statistics": {"objective": 994, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.943882}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 311, 474, 595, 650, 747, 875, 943, 680, 41, 158, 211, 392, 532, 674, 786, 841, 924, 27, 94, 951, 361, 507, 566, 751, 892, 81, 195, 250, 334, 431, 520, 833, 150, 297, 377]);\nobjective = 994;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 311, 474, 595, 650, 747, 875, 943, 680, 41, 158, 211, 392, 532, 674, 786, 841, 924, 27, 94, 951, 361, 507, 566, 751, 892, 81, 195, 250, 334, 431, 520, 833, 150, 297, 377]);\nobjective = 994;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 311, 474, 595, 650, 747, 875, 943, 680, 41, 158, 211, 392, 532, 674, 786, 841, 924, 27, 94, 951, 361, 507, 566, 751, 892, 81, 195, 250, 334, 431, 520, 833, 150, 297, 377],  "objective" : 994,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 994}}, "sections": ["default", "raw", "json"], "time": 1345}
{"type": "statistics", "statistics": {"objective": 993, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.94947}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 186, 311, 474, 595, 650, 747, 875, 942, 680, 41, 158, 211, 392, 532, 674, 786, 841, 924, 28, 95, 951, 360, 507, 566, 751, 892, 80, 194, 250, 333, 431, 519, 833, 150, 296, 377]);\nobjective = 993;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 186, 311, 474, 595, 650, 747, 875, 942, 680, 41, 158, 211, 392, 532, 674, 786, 841, 924, 28, 95, 951, 360, 507, 566, 751, 892, 80, 194, 250, 333, 431, 519, 833, 150, 296, 377]);\nobjective = 993;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 186, 311, 474, 595, 650, 747, 875, 942, 680, 41, 158, 211, 392, 532, 674, 786, 841, 924, 28, 95, 951, 360, 507, 566, 751, 892, 80, 194, 250, 333, 431, 519, 833, 150, 296, 377],  "objective" : 993,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 993}}, "sections": ["default", "raw", "json"], "time": 1350}
{"type": "statistics", "statistics": {"objective": 982, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 0.998872}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 464, 576, 631, 714, 796, 863, 363, 41, 158, 210, 390, 502, 644, 756, 811, 897, 57, 140, 924, 424, 541, 599, 779, 910, 94, 206, 262, 346, 459, 553, 952, 305, 423, 497]);\nobjective = 982;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 464, 576, 631, 714, 796, 863, 363, 41, 158, 210, 390, 502, 644, 756, 811, 897, 57, 140, 924, 424, 541, 599, 779, 910, 94, 206, 262, 346, 459, 553, 952, 305, 423, 497]);\nobjective = 982;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 464, 576, 631, 714, 796, 863, 363, 41, 158, 210, 390, 502, 644, 756, 811, 897, 57, 140, 924, 424, 541, 599, 779, 910, 94, 206, 262, 346, 459, 553, 952, 305, 423, 497],  "objective" : 982,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 2, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 982}}, "sections": ["default", "raw", "json"], "time": 1400}
{"type": "statistics", "statistics": {"objective": 981, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.01725}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 463, 575, 630, 713, 795, 862, 363, 9, 156, 209, 389, 504, 646, 758, 813, 896, 57, 139, 923, 423, 541, 601, 781, 894, 94, 206, 262, 346, 461, 555, 933, 305, 425, 499]);\nobjective = 981;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 463, 575, 630, 713, 795, 862, 363, 9, 156, 209, 389, 504, 646, 758, 813, 896, 57, 139, 923, 423, 541, 601, 781, 894, 94, 206, 262, 346, 461, 555, 933, 305, 425, 499]);\nobjective = 981;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 463, 575, 630, 713, 795, 862, 363, 9, 156, 209, 389, 504, 646, 758, 813, 896, 57, 139, 923, 423, 541, 601, 781, 894, 94, 206, 262, 346, 461, 555, 933, 305, 425, 499],  "objective" : 981,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 981}}, "sections": ["default", "raw", "json"], "time": 1418}
{"type": "statistics", "statistics": {"objective": 980, "objectiveBound": 491, "boolVariables": 2658, "failures": 1273, "propagations": 1323830, "solveTime": 1.02664}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 631, 714, 848, 928, 243, 946, 101, 153, 379, 504, 646, 758, 813, 896, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 254, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 980;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 631, 714, 848, 928, 243, 946, 101, 153, 379, 504, 646, 758, 813, 896, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 254, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 980;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 631, 714, 848, 928, 243, 946, 101, 153, 379, 504, 646, 758, 813, 896, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 254, 339, 421, 508, 530, 165, 307, 359],  "objective" : 980,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 980}}, "sections": ["default", "raw", "json"], "time": 1427}
{"type": "statistics", "statistics": {"objective": 979, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.04167}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 928, 243, 945, 100, 153, 379, 503, 645, 757, 812, 895, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 254, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 979;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 928, 243, 945, 100, 153, 379, 503, 645, 757, 812, 895, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 254, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 979;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 848, 928, 243, 945, 100, 153, 379, 503, 645, 757, 812, 895, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 254, 339, 421, 508, 530, 165, 307, 359],  "objective" : 979,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 979}}, "sections": ["default", "raw", "json"], "time": 1442}
{"type": "statistics", "statistics": {"objective": 978, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.04867}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 927, 243, 944, 99, 153, 379, 502, 644, 756, 811, 894, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 978;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 927, 243, 944, 99, 153, 379, 502, 644, 756, 811, 894, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 978;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 848, 927, 243, 944, 99, 153, 379, 502, 644, 756, 811, 894, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359],  "objective" : 978,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 978}}, "sections": ["default", "raw", "json"], "time": 1449}
{"type": "statistics", "statistics": {"objective": 977, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.0506}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 926, 243, 943, 98, 153, 379, 501, 643, 755, 810, 893, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 977;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 926, 243, 943, 98, 153, 379, 501, 643, 755, 810, 893, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 977;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 848, 926, 243, 943, 98, 153, 379, 501, 643, 755, 810, 893, 14, 91, 113, 413, 542, 594, 774, 886, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359],  "objective" : 977,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 977}}, "sections": ["default", "raw", "json"], "time": 1451}
{"type": "statistics", "statistics": {"objective": 976, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.05259}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 925, 243, 942, 98, 153, 379, 500, 642, 754, 809, 892, 14, 91, 113, 413, 540, 593, 773, 885, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 976;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 925, 243, 942, 98, 153, 379, 500, 642, 754, 809, 892, 14, 91, 113, 413, 540, 593, 773, 885, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 976;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 848, 925, 243, 942, 98, 153, 379, 500, 642, 754, 809, 892, 14, 91, 113, 413, 540, 593, 773, 885, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359],  "objective" : 976,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 976}}, "sections": ["default", "raw", "json"], "time": 1453}
{"type": "statistics", "statistics": {"objective": 975, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.06159}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 924, 243, 941, 98, 152, 379, 499, 641, 753, 808, 891, 14, 91, 113, 413, 540, 592, 772, 884, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 975;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 924, 243, 941, 98, 152, 379, 499, 641, 753, 808, 891, 14, 91, 113, 413, 540, 592, 772, 884, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359]);\nobjective = 975;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 848, 924, 243, 941, 98, 152, 379, 499, 641, 753, 808, 891, 14, 91, 113, 413, 540, 592, 772, 884, 51, 198, 253, 339, 421, 508, 530, 165, 307, 359],  "objective" : 975,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 975}}, "sections": ["default", "raw", "json"], "time": 1462}
{"type": "statistics", "statistics": {"objective": 974, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.06361}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 923, 243, 940, 97, 151, 379, 498, 640, 752, 807, 890, 14, 92, 114, 413, 540, 592, 772, 884, 52, 199, 254, 339, 421, 508, 530, 166, 307, 359]);\nobjective = 974;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 923, 243, 940, 97, 151, 379, 498, 640, 752, 807, 890, 14, 92, 114, 413, 540, 592, 772, 884, 52, 199, 254, 339, 421, 508, 530, 166, 307, 359]);\nobjective = 974;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 848, 923, 243, 940, 97, 151, 379, 498, 640, 752, 807, 890, 14, 92, 114, 413, 540, 592, 772, 884, 52, 199, 254, 339, 421, 508, 530, 166, 307, 359],  "objective" : 974,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 974}}, "sections": ["default", "raw", "json"], "time": 1464}
{"type": "statistics", "statistics": {"objective": 973, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.06544}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 922, 243, 940, 97, 150, 379, 498, 640, 752, 807, 890, 15, 93, 115, 413, 540, 592, 772, 884, 53, 200, 255, 339, 421, 508, 530, 167, 307, 359]);\nobjective = 973;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 922, 243, 940, 97, 150, 379, 498, 640, 752, 807, 890, 15, 93, 115, 413, 540, 592, 772, 884, 53, 200, 255, 339, 421, 508, 530, 167, 307, 359]);\nobjective = 973;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 848, 922, 243, 940, 97, 150, 379, 498, 640, 752, 807, 890, 15, 93, 115, 413, 540, 592, 772, 884, 53, 200, 255, 339, 421, 508, 530, 167, 307, 359],  "objective" : 973,  "hoist" : [1, 1, 1, 2, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 973}}, "sections": ["default", "raw", "json"], "time": 1466}
{"type": "statistics", "statistics": {"objective": 972, "objectiveBound": 491, "boolVariables": 2743, "failures": 1481, "propagations": 1434389, "solveTime": 1.07917}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 218, 330, 527, 670, 735, 878, 48, 144, 72, 778, 920, 972, 188, 300, 442, 554, 609, 703, 826, 893, 571, 478, 625, 707, 937, 107, 309, 456, 521, 664, 772, 839, 375, 243, 360, 412]);\nobjective = 972;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 218, 330, 527, 670, 735, 878, 48, 144, 72, 778, 920, 972, 188, 300, 442, 554, 609, 703, 826, 893, 571, 478, 625, 707, 937, 107, 309, 456, 521, 664, 772, 839, 375, 243, 360, 412]);\nobjective = 972;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2]);\n", "json": {  "r" : [0, 218, 330, 527, 670, 735, 878, 48, 144, 72, 778, 920, 972, 188, 300, 442, 554, 609, 703, 826, 893, 571, 478, 625, 707, 937, 107, 309, 456, 521, 664, 772, 839, 375, 243, 360, 412],  "objective" : 972,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 972}}, "sections": ["default", "raw", "json"], "time": 1480}
{"type": "statistics", "statistics": {"objective": 971, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.09532}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 920, 242, 939, 95, 149, 379, 496, 639, 751, 806, 889, 16, 93, 115, 413, 538, 590, 770, 882, 53, 200, 255, 339, 421, 507, 529, 167, 306, 359]);\nobjective = 971;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 920, 242, 939, 95, 149, 379, 496, 639, 751, 806, 889, 16, 93, 115, 413, 538, 590, 770, 882, 53, 200, 255, 339, 421, 507, 529, 167, 306, 359]);\nobjective = 971;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 848, 920, 242, 939, 95, 149, 379, 496, 639, 751, 806, 889, 16, 93, 115, 413, 538, 590, 770, 882, 53, 200, 255, 339, 421, 507, 529, 167, 306, 359],  "objective" : 971,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 971}}, "sections": ["default", "raw", "json"], "time": 1496}
{"type": "statistics", "statistics": {"objective": 970, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.10078}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 919, 241, 938, 94, 149, 379, 496, 638, 750, 805, 888, 16, 93, 115, 413, 536, 589, 769, 881, 53, 200, 255, 339, 421, 506, 528, 167, 305, 359]);\nobjective = 970;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 848, 919, 241, 938, 94, 149, 379, 496, 638, 750, 805, 888, 16, 93, 115, 413, 536, 589, 769, 881, 53, 200, 255, 339, 421, 506, 528, 167, 305, 359]);\nobjective = 970;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 848, 919, 241, 938, 94, 149, 379, 496, 638, 750, 805, 888, 16, 93, 115, 413, 536, 589, 769, 881, 53, 200, 255, 339, 421, 506, 528, 167, 305, 359],  "objective" : 970,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 1, 1, 2, 1, 1, 1, 2, 2, 2, 1, 1, 2, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 970}}, "sections": ["default", "raw", "json"], "time": 1502}
{"type": "statistics", "statistics": {"objective": 965, "objectiveBound": 491, "boolVariables": 2809, "failures": 1654, "propagations": 1510749, "solveTime": 1.11464}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 817, 914, 743, 933, 94, 149, 379, 491, 633, 745, 800, 883, 16, 93, 115, 346, 467, 531, 711, 836, 53, 200, 255, 339, 421, 518, 235, 167, 306, 375]);\nobjective = 965;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 817, 914, 743, 933, 94, 149, 379, 491, 633, 745, 800, 883, 16, 93, 115, 346, 467, 531, 711, 836, 53, 200, 255, 339, 421, 518, 235, 167, 306, 375]);\nobjective = 965;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 817, 914, 743, 933, 94, 149, 379, 491, 633, 745, 800, 883, 16, 93, 115, 346, 467, 531, 711, 836, 53, 200, 255, 339, 421, 518, 235, 167, 306, 375],  "objective" : 965,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 965}}, "sections": ["default", "raw", "json"], "time": 1516}
{"type": "statistics", "statistics": {"objective": 964, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.11714}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 817, 913, 742, 932, 94, 149, 378, 490, 632, 744, 799, 882, 16, 93, 115, 346, 467, 531, 711, 836, 53, 200, 255, 339, 421, 518, 235, 167, 305, 375]);\nobjective = 964;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 463, 575, 630, 713, 817, 913, 742, 932, 94, 149, 378, 490, 632, 744, 799, 882, 16, 93, 115, 346, 467, 531, 711, 836, 53, 200, 255, 339, 421, 518, 235, 167, 305, 375]);\nobjective = 964;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 463, 575, 630, 713, 817, 913, 742, 932, 94, 149, 378, 490, 632, 744, 799, 882, 16, 93, 115, 346, 467, 531, 711, 836, 53, 200, 255, 339, 421, 518, 235, 167, 305, 375],  "objective" : 964,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 964}}, "sections": ["default", "raw", "json"], "time": 1518}
{"type": "statistics", "statistics": {"objective": 963, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.11919}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 462, 574, 629, 712, 817, 912, 743, 931, 93, 148, 377, 489, 631, 743, 798, 881, 16, 93, 115, 346, 467, 530, 711, 836, 53, 200, 255, 338, 420, 516, 235, 167, 304, 375]);\nobjective = 963;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 462, 574, 629, 712, 817, 912, 743, 931, 93, 148, 377, 489, 631, 743, 798, 881, 16, 93, 115, 346, 467, 530, 711, 836, 53, 200, 255, 338, 420, 516, 235, 167, 304, 375]);\nobjective = 963;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 462, 574, 629, 712, 817, 912, 743, 931, 93, 148, 377, 489, 631, 743, 798, 881, 16, 93, 115, 346, 467, 530, 711, 836, 53, 200, 255, 338, 420, 516, 235, 167, 304, 375],  "objective" : 963,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 1, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 963}}, "sections": ["default", "raw", "json"], "time": 1520}
{"type": "statistics", "statistics": {"objective": 935, "objectiveBound": 491, "boolVariables": 2853, "failures": 1735, "propagations": 1553940, "solveTime": 1.13527}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 194, 306, 462, 574, 632, 715, 817, 884, 743, 790, 0, 81, 261, 381, 570, 682, 742, 876, 83, 150, 614, 348, 466, 530, 710, 833, 46, 192, 255, 338, 420, 517, 112, 159, 298, 375]);\nobjective = 935;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 194, 306, 462, 574, 632, 715, 817, 884, 743, 790, 0, 81, 261, 381, 570, 682, 742, 876, 83, 150, 614, 348, 466, 530, 710, 833, 46, 192, 255, 338, 420, 517, 112, 159, 298, 375]);\nobjective = 935;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 194, 306, 462, 574, 632, 715, 817, 884, 743, 790, 0, 81, 261, 381, 570, 682, 742, 876, 83, 150, 614, 348, 466, 530, 710, 833, 46, 192, 255, 338, 420, 517, 112, 159, 298, 375],  "objective" : 935,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 935}}, "sections": ["default", "raw", "json"], "time": 1536}
{"type": "statistics", "statistics": {"objective": 933, "objectiveBound": 491, "boolVariables": 2877, "failures": 1810, "propagations": 1591508, "solveTime": 1.15201}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 194, 306, 462, 574, 632, 715, 813, 882, 743, 790, 0, 81, 261, 381, 570, 682, 742, 876, 80, 150, 614, 348, 466, 530, 710, 833, 43, 190, 245, 336, 420, 517, 109, 156, 298, 375]);\nobjective = 933;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 194, 306, 462, 574, 632, 715, 813, 882, 743, 790, 0, 81, 261, 381, 570, 682, 742, 876, 80, 150, 614, 348, 466, 530, 710, 833, 43, 190, 245, 336, 420, 517, 109, 156, 298, 375]);\nobjective = 933;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 194, 306, 462, 574, 632, 715, 813, 882, 743, 790, 0, 81, 261, 381, 570, 682, 742, 876, 80, 150, 614, 348, 466, 530, 710, 833, 43, 190, 245, 336, 420, 517, 109, 156, 298, 375],  "objective" : 933,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 2, 1, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 933}}, "sections": ["default", "raw", "json"], "time": 1553}
{"type": "statistics", "statistics": {"objective": 932, "objectiveBound": 491, "boolVariables": 2898, "failures": 1939, "propagations": 1660534, "solveTime": 1.17452}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 194, 306, 448, 562, 617, 700, 784, 881, 808, 790, 0, 81, 261, 381, 535, 682, 737, 876, 80, 150, 614, 348, 481, 538, 720, 833, 43, 189, 244, 385, 490, 583, 109, 156, 281, 333]);\nobjective = 932;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 194, 306, 448, 562, 617, 700, 784, 881, 808, 790, 0, 81, 261, 381, 535, 682, 737, 876, 80, 150, 614, 348, 481, 538, 720, 833, 43, 189, 244, 385, 490, 583, 109, 156, 281, 333]);\nobjective = 932;\nhoist = array1d(0..36, [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 194, 306, 448, 562, 617, 700, 784, 881, 808, 790, 0, 81, 261, 381, 535, 682, 737, 876, 80, 150, 614, 348, 481, 538, 720, 833, 43, 189, 244, 385, 490, 583, 109, 156, 281, 333],  "objective" : 932,  "hoist" : [1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 932}}, "sections": ["default", "raw", "json"], "time": 1576}
{"type": "statistics", "statistics": {"objective": 917, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.18427}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 445, 557, 612, 717, 799, 866, 346, 814, 34, 86, 304, 416, 562, 684, 749, 860, 38, 135, 62, 258, 405, 475, 655, 767, 0, 126, 181, 264, 356, 453, 475, 522, 641, 723]);\nobjective = 917;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 445, 557, 612, 717, 799, 866, 346, 814, 34, 86, 304, 416, 562, 684, 749, 860, 38, 135, 62, 258, 405, 475, 655, 767, 0, 126, 181, 264, 356, 453, 475, 522, 641, 723]);\nobjective = 917;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 445, 557, 612, 717, 799, 866, 346, 814, 34, 86, 304, 416, 562, 684, 749, 860, 38, 135, 62, 258, 405, 475, 655, 767, 0, 126, 181, 264, 356, 453, 475, 522, 641, 723],  "objective" : 917,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 917}}, "sections": ["default", "raw", "json"], "time": 1585}
{"type": "statistics", "statistics": {"objective": 916, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.20274}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 445, 557, 612, 716, 798, 865, 346, 814, 34, 86, 303, 415, 562, 684, 749, 860, 37, 134, 61, 258, 405, 475, 655, 767, 0, 125, 180, 263, 355, 452, 474, 521, 641, 723]);\nobjective = 916;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 445, 557, 612, 716, 798, 865, 346, 814, 34, 86, 303, 415, 562, 684, 749, 860, 37, 134, 61, 258, 405, 475, 655, 767, 0, 125, 180, 263, 355, 452, 474, 521, 641, 723]);\nobjective = 916;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 445, 557, 612, 716, 798, 865, 346, 814, 34, 86, 303, 415, 562, 684, 749, 860, 37, 134, 61, 258, 405, 475, 655, 767, 0, 125, 180, 263, 355, 452, 474, 521, 641, 723],  "objective" : 916,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 916}}, "sections": ["default", "raw", "json"], "time": 1604}
{"type": "statistics", "statistics": {"objective": 915, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.20487}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 445, 557, 612, 715, 797, 864, 345, 814, 34, 86, 303, 415, 562, 684, 749, 860, 37, 133, 61, 258, 405, 475, 655, 767, 0, 125, 180, 263, 355, 452, 474, 521, 641, 723]);\nobjective = 915;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 445, 557, 612, 715, 797, 864, 345, 814, 34, 86, 303, 415, 562, 684, 749, 860, 37, 133, 61, 258, 405, 475, 655, 767, 0, 125, 180, 263, 355, 452, 474, 521, 641, 723]);\nobjective = 915;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 445, 557, 612, 715, 797, 864, 345, 814, 34, 86, 303, 415, 562, 684, 749, 860, 37, 133, 61, 258, 405, 475, 655, 767, 0, 125, 180, 263, 355, 452, 474, 521, 641, 723],  "objective" : 915,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 915}}, "sections": ["default", "raw", "json"], "time": 1606}
{"type": "statistics", "statistics": {"objective": 914, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.20678}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 188, 302, 445, 557, 612, 714, 796, 863, 345, 814, 34, 86, 303, 415, 562, 684, 749, 860, 37, 132, 61, 258, 405, 475, 655, 767, 0, 125, 180, 263, 355, 452, 474, 521, 641, 723]);\nobjective = 914;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 188, 302, 445, 557, 612, 714, 796, 863, 345, 814, 34, 86, 303, 415, 562, 684, 749, 860, 37, 132, 61, 258, 405, 475, 655, 767, 0, 125, 180, 263, 355, 452, 474, 521, 641, 723]);\nobjective = 914;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 188, 302, 445, 557, 612, 714, 796, 863, 345, 814, 34, 86, 303, 415, 562, 684, 749, 860, 37, 132, 61, 258, 405, 475, 655, 767, 0, 125, 180, 263, 355, 452, 474, 521, 641, 723],  "objective" : 914,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 914}}, "sections": ["default", "raw", "json"], "time": 1608}
{"type": "statistics", "statistics": {"objective": 902, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.2086}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 737, 820, 15, 665, 867, 94, 150, 344, 481, 661, 775, 839, 51, 193, 270, 700, 340, 484, 538, 762, 875, 115, 233, 288, 405, 525, 621, 549, 245, 372, 441]);\nobjective = 902;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 737, 820, 15, 665, 867, 94, 150, 344, 481, 661, 775, 839, 51, 193, 270, 700, 340, 484, 538, 762, 875, 115, 233, 288, 405, 525, 621, 549, 245, 372, 441]);\nobjective = 902;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 312, 454, 580, 635, 737, 820, 15, 665, 867, 94, 150, 344, 481, 661, 775, 839, 51, 193, 270, 700, 340, 484, 538, 762, 875, 115, 233, 288, 405, 525, 621, 549, 245, 372, 441],  "objective" : 902,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 902}}, "sections": ["default", "raw", "json"], "time": 1610}
{"type": "statistics", "statistics": {"objective": 901, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.21933}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 736, 819, 15, 665, 866, 94, 150, 344, 481, 661, 775, 837, 51, 193, 270, 699, 339, 484, 538, 762, 874, 115, 233, 288, 405, 525, 621, 549, 245, 372, 441]);\nobjective = 901;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 736, 819, 15, 665, 866, 94, 150, 344, 481, 661, 775, 837, 51, 193, 270, 699, 339, 484, 538, 762, 874, 115, 233, 288, 405, 525, 621, 549, 245, 372, 441]);\nobjective = 901;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 312, 454, 580, 635, 736, 819, 15, 665, 866, 94, 150, 344, 481, 661, 775, 837, 51, 193, 270, 699, 339, 484, 538, 762, 874, 115, 233, 288, 405, 525, 621, 549, 245, 372, 441],  "objective" : 901,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 901}}, "sections": ["default", "raw", "json"], "time": 1621}
{"type": "statistics", "statistics": {"objective": 900, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.25532}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 736, 818, 15, 665, 865, 94, 150, 344, 481, 661, 775, 837, 51, 193, 270, 699, 339, 484, 538, 761, 873, 115, 233, 288, 405, 525, 621, 549, 245, 372, 441]);\nobjective = 900;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 736, 818, 15, 665, 865, 94, 150, 344, 481, 661, 775, 837, 51, 193, 270, 699, 339, 484, 538, 761, 873, 115, 233, 288, 405, 525, 621, 549, 245, 372, 441]);\nobjective = 900;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 312, 454, 580, 635, 736, 818, 15, 665, 865, 94, 150, 344, 481, 661, 775, 837, 51, 193, 270, 699, 339, 484, 538, 761, 873, 115, 233, 288, 405, 525, 621, 549, 245, 372, 441],  "objective" : 900,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 900}}, "sections": ["default", "raw", "json"], "time": 1657}
{"type": "statistics", "statistics": {"objective": 899, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.25748}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 735, 817, 15, 665, 864, 94, 150, 344, 481, 661, 775, 835, 51, 193, 270, 698, 339, 484, 538, 760, 872, 115, 233, 288, 405, 525, 621, 549, 245, 371, 441]);\nobjective = 899;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 735, 817, 15, 665, 864, 94, 150, 344, 481, 661, 775, 835, 51, 193, 270, 698, 339, 484, 538, 760, 872, 115, 233, 288, 405, 525, 621, 549, 245, 371, 441]);\nobjective = 899;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 312, 454, 580, 635, 735, 817, 15, 665, 864, 94, 150, 344, 481, 661, 775, 835, 51, 193, 270, 698, 339, 484, 538, 760, 872, 115, 233, 288, 405, 525, 621, 549, 245, 371, 441],  "objective" : 899,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 899}}, "sections": ["default", "raw", "json"], "time": 1658}
{"type": "statistics", "statistics": {"objective": 898, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.26035}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 734, 816, 15, 665, 863, 94, 150, 344, 481, 660, 775, 835, 51, 193, 270, 697, 337, 483, 537, 759, 871, 115, 233, 288, 404, 524, 620, 548, 245, 370, 440]);\nobjective = 898;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 734, 816, 15, 665, 863, 94, 150, 344, 481, 660, 775, 835, 51, 193, 270, 697, 337, 483, 537, 759, 871, 115, 233, 288, 404, 524, 620, 548, 245, 370, 440]);\nobjective = 898;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 312, 454, 580, 635, 734, 816, 15, 665, 863, 94, 150, 344, 481, 660, 775, 835, 51, 193, 270, 697, 337, 483, 537, 759, 871, 115, 233, 288, 404, 524, 620, 548, 245, 370, 440],  "objective" : 898,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 898}}, "sections": ["default", "raw", "json"], "time": 1661}
{"type": "statistics", "statistics": {"objective": 897, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.27154}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 733, 815, 15, 665, 862, 94, 150, 344, 481, 659, 775, 833, 51, 193, 270, 696, 337, 482, 536, 758, 870, 115, 233, 288, 403, 523, 619, 547, 245, 370, 439]);\nobjective = 897;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 733, 815, 15, 665, 862, 94, 150, 344, 481, 659, 775, 833, 51, 193, 270, 696, 337, 482, 536, 758, 870, 115, 233, 288, 403, 523, 619, 547, 245, 370, 439]);\nobjective = 897;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 312, 454, 580, 635, 733, 815, 15, 665, 862, 94, 150, 344, 481, 659, 775, 833, 51, 193, 270, 696, 337, 482, 536, 758, 870, 115, 233, 288, 403, 523, 619, 547, 245, 370, 439],  "objective" : 897,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 897}}, "sections": ["default", "raw", "json"], "time": 1673}
{"type": "statistics", "statistics": {"objective": 896, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.27453}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 732, 814, 15, 665, 861, 94, 150, 344, 481, 658, 775, 833, 51, 193, 270, 695, 337, 481, 535, 757, 869, 115, 233, 288, 402, 522, 618, 546, 245, 369, 438]);\nobjective = 896;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 190, 312, 454, 580, 635, 732, 814, 15, 665, 861, 94, 150, 344, 481, 658, 775, 833, 51, 193, 270, 695, 337, 481, 535, 757, 869, 115, 233, 288, 402, 522, 618, 546, 245, 369, 438]);\nobjective = 896;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 312, 454, 580, 635, 732, 814, 15, 665, 861, 94, 150, 344, 481, 658, 775, 833, 51, 193, 270, 695, 337, 481, 535, 757, 869, 115, 233, 288, 402, 522, 618, 546, 245, 369, 438],  "objective" : 896,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 2, 1, 1, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 896}}, "sections": ["default", "raw", "json"], "time": 1676}
{"type": "statistics", "statistics": {"objective": 895, "objectiveBound": 491, "boolVariables": 3142, "failures": 2870, "propagations": 2171804, "solveTime": 1.32743}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 344, 41, 158, 210, 406, 518, 720, 840, 895, 115, 253, 340, 81, 248, 383, 465, 645, 763, 33, 145, 200, 294, 424, 491, 653, 605, 738, 791]);\nobjective = 895;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 344, 41, 158, 210, 406, 518, 720, 840, 895, 115, 253, 340, 81, 248, 383, 465, 645, 763, 33, 145, 200, 294, 424, 491, 653, 605, 738, 791]);\nobjective = 895;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 344, 41, 158, 210, 406, 518, 720, 840, 895, 115, 253, 340, 81, 248, 383, 465, 645, 763, 33, 145, 200, 294, 424, 491, 653, 605, 738, 791],  "objective" : 895,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 895}}, "sections": ["default", "raw", "json"], "time": 1728}
{"type": "statistics", "statistics": {"objective": 894, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.38484}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 344, 41, 158, 210, 406, 518, 720, 839, 894, 115, 253, 339, 80, 248, 383, 465, 645, 762, 33, 145, 200, 294, 424, 491, 653, 605, 737, 790]);\nobjective = 894;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 344, 41, 158, 210, 406, 518, 720, 839, 894, 115, 253, 339, 80, 248, 383, 465, 645, 762, 33, 145, 200, 294, 424, 491, 653, 605, 737, 790]);\nobjective = 894;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 344, 41, 158, 210, 406, 518, 720, 839, 894, 115, 253, 339, 80, 248, 383, 465, 645, 762, 33, 145, 200, 294, 424, 491, 653, 605, 737, 790],  "objective" : 894,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 894}}, "sections": ["default", "raw", "json"], "time": 1786}
{"type": "statistics", "statistics": {"objective": 893, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.38727}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 344, 41, 158, 210, 406, 518, 720, 838, 893, 115, 253, 338, 79, 248, 383, 465, 645, 761, 33, 145, 200, 294, 424, 491, 653, 605, 736, 789]);\nobjective = 893;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 344, 41, 158, 210, 406, 518, 720, 838, 893, 115, 253, 338, 79, 248, 383, 465, 645, 761, 33, 145, 200, 294, 424, 491, 653, 605, 736, 789]);\nobjective = 893;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 344, 41, 158, 210, 406, 518, 720, 838, 893, 115, 253, 338, 79, 248, 383, 465, 645, 761, 33, 145, 200, 294, 424, 491, 653, 605, 736, 789],  "objective" : 893,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 893}}, "sections": ["default", "raw", "json"], "time": 1788}
{"type": "statistics", "statistics": {"objective": 892, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.39209}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 837, 892, 115, 253, 337, 78, 248, 383, 465, 645, 760, 33, 145, 200, 294, 424, 491, 653, 605, 735, 788]);\nobjective = 892;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 837, 892, 115, 253, 337, 78, 248, 383, 465, 645, 760, 33, 145, 200, 294, 424, 491, 653, 605, 735, 788]);\nobjective = 892;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 837, 892, 115, 253, 337, 78, 248, 383, 465, 645, 760, 33, 145, 200, 294, 424, 491, 653, 605, 735, 788],  "objective" : 892,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 892}}, "sections": ["default", "raw", "json"], "time": 1793}
{"type": "statistics", "statistics": {"objective": 891, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.39597}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 891, 115, 253, 336, 77, 248, 383, 465, 645, 759, 33, 145, 200, 294, 424, 491, 651, 603, 734, 787]);\nobjective = 891;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 891, 115, 253, 336, 77, 248, 383, 465, 645, 759, 33, 145, 200, 294, 424, 491, 651, 603, 734, 787]);\nobjective = 891;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 891, 115, 253, 336, 77, 248, 383, 465, 645, 759, 33, 145, 200, 294, 424, 491, 651, 603, 734, 787],  "objective" : 891,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 891}}, "sections": ["default", "raw", "json"], "time": 1797}
{"type": "statistics", "statistics": {"objective": 890, "objectiveBound": 491, "boolVariables": 3240, "failures": 3277, "propagations": 2402770, "solveTime": 1.41675}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 1, 115, 253, 336, 77, 249, 383, 465, 645, 759, 34, 146, 201, 295, 424, 491, 653, 605, 734, 787]);\nobjective = 890;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 1, 115, 253, 336, 77, 249, 383, 465, 645, 759, 34, 146, 201, 295, 424, 491, 653, 605, 734, 787]);\nobjective = 890;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 1, 115, 253, 336, 77, 249, 383, 465, 645, 759, 34, 146, 201, 295, 424, 491, 653, 605, 734, 787],  "objective" : 890,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 890}}, "sections": ["default", "raw", "json"], "time": 1818}
{"type": "statistics", "statistics": {"objective": 889, "objectiveBound": 491, "boolVariables": 3257, "failures": 3307, "propagations": 2422793, "solveTime": 1.42721}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 2, 115, 253, 336, 77, 250, 383, 465, 645, 759, 35, 147, 202, 296, 424, 491, 653, 605, 734, 787]);\nobjective = 889;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 2, 115, 253, 336, 77, 250, 383, 465, 645, 759, 35, 147, 202, 296, 424, 491, 653, 605, 734, 787]);\nobjective = 889;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 2, 115, 253, 336, 77, 250, 383, 465, 645, 759, 35, 147, 202, 296, 424, 491, 653, 605, 734, 787],  "objective" : 889,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 889}}, "sections": ["default", "raw", "json"], "time": 1828}
{"type": "statistics", "statistics": {"objective": 888, "objectiveBound": 491, "boolVariables": 3326, "failures": 3798, "propagations": 2705685, "solveTime": 1.55143}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 3, 115, 253, 336, 78, 251, 383, 465, 645, 759, 36, 148, 203, 297, 424, 491, 653, 605, 734, 787]);\nobjective = 888;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 3, 115, 253, 336, 78, 251, 383, 465, 645, 759, 36, 148, 203, 297, 424, 491, 653, 605, 734, 787]);\nobjective = 888;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 767, 834, 343, 41, 158, 210, 406, 518, 720, 836, 3, 115, 253, 336, 78, 251, 383, 465, 645, 759, 36, 148, 203, 297, 424, 491, 653, 605, 734, 787],  "objective" : 888,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 2, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 888}}, "sections": ["default", "raw", "json"], "time": 1953}
{"type": "statistics", "statistics": {"objective": 886, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.57251}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 189, 305, 447, 559, 614, 697, 799, 0, 724, 49, 166, 218, 398, 510, 652, 768, 833, 46, 178, 263, 489, 225, 342, 396, 576, 688, 841, 92, 147, 271, 353, 441, 78, 541, 658, 716]);\nobjective = 886;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 189, 305, 447, 559, 614, 697, 799, 0, 724, 49, 166, 218, 398, 510, 652, 768, 833, 46, 178, 263, 489, 225, 342, 396, 576, 688, 841, 92, 147, 271, 353, 441, 78, 541, 658, 716]);\nobjective = 886;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 189, 305, 447, 559, 614, 697, 799, 0, 724, 49, 166, 218, 398, 510, 652, 768, 833, 46, 178, 263, 489, 225, 342, 396, 576, 688, 841, 92, 147, 271, 353, 441, 78, 541, 658, 716],  "objective" : 886,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 2, 1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0],  "_objective" : 886}}, "sections": ["default", "raw", "json"], "time": 1974}
{"type": "statistics", "statistics": {"objective": 869, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.57939}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 855, 472, 778, 34, 86, 266, 378, 520, 652, 717, 824, 68, 135, 557, 220, 344, 426, 619, 731, 31, 153, 208, 291, 383, 480, 656, 120, 245, 327]);\nobjective = 869;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 547, 602, 685, 783, 855, 472, 778, 34, 86, 266, 378, 520, 652, 717, 824, 68, 135, 557, 220, 344, 426, 619, 731, 31, 153, 208, 291, 383, 480, 656, 120, 245, 327]);\nobjective = 869;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 547, 602, 685, 783, 855, 472, 778, 34, 86, 266, 378, 520, 652, 717, 824, 68, 135, 557, 220, 344, 426, 619, 731, 31, 153, 208, 291, 383, 480, 656, 120, 245, 327],  "objective" : 869,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 1, 1, 2, 1, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0],  "_objective" : 869}}, "sections": ["default", "raw", "json"], "time": 1982}
{"type": "statistics", "statistics": {"objective": 845, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.64455}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 444, 556, 611, 694, 778, 845, 328, 501, 648, 730, 86, 213, 415, 544, 609, 752, 49, 137, 27, 250, 387, 446, 676, 798, 145, 292, 354, 497, 639, 711, 384, 79, 196, 248]);\nobjective = 845;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 444, 556, 611, 694, 778, 845, 328, 501, 648, 730, 86, 213, 415, 544, 609, 752, 49, 137, 27, 250, 387, 446, 676, 798, 145, 292, 354, 497, 639, 711, 384, 79, 196, 248]);\nobjective = 845;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 444, 556, 611, 694, 778, 845, 328, 501, 648, 730, 86, 213, 415, 544, 609, 752, 49, 137, 27, 250, 387, 446, 676, 798, 145, 292, 354, 497, 639, 711, 384, 79, 196, 248],  "objective" : 845,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 845}}, "sections": ["default", "raw", "json"], "time": 2046}
{"type": "statistics", "statistics": {"objective": 844, "objectiveBound": 491, "boolVariables": 3428, "failures": 4224, "propagations": 2967147, "solveTime": 1.65635}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 444, 556, 611, 694, 778, 1, 328, 501, 648, 730, 86, 213, 415, 544, 609, 752, 49, 137, 28, 250, 387, 446, 676, 798, 146, 293, 354, 497, 639, 711, 384, 80, 197, 249]);\nobjective = 844;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 444, 556, 611, 694, 778, 1, 328, 501, 648, 730, 86, 213, 415, 544, 609, 752, 49, 137, 28, 250, 387, 446, 676, 798, 146, 293, 354, 497, 639, 711, 384, 80, 197, 249]);\nobjective = 844;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 444, 556, 611, 694, 778, 1, 328, 501, 648, 730, 86, 213, 415, 544, 609, 752, 49, 137, 28, 250, 387, 446, 676, 798, 146, 293, 354, 497, 639, 711, 384, 80, 197, 249],  "objective" : 844,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 844}}, "sections": ["default", "raw", "json"], "time": 2064}
{"type": "statistics", "statistics": {"objective": 782, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.66329}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 293, 435, 552, 617, 700, 4, 86, 472, 519, 654, 736, 166, 290, 471, 587, 642, 759, 59, 126, 538, 220, 337, 389, 600, 727, 87, 199, 254, 337, 434, 511, 364, 694, 55, 112]);\nobjective = 782;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 293, 435, 552, 617, 700, 4, 86, 472, 519, 654, 736, 166, 290, 471, 587, 642, 759, 59, 126, 538, 220, 337, 389, 600, 727, 87, 199, 254, 337, 434, 511, 364, 694, 55, 112]);\nobjective = 782;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 293, 435, 552, 617, 700, 4, 86, 472, 519, 654, 736, 166, 290, 471, 587, 642, 759, 59, 126, 538, 220, 337, 389, 600, 727, 87, 199, 254, 337, 434, 511, 364, 694, 55, 112],  "objective" : 782,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 1, 1, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0],  "_objective" : 782}}, "sections": ["default", "raw", "json"], "time": 2064}
{"type": "statistics", "statistics": {"objective": 778, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.9026}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 294, 465, 577, 638, 769, 78, 166, 668, 502, 649, 724, 126, 253, 395, 542, 607, 692, 49, 137, 24, 220, 349, 420, 611, 731, 97, 213, 268, 352, 469, 563, 379, 311, 433, 507]);\nobjective = 778;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 294, 465, 577, 638, 769, 78, 166, 668, 502, 649, 724, 126, 253, 395, 542, 607, 692, 49, 137, 24, 220, 349, 420, 611, 731, 97, 213, 268, 352, 469, 563, 379, 311, 433, 507]);\nobjective = 778;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 294, 465, 577, 638, 769, 78, 166, 668, 502, 649, 724, 126, 253, 395, 542, 607, 692, 49, 137, 24, 220, 349, 420, 611, 731, 97, 213, 268, 352, 469, 563, 379, 311, 433, 507],  "objective" : 778,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 2, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 778}}, "sections": ["default", "raw", "json"], "time": 2304}
{"type": "statistics", "statistics": {"objective": 768, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1.9847}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 210, 322, 518, 634, 689, 4, 86, 171, 555, 483, 609, 662, 107, 242, 444, 558, 623, 717, 49, 142, 362, 279, 416, 493, 701, 75, 275, 399, 454, 591, 733, 38, 204, 156, 303, 355]);\nobjective = 768;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 210, 322, 518, 634, 689, 4, 86, 171, 555, 483, 609, 662, 107, 242, 444, 558, 623, 717, 49, 142, 362, 279, 416, 493, 701, 75, 275, 399, 454, 591, 733, 38, 204, 156, 303, 355]);\nobjective = 768;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 210, 322, 518, 634, 689, 4, 86, 171, 555, 483, 609, 662, 107, 242, 444, 558, 623, 717, 49, 142, 362, 279, 416, 493, 701, 75, 275, 399, 454, 591, 733, 38, 204, 156, 303, 355],  "objective" : 768,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0],  "_objective" : 768}}, "sections": ["default", "raw", "json"], "time": 2386}
{"type": "statistics", "statistics": {"objective": 745, "objectiveBound": 491, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 2.26897}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 317, 518, 635, 700, 71, 213, 280, 456, 408, 546, 598, 36, 150, 344, 464, 529, 668, 24, 100, 48, 255, 372, 427, 616, 734, 191, 333, 388, 497, 579, 651, 673, 100, 219, 289]);\nobjective = 745;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 317, 518, 635, 700, 71, 213, 280, 456, 408, 546, 598, 36, 150, 344, 464, 529, 668, 24, 100, 48, 255, 372, 427, 616, 734, 191, 333, 388, 497, 579, 651, 673, 100, 219, 289]);\nobjective = 745;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 317, 518, 635, 700, 71, 213, 280, 456, 408, 546, 598, 36, 150, 344, 464, 529, 668, 24, 100, 48, 255, 372, 427, 616, 734, 191, 333, 388, 497, 579, 651, 673, 100, 219, 289],  "objective" : 745,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 745}}, "sections": ["default", "raw", "json"], "time": 2670}
{"type": "statistics", "statistics": {"objective": 744, "objectiveBound": 492, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 2.39166}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 204, 316, 517, 634, 699, 71, 167, 264, 455, 407, 545, 597, 36, 149, 343, 464, 529, 667, 24, 100, 48, 254, 371, 427, 616, 733, 190, 333, 388, 497, 579, 651, 673, 100, 218, 289]);\nobjective = 744;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 204, 316, 517, 634, 699, 71, 167, 264, 455, 407, 545, 597, 36, 149, 343, 464, 529, 667, 24, 100, 48, 254, 371, 427, 616, 733, 190, 333, 388, 497, 579, 651, 673, 100, 218, 289]);\nobjective = 744;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 204, 316, 517, 634, 699, 71, 167, 264, 455, 407, 545, 597, 36, 149, 343, 464, 529, 667, 24, 100, 48, 254, 371, 427, 616, 733, 190, 333, 388, 497, 579, 651, 673, 100, 218, 289],  "objective" : 744,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 744}}, "sections": ["default", "raw", "json"], "time": 2793}
{"type": "statistics", "statistics": {"objective": 743, "objectiveBound": 492, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 2.42158}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 203, 315, 516, 633, 698, 71, 166, 263, 454, 406, 544, 596, 36, 148, 342, 464, 529, 666, 24, 100, 48, 253, 370, 427, 616, 732, 189, 333, 388, 497, 579, 651, 673, 100, 217, 289]);\nobjective = 743;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 203, 315, 516, 633, 698, 71, 166, 263, 454, 406, 544, 596, 36, 148, 342, 464, 529, 666, 24, 100, 48, 253, 370, 427, 616, 732, 189, 333, 388, 497, 579, 651, 673, 100, 217, 289]);\nobjective = 743;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 203, 315, 516, 633, 698, 71, 166, 263, 454, 406, 544, 596, 36, 148, 342, 464, 529, 666, 24, 100, 48, 253, 370, 427, 616, 732, 189, 333, 388, 497, 579, 651, 673, 100, 217, 289],  "objective" : 743,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 743}}, "sections": ["default", "raw", "json"], "time": 2823}
{"type": "statistics", "statistics": {"objective": 742, "objectiveBound": 492, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 2.42852}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 202, 314, 515, 632, 697, 71, 165, 262, 453, 405, 543, 595, 36, 148, 341, 462, 527, 665, 23, 100, 47, 252, 369, 425, 614, 730, 188, 331, 386, 495, 577, 649, 671, 99, 216, 287]);\nobjective = 742;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 202, 314, 515, 632, 697, 71, 165, 262, 453, 405, 543, 595, 36, 148, 341, 462, 527, 665, 23, 100, 47, 252, 369, 425, 614, 730, 188, 331, 386, 495, 577, 649, 671, 99, 216, 287]);\nobjective = 742;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 202, 314, 515, 632, 697, 71, 165, 262, 453, 405, 543, 595, 36, 148, 341, 462, 527, 665, 23, 100, 47, 252, 369, 425, 614, 730, 188, 331, 386, 495, 577, 649, 671, 99, 216, 287],  "objective" : 742,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 742}}, "sections": ["default", "raw", "json"], "time": 2834}
{"type": "statistics", "statistics": {"objective": 741, "objectiveBound": 492, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 2.50415}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 201, 313, 514, 631, 696, 71, 164, 261, 452, 404, 542, 594, 36, 148, 340, 460, 525, 664, 22, 100, 46, 251, 368, 423, 612, 728, 187, 329, 384, 493, 575, 647, 669, 98, 215, 285]);\nobjective = 741;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 201, 313, 514, 631, 696, 71, 164, 261, 452, 404, 542, 594, 36, 148, 340, 460, 525, 664, 22, 100, 46, 251, 368, 423, 612, 728, 187, 329, 384, 493, 575, 647, 669, 98, 215, 285]);\nobjective = 741;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 201, 313, 514, 631, 696, 71, 164, 261, 452, 404, 542, 594, 36, 148, 340, 460, 525, 664, 22, 100, 46, 251, 368, 423, 612, 728, 187, 329, 384, 493, 575, 647, 669, 98, 215, 285],  "objective" : 741,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 741}}, "sections": ["default", "raw", "json"], "time": 2906}
{"type": "statistics", "statistics": {"objective": 732, "objectiveBound": 492, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 2.65556}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 190, 308, 493, 622, 687, 71, 153, 227, 249, 416, 533, 585, 36, 148, 335, 460, 515, 655, 22, 100, 46, 251, 368, 423, 603, 719, 182, 329, 384, 467, 549, 638, 660, 98, 215, 285]);\nobjective = 732;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 190, 308, 493, 622, 687, 71, 153, 227, 249, 416, 533, 585, 36, 148, 335, 460, 515, 655, 22, 100, 46, 251, 368, 423, 603, 719, 182, 329, 384, 467, 549, 638, 660, 98, 215, 285]);\nobjective = 732;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 190, 308, 493, 622, 687, 71, 153, 227, 249, 416, 533, 585, 36, 148, 335, 460, 515, 655, 22, 100, 46, 251, 368, 423, 603, 719, 182, 329, 384, 467, 549, 638, 660, 98, 215, 285],  "objective" : 732,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 732}}, "sections": ["default", "raw", "json"], "time": 3057}
{"type": "statistics", "statistics": {"objective": 729, "objectiveBound": 492, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 3.65098}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 206, 322, 464, 581, 646, 41, 169, 251, 676, 359, 492, 544, 37, 153, 295, 424, 489, 614, 0, 72, 94, 270, 391, 446, 651, 64, 206, 348, 407, 517, 614, 686, 544, 101, 234, 304]);\nobjective = 729;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 206, 322, 464, 581, 646, 41, 169, 251, 676, 359, 492, 544, 37, 153, 295, 424, 489, 614, 0, 72, 94, 270, 391, 446, 651, 64, 206, 348, 407, 517, 614, 686, 544, 101, 234, 304]);\nobjective = 729;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 206, 322, 464, 581, 646, 41, 169, 251, 676, 359, 492, 544, 37, 153, 295, 424, 489, 614, 0, 72, 94, 270, 391, 446, 651, 64, 206, 348, 407, 517, 614, 686, 544, 101, 234, 304],  "objective" : 729,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 1, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 729}}, "sections": ["default", "raw", "json"], "time": 4052}
{"type": "statistics", "statistics": {"objective": 724, "objectiveBound": 492, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 3.84958}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 307, 483, 600, 665, 41, 138, 216, 68, 378, 511, 563, 56, 168, 310, 450, 515, 633, 19, 91, 243, 205, 342, 412, 592, 708, 131, 277, 342, 425, 545, 627, 649, 244, 379, 461]);\nobjective = 724;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 307, 483, 600, 665, 41, 138, 216, 68, 378, 511, 563, 56, 168, 310, 450, 515, 633, 19, 91, 243, 205, 342, 412, 592, 708, 131, 277, 342, 425, 545, 627, 649, 244, 379, 461]);\nobjective = 724;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 307, 483, 600, 665, 41, 138, 216, 68, 378, 511, 563, 56, 168, 310, 450, 515, 633, 19, 91, 243, 205, 342, 412, 592, 708, 131, 277, 342, 425, 545, 627, 649, 244, 379, 461],  "objective" : 724,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 1, 2, 2, 1, 2, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 724}}, "sections": ["default", "raw", "json"], "time": 4251}
{"type": "statistics", "statistics": {"objective": 723, "objectiveBound": 499, "boolVariables": 1917, "failures": 75806, "propagations": 26547620, "solveTime": 9.30796}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 297, 442, 584, 639, 722, 141, 216, 238, 551, 685, 44, 274, 415, 564, 689, 31, 114, 237, 334, 356, 387, 515, 589, 79, 194, 348, 474, 531, 642, 61, 157, 85, 313, 430, 482]);\nobjective = 723;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 297, 442, 584, 639, 722, 141, 216, 238, 551, 685, 44, 274, 415, 564, 689, 31, 114, 237, 334, 356, 387, 515, 589, 79, 194, 348, 474, 531, 642, 61, 157, 85, 313, 430, 482]);\nobjective = 723;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 297, 442, 584, 639, 722, 141, 216, 238, 551, 685, 44, 274, 415, 564, 689, 31, 114, 237, 334, 356, 387, 515, 589, 79, 194, 348, 474, 531, 642, 61, 157, 85, 313, 430, 482],  "objective" : 723,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 723}}, "sections": ["default", "raw", "json"], "time": 9709}
{"type": "statistics", "statistics": {"objective": 722, "objectiveBound": 499, "boolVariables": 1920, "failures": 75806, "propagations": 26550305, "solveTime": 9.31305}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 297, 442, 584, 639, 722, 142, 216, 238, 551, 684, 44, 274, 415, 564, 689, 32, 115, 237, 334, 356, 387, 515, 589, 79, 195, 348, 474, 531, 642, 62, 158, 86, 313, 430, 482]);\nobjective = 722;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 297, 442, 584, 639, 722, 142, 216, 238, 551, 684, 44, 274, 415, 564, 689, 32, 115, 237, 334, 356, 387, 515, 589, 79, 195, 348, 474, 531, 642, 62, 158, 86, 313, 430, 482]);\nobjective = 722;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 297, 442, 584, 639, 722, 142, 216, 238, 551, 684, 44, 274, 415, 564, 689, 32, 115, 237, 334, 356, 387, 515, 589, 79, 195, 348, 474, 531, 642, 62, 158, 86, 313, 430, 482],  "objective" : 722,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 722}}, "sections": ["default", "raw", "json"], "time": 9720}
{"type": "statistics", "statistics": {"objective": 720, "objectiveBound": 500, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 9.569290000000001}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 181, 297, 442, 584, 639, 2, 144, 216, 238, 551, 682, 44, 274, 415, 564, 689, 34, 117, 237, 334, 356, 387, 515, 589, 79, 197, 348, 474, 531, 642, 64, 160, 88, 313, 430, 482]);\nobjective = 720;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 181, 297, 442, 584, 639, 2, 144, 216, 238, 551, 682, 44, 274, 415, 564, 689, 34, 117, 237, 334, 356, 387, 515, 589, 79, 197, 348, 474, 531, 642, 64, 160, 88, 313, 430, 482]);\nobjective = 720;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 181, 297, 442, 584, 639, 2, 144, 216, 238, 551, 682, 44, 274, 415, 564, 689, 34, 117, 237, 334, 356, 387, 515, 589, 79, 197, 348, 474, 531, 642, 64, 160, 88, 313, 430, 482],  "objective" : 720,  "hoist" : [1, 1, 1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 0, 0],  "_objective" : 720}}, "sections": ["default", "raw", "json"], "time": 9971}
{"type": "statistics", "statistics": {"objective": 714, "objectiveBound": 578, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 261.93}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 220, 362, 556, 688, 39, 122, 252, 325, 596, 643, 76, 158, 372, 484, 661, 89, 154, 296, 438, 516, 315, 51, 191, 243, 446, 582, 12, 124, 185, 283, 409, 481, 503, 411, 557, 610]);\nobjective = 714;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 220, 362, 556, 688, 39, 122, 252, 325, 596, 643, 76, 158, 372, 484, 661, 89, 154, 296, 438, 516, 315, 51, 191, 243, 446, 582, 12, 124, 185, 283, 409, 481, 503, 411, 557, 610]);\nobjective = 714;\nhoist = array1d(0..36, [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 220, 362, 556, 688, 39, 122, 252, 325, 596, 643, 76, 158, 372, 484, 661, 89, 154, 296, 438, 516, 315, 51, 191, 243, 446, 582, 12, 124, 185, 283, 409, 481, 503, 411, 557, 610],  "objective" : 714,  "hoist" : [1, 1, 1, 1, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 1, 1, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0],  "_objective" : 714}}, "sections": ["default", "raw", "json"], "time": 262331}
{"type": "statistics", "statistics": {"objective": 713, "objectiveBound": 579, "boolVariables": 1932, "failures": 1667263, "propagations": 574723076, "solveTime": 270.788}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 209, 346, 488, 600, 665, 41, 172, 244, 266, 313, 445, 513, 712, 137, 333, 445, 510, 633, 31, 100, 386, 406, 550, 632, 113, 225, 367, 480, 541, 672, 73, 148, 571, 83, 200, 253]);\nobjective = 713;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 209, 346, 488, 600, 665, 41, 172, 244, 266, 313, 445, 513, 712, 137, 333, 445, 510, 633, 31, 100, 386, 406, 550, 632, 113, 225, 367, 480, 541, 672, 73, 148, 571, 83, 200, 253]);\nobjective = 713;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 209, 346, 488, 600, 665, 41, 172, 244, 266, 313, 445, 513, 712, 137, 333, 445, 510, 633, 31, 100, 386, 406, 550, 632, 113, 225, 367, 480, 541, 672, 73, 148, 571, 83, 200, 253],  "objective" : 713,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],  "_objective" : 713}}, "sections": ["default", "raw", "json"], "time": 271190}
{"type": "statistics", "statistics": {"objective": 712, "objectiveBound": 579, "boolVariables": 1935, "failures": 1667263, "propagations": 574725538, "solveTime": 270.8}}
{"type": "solution", "output": {"default": "r = array1d(0..36, [0, 209, 346, 488, 600, 665, 41, 172, 244, 266, 313, 445, 513, 712, 137, 333, 445, 510, 633, 32, 100, 386, 407, 550, 632, 114, 226, 368, 480, 541, 672, 73, 149, 571, 84, 201, 254]);\nobjective = 712;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "raw": "r = array1d(0..36, [0, 209, 346, 488, 600, 665, 41, 172, 244, 266, 313, 445, 513, 712, 137, 333, 445, 510, 633, 32, 100, 386, 407, 550, 632, 114, 226, 368, 480, 541, 672, 73, 149, 571, 84, 201, 254]);\nobjective = 712;\nhoist = array1d(0..36, [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2]);\n", "json": {  "r" : [0, 209, 346, 488, 600, 665, 41, 172, 244, 266, 313, 445, 513, 712, 137, 333, 445, 510, 633, 32, 100, 386, 407, 550, 632, 114, 226, 368, 480, 541, 672, 73, 149, 571, 84, 201, 254],  "objective" : 712,  "hoist" : [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 2, 1, 2, 1, 1, 2, 1, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2],  "B" : [0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],  "_objective" : 712}}, "sections": ["default", "raw", "json"], "time": 271202}
{"type": "status", "status": "OPTIMAL_SOLUTION", "time": 1103678}
{"type": "statistics", "statistics": {"nSolutions": 127}}
{"type": "statistics", "statistics": {"objective": 712, "objectiveBound": 712, "boolVariables": 1905, "failures": 0, "propagations": 31588, "solveTime": 1103.27}}
